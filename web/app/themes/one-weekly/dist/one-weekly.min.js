/*! One Weekly - v0.1.0 - 2014-04-11
* http://weekly.onedesigncompany.com
* Copyright (c) 2014 Brian Hanson; Licensed  */

"use strict";var THREE={REVISION:"66"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!self.requestAnimationFrame;++c)self.requestAnimationFrame=self[b[c]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[b[c]+"CancelAnimationFrame"]||self[b[c]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(b){var c=Date.now(),d=Math.max(0,16-(c-a)),e=self.setTimeout(function(){b(c+d)},d);return a=c+d,e}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(a){self.clearTimeout(a)})}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){return a instanceof THREE.Color?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){return 0>c&&(c+=1),c>1&&(c-=1),1/6>c?a+6*(b-a)*c:.5>c?b:2/3>c?a+6*(b-a)*(2/3-c):a};b=.5>=c?c*(1+b):c+b-c*b,c=2*c-b,this.r=d(c,b,a+1/3),this.g=d(c,b,a),this.b=d(c,b,a-1/3)}return this},setStyle:function(a){return/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a)?(a=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this):/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a)?(a=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a),this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this):/^\#([0-9a-f]{6})$/i.test(a)?(a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this):/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a)?(a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this):/^(\w+)$/i.test(a)?(this.setHex(THREE.ColorKeywords[a]),this):void 0},copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a){return this.r=a.r*a.r,this.g=a.g*a.g,this.b=a.b*a.b,this},copyLinearToGamma:function(a){return this.r=Math.sqrt(a.r),this.g=Math.sqrt(a.g),this.b=Math.sqrt(a.b),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b,c=this.r,d=this.g,e=this.b,f=Math.max(c,d,e),g=Math.min(c,d,e),h=(g+f)/2;if(g===f)g=b=0;else{var i=f-g,g=.5>=h?i/(f+g):i/(2-f-g);switch(f){case c:b=(d-e)/i+(e>d?6:0);break;case d:b=(e-c)/i+2;break;case e:b=(c-d)/i+4}b/=6}return a.h=b,a.s=g,a.l=h,a},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();return d.h+=a,d.s+=b,d.l+=c,this.setHSL(d.h,d.s,d.l),this},add:function(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this},addColors:function(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this},addScalar:function(a){return this.r+=a,this.g+=a,this.b+=a,this},multiply:function(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this},multiplyScalar:function(a){return this.r*=a,this.g*=a,this.b*=a,this},lerp:function(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){return this.r=a[0],this.g=a[1],this.b=a[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._w=void 0!==d?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(a){this._x=a,this._updateEuler()},get y(){return this._y},set y(a){this._y=a,this._updateEuler()},get z(){return this._z},set z(a){this._z=a,this._updateEuler()},get w(){return this._w},set w(a){this._w=a,this._updateEuler()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._updateEuler(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._w=a._w,this._updateEuler(),this},setFromEuler:function(a,b){if(!1==a instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);return"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h),!1!==b&&this._updateEuler(),this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._updateEuler(),this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],i=b[6],b=b[10],j=c+f+b;return j>0?(c=.5/Math.sqrt(j+1),this._w=.25/c,this._x=(i-g)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this._w=(i-g)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=.25*c,this._z=(g+i)/c):(c=2*Math.sqrt(1+b-c-f),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(g+i)/c,this._z=.25*c),this._updateEuler(),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._updateEuler(),this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();return 0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a),this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._updateEuler(),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},slerp:function(a,b){var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);return.001>Math.abs(i)?(this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this):(g=Math.sin((1-b)*h)/i,h=Math.sin(b*h)/i,this._w=f*g+this._w*h,this._x=c*g+this._x*h,this._y=d*g+this._y*h,this._z=e*g+this._z*h,this._updateEuler(),this)},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],this._w=a[3],this._updateEuler(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScalar:function(a){return this.x+=a,this.y+=a,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divideScalar:function(a){return 0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0,this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this},clampScalar:function(){var a,b;return function(c,d){return void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2),a.set(c,c),b.set(d,d),this.clamp(a,b)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;return a=this.y-a.y,b*b+a*a},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){return this.x=a[0],this.y=a[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyEuler:function(){var a;return function(b){return!1==b instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."),void 0===a&&(a=new THREE.Quaternion),this.applyQuaternion(a.setFromEuler(b)),this}}(),applyAxisAngle:function(){var a;return function(b,c){return void 0===a&&(a=new THREE.Quaternion),this.applyQuaternion(a.setFromAxisAngle(b,c)),this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;return a=a.elements,this.x=a[0]*b+a[3]*c+a[6]*d,this.y=a[1]*b+a[4]*c+a[7]*d,this.z=a[2]*b+a[5]*c+a[8]*d,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;return a=a.elements,this.x=a[0]*b+a[4]*c+a[8]*d+a[12],this.y=a[1]*b+a[5]*c+a[9]*d+a[13],this.z=a[2]*b+a[6]*c+a[10]*d+a[14],this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);return this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e,this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e,this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e,this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z;a=a.w;var h=a*b+f*d-g*c,i=a*c+g*b-e*d,j=a*d+e*c-f*b,b=-e*b-f*c-g*d;return this.x=h*a+b*-e+i*-g-j*-f,this.y=i*a+b*-f+j*-e-h*-g,this.z=j*a+b*-g+h*-f-i*-e,this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z;return a=a.elements,this.x=a[0]*b+a[4]*c+a[8]*d,this.y=a[1]*b+a[5]*c+a[9]*d,this.z=a[2]*b+a[6]*c+a[10]*d,this.normalize(),this},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){return 0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0,this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this},clampScalar:function(){var a,b;return function(c,d){return void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3),a.set(c,c,c),b.set(d,d,d),this.clamp(a,b)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;return this.x=d*a.z-e*a.y,this.y=e*a.x-c*a.z,this.z=c*a.y-d*a.x,this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this},projectOnVector:function(){var a,b;return function(c){return void 0===a&&(a=new THREE.Vector3),a.copy(c).normalize(),b=this.dot(a),this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){return void 0===a&&(a=new THREE.Vector3),a.copy(this).projectOnVector(b),this.sub(a)}}(),reflect:function(){var a;return function(b){return void 0===a&&(a=new THREE.Vector3),this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){return a=this.dot(a)/(this.length()*a.length()),Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return a=this.z-a.z,b*b+c*c+a*a},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(a){return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."),this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."),this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."),this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();return a=this.set(a.elements[8],a.elements[9],a.elements[10]).length(),this.x=b,this.y=c,this.z=a,this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;return this.x=d[c],this.y=d[c+1],this.z=d[c+2],this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setW:function(a){return this.w=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;return a=a.elements,this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e,this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e,this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e,this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e,this},divideScalar:function(a){return 0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1),this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);return 1e-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],i=a[9];c=a[2],b=a[6];var j=a[10];return.01>Math.abs(d-g)&&.01>Math.abs(f-c)&&.01>Math.abs(i-b)?.1>Math.abs(d+g)&&.1>Math.abs(f+c)&&.1>Math.abs(i+b)&&.1>Math.abs(e+h+j-3)?(this.set(1,0,0,0),this):(a=Math.PI,e=(e+1)/2,h=(h+1)/2,j=(j+1)/2,d=(d+g)/4,f=(f+c)/4,i=(i+b)/4,e>h&&e>j?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=f/b):h>j?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=i/c):.01>j?(c=b=.707106781,d=0):(d=Math.sqrt(j),b=f/d,c=i/d),this.set(b,c,d,a),this):(a=Math.sqrt((b-i)*(b-i)+(f-c)*(f-c)+(g-d)*(g-d)),.001>Math.abs(a)&&(a=1),this.x=(b-i)/a,this.y=(f-c)/a,this.z=(g-d)/a,this.w=Math.acos((e+h+j-1)/2),this)},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this.w>a.w&&(this.w=a.w),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this.w<a.w&&(this.w=a.w),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w),this},clampScalar:function(){var a,b;return function(c,d){return void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4),a.set(c,c,c,c),b.set(d,d,d,d),this.clamp(a,b)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this.w=a[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._order=d||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(a){this._x=a,this._updateQuaternion()},get y(){return this._y},set y(a){this._y=a,this._updateQuaternion()},get z(){return this._z},set z(a){this._z=a,this._updateQuaternion()},get order(){return this._order},set order(a){this._order=a,this._updateQuaternion()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._order=d||this._order,this._updateQuaternion(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._updateQuaternion(),this},setFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],d=d[10];return b=b||this._order,"XYZ"===b?(this._y=Math.asin(c(g)),.99999>Math.abs(g)?(this._x=Math.atan2(-j,d),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0)):"YXZ"===b?(this._x=Math.asin(-c(j)),.99999>Math.abs(j)?(this._y=Math.atan2(g,d),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0)):"ZXY"===b?(this._x=Math.asin(c(l)),.99999>Math.abs(l)?(this._y=Math.atan2(-k,d),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e))):"ZYX"===b?(this._y=Math.asin(-c(k)),.99999>Math.abs(k)?(this._x=Math.atan2(l,d),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i))):"YZX"===b?(this._z=Math.asin(c(h)),.99999>Math.abs(h)?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,d))):"XZY"===b?(this._z=Math.asin(-c(f)),.99999>Math.abs(f)?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,d),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+b),this._order=b,this._updateQuaternion(),this},setFromQuaternion:function(a,b,c){function d(a){return Math.min(Math.max(a,-1),1)}var e=a.x*a.x,f=a.y*a.y,g=a.z*a.z,h=a.w*a.w;return b=b||this._order,"XYZ"===b?(this._x=Math.atan2(2*(a.x*a.w-a.y*a.z),h-e-f+g),this._y=Math.asin(d(2*(a.x*a.z+a.y*a.w))),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h+e-f-g)):"YXZ"===b?(this._x=Math.asin(d(2*(a.x*a.w-a.y*a.z))),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h-e-f+g),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h-e+f-g)):"ZXY"===b?(this._x=Math.asin(d(2*(a.x*a.w+a.y*a.z))),this._y=Math.atan2(2*(a.y*a.w-a.z*a.x),h-e-f+g),this._z=Math.atan2(2*(a.z*a.w-a.x*a.y),h-e+f-g)):"ZYX"===b?(this._x=Math.atan2(2*(a.x*a.w+a.z*a.y),h-e-f+g),this._y=Math.asin(d(2*(a.y*a.w-a.x*a.z))),this._z=Math.atan2(2*(a.x*a.y+a.z*a.w),h+e-f-g)):"YZX"===b?(this._x=Math.atan2(2*(a.x*a.w-a.z*a.y),h-e+f-g),this._y=Math.atan2(2*(a.y*a.w-a.x*a.z),h+e-f-g),this._z=Math.asin(d(2*(a.x*a.y+a.z*a.w)))):"XZY"===b?(this._x=Math.atan2(2*(a.x*a.w+a.y*a.z),h-e+f-g),this._y=Math.atan2(2*(a.x*a.z+a.y*a.w),h+e-f-g),this._z=Math.asin(d(2*(a.z*a.w-a.x*a.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+b),this._order=b,!1!==c&&this._updateQuaternion(),this
},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this),this.setFromQuaternion(a,b)}}(),fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._updateQuaternion(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3,this.end=void 0!==b?b:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){return this.start.copy(a),this.end.copy(b),this},copy:function(a){return this.start.copy(a.start),this.end.copy(a.end),this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start),b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;return d&&(e=THREE.Math.clamp(e,0,1)),e}}(),closestPointToPoint:function(a,b,c){return a=this.closestPointToPointParameter(a,b),c=c||new THREE.Vector3,this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(1/0,1/0),this.max=void 0!==b?b:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b),this.max.copy(b);for(var c=1,d=a.length;d>c;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==b?b:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},addPoint:function(a){a.x<this.min.x?this.min.x=a.x:a.x>this.max.x&&(this.max.x=a.x),a.y<this.min.y?this.min.y=a.y:a.y>this.max.y&&(this.max.y=a.y),a.z<this.min.z?this.min.z=a.z:a.z>this.max.z&&(this.max.z=a.z)},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b),this.max.copy(b);for(var b=1,c=a.length;c>b;b++)this.addPoint(a[b])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;return b.updateMatrixWorld(!0),this.makeEmpty(),b.traverse(function(b){if(void 0!==b.geometry&&void 0!==b.geometry.vertices)for(var d=b.geometry.vertices,e=0,f=d.length;f>e;e++)a.copy(d[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)}),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){return b=b||new THREE.Sphere,b.center=this.center(),b.radius=.5*this.size(a).length(),b}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){return a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b),a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b),a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b),a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b),a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b),a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b),a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b),a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b),this.makeEmpty(),this.setFromPoints(a),this}}(),translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(a,b,c,d,e,f,g,h,i){this.elements=new Float32Array(9),this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,g||0,h||0,void 0!==i?i:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,i){var j=this.elements;return j[0]=a,j[3]=b,j[6]=c,j[1]=d,j[4]=e,j[7]=f,j[2]=g,j[5]=h,j[8]=i,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(a){return a=a.elements,this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;d>c;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],a=a[8];return b*f*a-b*g*i-c*e*a+c*g*h+d*e*i-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;if(d[0]=c[10]*c[5]-c[6]*c[9],d[1]=-c[10]*c[1]+c[2]*c[9],d[2]=c[6]*c[1]-c[2]*c[5],d[3]=-c[10]*c[4]+c[6]*c[8],d[4]=c[10]*c[0]-c[2]*c[8],d[5]=-c[6]*c[0]+c[2]*c[4],d[6]=c[9]*c[4]-c[5]*c[8],d[7]=-c[9]*c[0]+c[1]*c[8],d[8]=c[5]*c[0]-c[1]*c[4],c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6],0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/c),this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},getNormalMatrix:function(a){return this.getInverse(a).transpose(),this},transposeIntoArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}},THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements=new Float32Array(16);q[0]=void 0!==a?a:1,q[4]=b||0,q[8]=c||0,q[12]=d||0,q[1]=e||0,q[5]=void 0!==f?f:1,q[9]=g||0,q[13]=h||0,q[2]=i||0,q[6]=j||0,q[10]=void 0!==k?k:1,q[14]=l||0,q[3]=m||0,q[7]=n||0,q[11]=o||0,q[15]=void 0!==p?p:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){return this.elements.set(a.elements),this},extractPosition:function(a){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},copyPosition:function(a){var b=this.elements;return a=a.elements,b[12]=a[12],b[13]=a[13],b[14]=a[14],this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements;b=b.elements;var d=1/a.set(b[0],b[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),f=1/a.set(b[8],b[9],b[10]).length();return c[0]=b[0]*d,c[1]=b[1]*d,c[2]=b[2]*d,c[4]=b[4]*e,c[5]=b[5]*e,c[6]=b[6]*e,c[8]=b[8]*f,c[9]=b[9]*f,c[10]=b[10]*f,this}}(),makeRotationFromEuler:function(a){!1==a instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),c=Math.sin(c),g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);if("XYZ"===a.order){a=f*h;var i=f*e,j=c*h,k=c*e;b[0]=g*h,b[4]=-g*e,b[8]=d,b[1]=i+j*d,b[5]=a-k*d,b[9]=-c*g,b[2]=k-a*d,b[6]=j+i*d,b[10]=f*g}else"YXZ"===a.order?(a=g*h,i=g*e,j=d*h,k=d*e,b[0]=a+k*c,b[4]=j*c-i,b[8]=f*d,b[1]=f*e,b[5]=f*h,b[9]=-c,b[2]=i*c-j,b[6]=k+a*c,b[10]=f*g):"ZXY"===a.order?(a=g*h,i=g*e,j=d*h,k=d*e,b[0]=a-k*c,b[4]=-f*e,b[8]=j+i*c,b[1]=i+j*c,b[5]=f*h,b[9]=k-a*c,b[2]=-f*d,b[6]=c,b[10]=f*g):"ZYX"===a.order?(a=f*h,i=f*e,j=c*h,k=c*e,b[0]=g*h,b[4]=j*d-i,b[8]=a*d+k,b[1]=g*e,b[5]=k*d+a,b[9]=i*d-j,b[2]=-d,b[6]=c*g,b[10]=f*g):"YZX"===a.order?(a=f*g,i=f*d,j=c*g,k=c*d,b[0]=g*h,b[4]=k-a*e,b[8]=j*e+i,b[1]=e,b[5]=f*h,b[9]=-c*h,b[2]=-d*h,b[6]=i*e+j,b[10]=a-k*e):"XZY"===a.order&&(a=f*g,i=f*d,j=c*g,k=c*d,b[0]=g*h,b[4]=-e,b[8]=d*h,b[1]=a*e+k,b[5]=f*h,b[9]=i*e-j,b[2]=j*e-i,b[6]=c*h,b[10]=k*e+a);return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},setRotationFromQuaternion:function(a){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e;a=c*g;var j=c*h,c=c*i,k=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;return b[0]=1-(k+e),b[4]=j-f,b[8]=c+h,b[1]=j+f,b[5]=1-(a+e),b[9]=d-g,b[2]=c-h,b[6]=d+g,b[10]=1-(a+k),b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;return c.subVectors(d,e).normalize(),0===c.length()&&(c.z=1),a.crossVectors(f,c).normalize(),0===a.length()&&(c.x+=1e-4,a.crossVectors(f,c).normalize()),b.crossVectors(c,a),g[0]=a.x,g[4]=b.x,g[8]=c.x,g[1]=a.y,g[5]=b.y,g[9]=c.y,g[2]=a.z,g[6]=b.z,g[10]=c.z,this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],c=c[15],u=d[0],v=d[4],w=d[8],x=d[12],y=d[1],z=d[5],A=d[9],B=d[13],C=d[2],D=d[6],E=d[10],F=d[14],G=d[3],H=d[7],I=d[11],d=d[15];return e[0]=f*u+g*y+h*C+i*G,e[4]=f*v+g*z+h*D+i*H,e[8]=f*w+g*A+h*E+i*I,e[12]=f*x+g*B+h*F+i*d,e[1]=j*u+k*y+l*C+m*G,e[5]=j*v+k*z+l*D+m*H,e[9]=j*w+k*A+l*E+m*I,e[13]=j*x+k*B+l*F+m*d,e[2]=n*u+o*y+p*C+q*G,e[6]=n*v+o*z+p*D+q*H,e[10]=n*w+o*A+p*E+q*I,e[14]=n*x+o*B+p*F+q*d,e[3]=r*u+s*y+t*C+c*G,e[7]=r*v+s*z+t*D+c*H,e[11]=r*w+s*A+t*E+c*I,e[15]=r*x+s*B+t*F+c*d,this},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiplyMatrices(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),a.applyProjection(this)},multiplyVector4:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;d>c;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14];return a[3]*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+a[7]*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+a[11]*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+a[15]*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[4],b[4]=a,a=b[2],b[2]=b[8],b[8]=a,a=b[6],b[6]=b[9],b[9]=a,a=b[3],b[3]=b[12],b[12]=a,a=b[7],b[7]=b[13],b[13]=a,a=b[11],b[11]=b[14],b[14]=a,this},flattenToArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],i=d[1],j=d[5],k=d[9],l=d[13],m=d[2],n=d[6],o=d[10],p=d[14],q=d[3],r=d[7],s=d[11],d=d[15];if(c[0]=k*p*r-l*o*r+l*n*s-j*p*s-k*n*d+j*o*d,c[4]=h*o*r-g*p*r-h*n*s+f*p*s+g*n*d-f*o*d,c[8]=g*l*r-h*k*r+h*j*s-f*l*s-g*j*d+f*k*d,c[12]=h*k*n-g*l*n-h*j*o+f*l*o+g*j*p-f*k*p,c[1]=l*o*q-k*p*q-l*m*s+i*p*s+k*m*d-i*o*d,c[5]=g*p*q-h*o*q+h*m*s-e*p*s-g*m*d+e*o*d,c[9]=h*k*q-g*l*q-h*i*s+e*l*s+g*i*d-e*k*d,c[13]=g*l*m-h*k*m+h*i*o-e*l*o-g*i*p+e*k*p,c[2]=j*p*q-l*n*q+l*m*r-i*p*r-j*m*d+i*n*d,c[6]=h*n*q-f*p*q-h*m*r+e*p*r+f*m*d-e*n*d,c[10]=f*l*q-h*j*q+h*i*r-e*l*r-f*i*d+e*j*d,c[14]=h*j*m-f*l*m-h*i*n+e*l*n+f*i*p-e*j*p,c[3]=k*n*q-j*o*q-k*m*r+i*o*r+j*m*s-i*n*s,c[7]=f*o*q-g*n*q+g*m*r-e*o*r-f*m*s+e*n*s,c[11]=g*j*q-f*k*q-g*i*r+e*k*r+f*i*s-e*j*s,c[15]=f*k*m-g*j*m+g*i*n-e*k*n-f*i*o+e*j*o,c=e*c[0]+i*c[4]+m*c[8]+q*c[12],0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");return console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this}return this.multiplyScalar(1/c),this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,c=a.x,d=a.y;return a=a.z,b[0]*=c,b[4]*=d,b[8]*=a,b[1]*=c,b[5]*=d,b[9]*=a,b[2]*=c,b[6]*=d,b[10]*=a,b[3]*=c,b[7]*=d,b[11]*=a,this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a);return a=Math.sin(a),this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a);return a=Math.sin(a),this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a);return a=Math.sin(a),this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},compose:function(a,b,c){return this.makeRotationFromQuaternion(b),this.scale(c),this.setPosition(a),this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),i=a.set(f[8],f[9],f[10]).length();0>this.determinant()&&(g=-g),c.x=f[12],c.y=f[13],c.z=f[14],b.elements.set(this.elements),c=1/g;var f=1/h,j=1/i;return b.elements[0]*=c,b.elements[1]*=c,b.elements[2]*=c,b.elements[4]*=f,b.elements[5]*=f,b.elements[6]*=f,b.elements[8]*=j,b.elements[9]*=j,b.elements[10]*=j,d.setFromRotationMatrix(b),e.x=g,e.y=h,e.z=i,this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(d-c),g[9]=(d+c)/(d-c),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*a));var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-((b+a)/h),g[1]=0,g[5]=2/i,g[9]=0,g[13]=-((c+d)/i),g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-((f+e)/j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}},THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3,this.direction=void 0!==b?b:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){return this.origin.copy(a),this.direction.copy(b),this},copy:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){return this.origin.copy(this.at(b,a)),this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);return 0>c?this.origin.distanceTo(b):(a.copy(this.direction).multiplyScalar(c).add(this.origin),a.distanceTo(b))}}(),distanceSqToSegment:function(a,b,c,d){var e=a.clone().add(b).multiplyScalar(.5),f=b.clone().sub(a).normalize(),g=.5*a.distanceTo(b),h=this.origin.clone().sub(e);a=-this.direction.dot(f),b=h.dot(this.direction);var i,j,k=-h.dot(f),l=h.lengthSq(),m=Math.abs(1-a*a);return m>=0?(h=a*k-b,i=a*b-k,j=g*m,h>=0?i>=-j?j>=i?(g=1/m,h*=g,i*=g,a=h*(h+a*i+2*b)+i*(a*h+i+2*k)+l):(i=g,h=Math.max(0,-(a*i+b)),a=-h*h+i*(i+2*k)+l):(i=-g,h=Math.max(0,-(a*i+b)),a=-h*h+i*(i+2*k)+l):-j>=i?(h=Math.max(0,-(-a*g+b)),i=h>0?-g:Math.min(Math.max(-g,-k),g),a=-h*h+i*(i+2*k)+l):j>=i?(h=0,i=Math.min(Math.max(-g,-k),g),a=i*(i+2*k)+l):(h=Math.max(0,-(a*g+b)),i=h>0?g:Math.min(Math.max(-g,-k),g),a=-h*h+i*(i+2*k)+l)):(i=a>0?-g:g,h=Math.max(0,-(a*i+b)),a=-h*h+i*(i+2*k)+l),c&&c.copy(this.direction.clone().multiplyScalar(h).add(this.origin)),d&&d.copy(f.clone().multiplyScalar(i).add(e)),a},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);return 0==b?0==a.distanceToPoint(this.origin)?0:null:(a=-(this.origin.dot(a.normal)+a.constant)/b,a>=0?a:null)},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g;d=1/this.direction.x,f=1/this.direction.y,g=1/this.direction.z;var h=this.origin;return d>=0?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x),f>=0?(e=(a.min.y-h.y)*f,f*=a.max.y-h.y):(e=(a.max.y-h.y)*f,f*=a.min.y-h.y),c>f||e>d?null:((e>c||c!==c)&&(c=e),(d>f||d!==d)&&(d=f),g>=0?(e=(a.min.z-h.z)*g,g*=a.max.z-h.z):(e=(a.max.z-h.z)*g,g*=a.min.z-h.z),c>g||e>d?null:((e>c||c!==c)&&(c=e),(d>g||d!==d)&&(d=g),0>d?null:this.at(c>=0?c:d,b)))},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,i){if(b.subVectors(f,e),c.subVectors(g,e),d.crossVectors(b,c),f=this.direction.dot(d),f>0){if(h)return null;h=1}else{if(!(0>f))return null;h=-1,f=-f}return a.subVectors(this.origin,e),e=h*this.direction.dot(c.crossVectors(a,c)),0>e?null:(g=h*this.direction.dot(b.cross(a)),0>g||e+g>f?null:(e=-h*a.dot(d),0>e?null:this.at(e/f,i)))}}(),applyMatrix4:function(a){return this.direction.add(this.origin).applyMatrix4(a),this.origin.applyMatrix4(a),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3,this.radius=void 0!==b?b:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){return this.center.copy(a),this.radius=b,this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;g>f;f++)e=Math.max(e,d.distanceToSquared(b[f]));return this.radius=Math.sqrt(e),this}}(),copy:function(a){return this.center.copy(a.center),this.radius=a.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;return d.copy(a),c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center)),d},getBoundingBox:function(a){return a=a||new THREE.Box3,a.set(this.center,this.center),a.expandByScalar(this.radius),a},applyMatrix4:function(a){return this.center.applyMatrix4(a),this.radius*=a.getMaxScaleOnAxis(),this},translate:function(a){return this.center.add(a),this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],i=c[6],j=c[7],k=c[8],l=c[9],m=c[10],n=c[11],o=c[12],p=c[13],q=c[14],c=c[15];return b[0].setComponents(f-a,j-g,n-k,c-o).normalize(),b[1].setComponents(f+a,j+g,n+k,c+o).normalize(),b[2].setComponents(f+d,j+h,n+l,c+p).normalize(),b[3].setComponents(f-d,j-h,n-l,c-p).normalize(),b[4].setComponents(f-e,j-i,n-m,c-q).normalize(),b[5].setComponents(f+e,j+i,n+m,c+q).normalize(),this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;return null===c.boundingSphere&&c.computeBoundingSphere(),a.copy(c.boundingSphere),a.applyMatrix4(b.matrixWorld),this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=0<f.normal.x?c.min.x:c.max.x,b.x=0<f.normal.x?c.max.x:c.min.x,a.y=0<f.normal.y?c.min.y:c.max.y,b.y=0<f.normal.y?c.max.y:c.min.y,a.z=0<f.normal.z?c.min.z:c.max.z,b.z=0<f.normal.z?c.max.z:c.min.z;var g=f.distanceToPoint(a),f=f.distanceToPoint(b);if(0>g&&0>f)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0),this.constant=void 0!==b?b:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){return this.normal.copy(a),this.constant=b,this},setComponents:function(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this},setFromNormalAndCoplanarPoint:function(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){return d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize(),this.setFromNormalAndCoplanarPoint(d,c),this}}(),copy:function(a){return this.normal.copy(a.normal),this.constant=a.constant,this},normalize:function(){var a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);return a=this.distanceToPoint(a.end),0>b&&a>0||0>a&&b>0},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);return 0!=f?(f=-(b.start.dot(this.normal)+this.constant)/f,0>f||f>1?void 0:d.copy(e).multiplyScalar(f).add(b.start)):0==this.distanceToPoint(b.start)?d.copy(b.start):void 0}}(),coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),f=a.copy(this.normal).applyMatrix3(f),g=this.coplanarPoint(b);return g.applyMatrix4(d),this.setFromNormalAndCoplanarPoint(f,g),this}}(),translate:function(a){return this.constant-=a.dot(this.normal),this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={PI2:2*Math.PI,generateUUID:function(){var a,b="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),c=Array(36),d=0;return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?c[e]="-":14==e?c[e]="4":(2>=d&&(d=33554432+16777216*Math.random()|0),a=15&d,d>>=4,c[e]=b[19==e?3&a|8:a]);return c.join("")}}(),clamp:function(a,b,c){return b>a?b:a>c?c:a},clampBottom:function(a,b){return b>a?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*(3-2*a))},smootherstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*a*(a*(6*a-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return 0>a?-1:a>0?1:0},degToRad:function(){var a=Math.PI/180;
return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a}},THREE.Spline=function(a){function b(a,b,c,d,e,f,g){return a=.5*(c-a),d=.5*(d-b),(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c,d,e,f,g,h,i,j,k,l=[],m={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return c=(this.points.length-1)*a,d=Math.floor(c),e=c-d,l[0]=0===d?d:d-1,l[1]=d,l[2]=d>this.points.length-2?this.points.length-1:d+1,l[3]=d>this.points.length-3?this.points.length-1:d+2,h=this.points[l[0]],i=this.points[l[1]],j=this.points[l[2]],k=this.points[l[3]],f=e*e,g=e*f,m.x=b(h.x,i.x,j.x,k.x,e,f,g),m.y=b(h.y,i.y,j.y,k.y,e,f,g),m.z=b(h.z,i.z,j.z,k.z,e,f,g),m},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;c>a;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;for(h[0]=0,a||(a=100),c=this.points.length*a,f.copy(this.points[0]),a=1;c>a;a++)b=a/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=i,e=b);return h[h.length]=i,{chunks:h,total:i}},this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,j=this.getLength();for(h.push(i.copy(this.points[0]).clone()),b=1;b<this.points.length;b++){for(c=j.chunks[b]-j.chunks[b-1],g=Math.ceil(a*c/j.total),e=(b-1)/(this.points.length-1),f=b/(this.points.length-1),c=1;g-1>c;c++)d=e+1/g*c*(f-e),d=this.getPoint(d),h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}},THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3,this.b=void 0!==b?b:new THREE.Vector3,this.c=void 0!==c?c:new THREE.Vector3},THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){return e=e||new THREE.Vector3,e.subVectors(d,c),a.subVectors(b,c),e.cross(a),b=e.lengthSq(),b>0?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e),b.subVectors(f,e),c.subVectors(d,e),d=a.dot(a),e=a.dot(b),f=a.dot(c);var i=b.dot(b);g=b.dot(c);var j=d*i-e*e;return h=h||new THREE.Vector3,0==j?h.set(-2,-1,-1):(j=1/j,i=(i*f-e*g)*j,d=(d*g-e*f)*j,h.set(1-i-d,d,i))}}(),THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){return b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a),0<=b.x&&0<=b.y&&1>=b.x+b.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this},setFromPointsAndIndices:function(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this},copy:function(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){return a.subVectors(this.c,this.b),b.subVectors(this.a,this.b),.5*a.cross(b).length()}}(),midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(a){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),a},THREE.UV=function(a,b){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(a,b)},THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running&&this.start(),this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),a=.001*(b-this.oldTime);this.oldTime=b,this.elapsedTime+=a}return a}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener,a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(){var a=[];return function(b){if(void 0!==this._listeners){var c=this._listeners[b.type];if(void 0!==c){b.target=this;for(var d=c.length,e=0;d>e;e++)a[e]=c[e];for(e=0;d>e;e++)a[e].call(this,b)}}}}()},function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c),this.near=d||0,this.far=e||1/0};var b=new a.Sphere,c=new a.Ray;new a.Plane,new a.Vector3;var d=new a.Vector3,e=new a.Matrix4,f=function(a,b){return a.distance-b.distance},g=new a.Vector3,h=new a.Vector3,i=new a.Vector3,j=function(f,k,l){if(f instanceof a.Sprite){d.setFromMatrixPosition(f.matrixWorld);var m=k.ray.distanceToPoint(d);if(m>f.scale.x)return l;l.push({distance:m,point:f.position,face:null,object:f})}else if(f instanceof a.LOD)d.setFromMatrixPosition(f.matrixWorld),m=k.ray.origin.distanceTo(d),j(f.getObjectForDistance(m),k,l);else if(f instanceof a.Mesh){var n=f.geometry;if(null===n.boundingSphere&&n.computeBoundingSphere(),b.copy(n.boundingSphere),b.applyMatrix4(f.matrixWorld),!1===k.ray.isIntersectionSphere(b))return l;if(e.getInverse(f.matrixWorld),c.copy(k.ray).applyMatrix4(e),null!==n.boundingBox&&!1===c.isIntersectionBox(n.boundingBox))return l;if(n instanceof a.BufferGeometry){var o=f.material;if(void 0===o)return l;var p,q,r=n.attributes,s=k.precision;if(void 0!==r.index)for(var t=n.offsets,u=r.index.array,v=r.position.array,w=0,x=t.length;x>w;++w)for(var r=t[w].start,y=t[w].index,n=r,z=r+t[w].count;z>n;n+=3){r=y+u[n],p=y+u[n+1],q=y+u[n+2],g.set(v[3*r],v[3*r+1],v[3*r+2]),h.set(v[3*p],v[3*p+1],v[3*p+2]),i.set(v[3*q],v[3*q+1],v[3*q+2]);var A=o.side===a.BackSide?c.intersectTriangle(i,h,g,!0):c.intersectTriangle(g,h,i,o.side!==a.DoubleSide);null!==A&&(A.applyMatrix4(f.matrixWorld),m=k.ray.origin.distanceTo(A),s>m||m<k.near||m>k.far||l.push({distance:m,point:A,indices:[r,p,q],face:null,faceIndex:null,object:f}))}else for(v=r.position.array,n=0,z=r.position.array.length;z>n;n+=3)r=n,p=n+1,q=n+2,g.set(v[3*r],v[3*r+1],v[3*r+2]),h.set(v[3*p],v[3*p+1],v[3*p+2]),i.set(v[3*q],v[3*q+1],v[3*q+2]),A=o.side===a.BackSide?c.intersectTriangle(i,h,g,!0):c.intersectTriangle(g,h,i,o.side!==a.DoubleSide),null!==A&&(A.applyMatrix4(f.matrixWorld),m=k.ray.origin.distanceTo(A),s>m||m<k.near||m>k.far||l.push({distance:m,point:A,indices:[r,p,q],face:null,faceIndex:null,object:f}))}else if(n instanceof a.Geometry)for(u=f.material instanceof a.MeshFaceMaterial,v=!0===u?f.material.materials:null,s=k.precision,t=n.vertices,w=0,x=n.faces.length;x>w;w++)if(y=n.faces[w],o=!0===u?v[y.materialIndex]:f.material,void 0!==o){if(r=t[y.a],p=t[y.b],q=t[y.c],!0===o.morphTargets){m=n.morphTargets,A=f.morphTargetInfluences,g.set(0,0,0),h.set(0,0,0),i.set(0,0,0);for(var z=0,B=m.length;B>z;z++){var C=A[z];if(0!==C){var D=m[z].vertices;g.x+=(D[y.a].x-r.x)*C,g.y+=(D[y.a].y-r.y)*C,g.z+=(D[y.a].z-r.z)*C,h.x+=(D[y.b].x-p.x)*C,h.y+=(D[y.b].y-p.y)*C,h.z+=(D[y.b].z-p.z)*C,i.x+=(D[y.c].x-q.x)*C,i.y+=(D[y.c].y-q.y)*C,i.z+=(D[y.c].z-q.z)*C}}g.add(r),h.add(p),i.add(q),r=g,p=h,q=i}A=o.side===a.BackSide?c.intersectTriangle(q,p,r,!0):c.intersectTriangle(r,p,q,o.side!==a.DoubleSide),null!==A&&(A.applyMatrix4(f.matrixWorld),m=k.ray.origin.distanceTo(A),s>m||m<k.near||m>k.far||l.push({distance:m,point:A,face:y,faceIndex:w,object:f}))}}else if(f instanceof a.Line){if(s=k.linePrecision,o=s*s,n=f.geometry,null===n.boundingSphere&&n.computeBoundingSphere(),b.copy(n.boundingSphere),b.applyMatrix4(f.matrixWorld),!1===k.ray.isIntersectionSphere(b))return l;if(e.getInverse(f.matrixWorld),c.copy(k.ray).applyMatrix4(e),n instanceof a.Geometry)for(t=n.vertices,s=t.length,r=new a.Vector3,p=new a.Vector3,q=f.type===a.LineStrip?1:2,n=0;s-1>n;n+=q)c.distanceSqToSegment(t[n],t[n+1],p,r)>o||(m=c.origin.distanceTo(p),m<k.near||m>k.far||l.push({distance:m,point:r.clone().applyMatrix4(f.matrixWorld),face:null,faceIndex:null,object:f}))}},k=function(a,b,c){a=a.getDescendants();for(var d=0,e=a.length;e>d;d++)j(a[d],b,c)};a.Raycaster.prototype.precision=1e-4,a.Raycaster.prototype.linePrecision=1,a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b)},a.Raycaster.prototype.intersectObject=function(a,b){var c=[];return!0===b&&k(a,this,c),j(a,this,c),c.sort(f),c},a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;e>d;d++)j(a[d],this,c),!0===b&&k(a[d],this,c);return c.sort(f),c}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this._rotation=new THREE.Euler,this._quaternion=new THREE.Quaternion,this.scale=new THREE.Vector3(1,1,1),this._rotation._quaternion=this.quaternion,this._quaternion._euler=this.rotation,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(a){this._rotation=a,this._rotation._quaternion=this._quaternion,this._quaternion._euler=this._rotation,this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(a){this._quaternion=a,this._quaternion._euler=this._rotation,this._rotation._quaternion=this._quaternion,this._quaternion._updateEuler()},get eulerOrder(){return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order},set eulerOrder(a){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."),this.rotation.order=a},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){return a.setFromAxisAngle(b,c),this.quaternion.multiply(a),this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){return a.copy(b),a.applyQuaternion(this.quaternion),this.position.add(a.multiplyScalar(c)),this}}(),translate:function(a,b){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up),this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){for(a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(b,1),b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;c>b;b++)this.children[b].traverse(a)},getObjectById:function(a,b){for(var c=0,d=this.children.length;d>c;c++){var e=this.children[c];if(e.id===a||!0===b&&(e=e.getObjectById(a,b),void 0!==e))return e}},getObjectByName:function(a,b){for(var c=0,d=this.children.length;d>c;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getObjectByName(a,b),void 0!==e))return e}},getChildByName:function(a,b){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a,b)},getDescendants:function(a){void 0===a&&(a=[]),Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;c>b;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===a)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;c>b;b++)this.children[b].updateMatrixWorld(a)},clone:function(a,b){if(void 0===a&&(a=new THREE.Object3D),void 0===b&&(b=!0),a.name=this.name,a.up.copy(this.up),a.position.copy(this.position),a.quaternion.copy(this.quaternion),a.scale.copy(this.scale),a.renderDepth=this.renderDepth,a.rotationAutoUpdate=this.rotationAutoUpdate,a.matrix.copy(this.matrix),a.matrixWorld.copy(this.matrixWorld),a.matrixAutoUpdate=this.matrixAutoUpdate,a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,a.visible=this.visible,a.castShadow=this.castShadow,a.receiveShadow=this.receiveShadow,a.frustumCulled=this.frustumCulled,a.userData=JSON.parse(JSON.stringify(this.userData)),!0===b)for(var c=0;c<this.children.length;c++)a.add(this.children[c].clone());return a}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function a(){if(i===t){var a=new THREE.RenderableVertex;return s.push(a),t++,i++,a}return s[i++]}function b(){if(k===v){var a=new THREE.RenderableFace;return u.push(a),v++,k++,a}return u[k++]}function c(){if(m===x){var a=new THREE.RenderableLine;return w.push(a),x++,m++,a}return w[m++]}function d(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function e(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0?!0:0>e&&0>f||0>g&&0>h?!1:(0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f))),0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h))),c>d?!1:(a.lerp(b,c),b.lerp(a,1-d),!0))}var f,g,h,i,j,k,l,m,n,o,p,q=[],r=0,s=[],t=0,u=[],v=0,w=[],x=0,y=[],z=0,A={objects:[],lights:[],elements:[]},B=new THREE.Vector3,C=new THREE.Vector3,D=new THREE.Vector3,E=new THREE.Vector3,F=new THREE.Vector4,G=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),H=new THREE.Box3,I=Array(3),J=new THREE.Matrix4,K=new THREE.Matrix4,L=new THREE.Matrix4,M=new THREE.Matrix3,N=new THREE.Frustum,O=new THREE.Vector4,P=new THREE.Vector4;this.projectVector=function(a,b){return b.matrixWorldInverse.getInverse(b.matrixWorld),K.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),a.applyProjection(K)},this.unprojectVector=function(){var a=new THREE.Matrix4;return function(b,c){return a.getInverse(c.projectionMatrix),K.multiplyMatrices(c.matrixWorld,a),b.applyProjection(K)}}(),this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);return this.unprojectVector(a,b),this.unprojectVector(c,b),c.sub(a).normalize(),new THREE.Raycaster(a,c)};var Q=function(a){if(!1!==a.visible){if(a instanceof THREE.Light)A.lights.push(a);else if((a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Sprite)&&(!1===a.frustumCulled||!0===N.intersectsObject(a))){if(g===r){var b=new THREE.RenderableObject;q.push(b),r++,g++,f=b}else f=q[g++];f.id=a.id,f.object=a,null!==a.renderDepth?f.z=a.renderDepth:(E.setFromMatrixPosition(a.matrixWorld),E.applyProjection(K),f.z=E.z),A.objects.push(f)}for(var b=0,c=a.children.length;c>b;b++)Q(a.children[b])}},R=new function(){var d=[],e=null,f=new THREE.Matrix3,g=function(a){var b=a.positionWorld,c=a.positionScreen;b.copy(a.position).applyMatrix4(p),c.copy(b).applyMatrix4(K),b=1/c.w,c.x*=b,c.y*=b,c.z*=b,a.visible=-1<=c.x&&1>=c.x&&-1<=c.y&&1>=c.y&&-1<=c.z&&1>=c.z},i=function(a,b,c){return I[0]=a.positionScreen,I[1]=b.positionScreen,I[2]=c.positionScreen,!0===a.visible||!0===b.visible||!0===c.visible||G.isIntersectionBox(H.setFromPoints(I))?0>(c.positionScreen.x-a.positionScreen.x)*(b.positionScreen.y-a.positionScreen.y)-(c.positionScreen.y-a.positionScreen.y)*(b.positionScreen.x-a.positionScreen.x):!1};return{setObject:function(a){e=a,f.getNormalMatrix(e.matrixWorld),d.length=0},projectVertex:g,checkTriangleVisibility:i,pushVertex:function(b,c,d){h=a(),h.position.set(b,c,d),g(h)},pushNormal:function(a,b,c){d.push(a,b,c)},pushLine:function(a,b){var d=s[a],f=s[b];l=c(),l.id=e.id,l.v1.copy(d),l.v2.copy(f),l.z=(d.positionScreen.z+f.positionScreen.z)/2,l.material=e.material,A.elements.push(l)},pushTriangle:function(a,c,g){var h=s[a],k=s[c],l=s[g];if(!0===i(h,k,l)){for(j=b(),j.id=e.id,j.v1.copy(h),j.v2.copy(k),j.v3.copy(l),j.z=(h.positionScreen.z+k.positionScreen.z+l.positionScreen.z)/3,h=0;3>h;h++)k=3*arguments[h],l=j.vertexNormalsModel[h],l.set(d[k+0],d[k+1],d[k+2]),l.applyMatrix3(f).normalize();j.vertexNormalsLength=3,j.material=e.material,A.elements.push(j)}}}};this.projectScene=function(f,h,q,r){var t,u,v,w,x,E,G,H,I;for(o=m=k=0,A.elements.length=0,!0===f.autoUpdate&&f.updateMatrixWorld(),void 0===h.parent&&h.updateMatrixWorld(),J.copy(h.matrixWorldInverse.getInverse(h.matrixWorld)),K.multiplyMatrices(h.projectionMatrix,J),N.setFromMatrix(K),g=0,A.objects.length=0,A.lights.length=0,Q(f),!0===q&&A.objects.sort(d),f=0,q=A.objects.length;q>f;f++)if(t=A.objects[f].object,u=t.geometry,R.setObject(t),p=t.matrixWorld,i=0,t instanceof THREE.Mesh){if(u instanceof THREE.BufferGeometry){if(E=u.attributes,t=u.offsets,void 0!==E.position){for(H=E.position.array,u=0,w=H.length;w>u;u+=3)R.pushVertex(H[u],H[u+1],H[u+2]);for(I=E.normal.array,u=0,w=I.length;w>u;u+=3)R.pushNormal(I[u],I[u+1],I[u+2]);if(void 0!==E.index)if(E=E.index.array,0<t.length)for(f=0;f<t.length;f++)for(w=t[f],H=w.index,u=w.start,w=w.start+w.count;w>u;u+=3)R.pushTriangle(E[u]+H,E[u+1]+H,E[u+2]+H);else for(u=0,w=E.length;w>u;u+=3)R.pushTriangle(E[u],E[u+1],E[u+2]);else for(u=0,w=H.length/3;w>u;u+=3)R.pushTriangle(u,u+1,u+2)}}else if(u instanceof THREE.Geometry){v=u.vertices,w=u.faces,E=u.faceVertexUvs,M.getNormalMatrix(p),H=t.material instanceof THREE.MeshFaceMaterial,I=!0===H?t.material:null;for(var S=0,T=v.length;T>S;S++){var U=v[S];R.pushVertex(U.x,U.y,U.z)}for(S=0,T=w.length;T>S;S++){v=w[S];var V=!0===H?I.materials[v.materialIndex]:t.material;if(void 0!==V){G=V.side;var U=s[v.a],W=s[v.b],X=s[v.c];if(!0===V.morphTargets){x=u.morphTargets;var Y=t.morphTargetInfluences,Z=U.position,$=W.position,_=X.position;B.set(0,0,0),C.set(0,0,0),D.set(0,0,0);for(var ab=0,bb=x.length;bb>ab;ab++){var cb=Y[ab];if(0!==cb){var db=x[ab].vertices;B.x+=(db[v.a].x-Z.x)*cb,B.y+=(db[v.a].y-Z.y)*cb,B.z+=(db[v.a].z-Z.z)*cb,C.x+=(db[v.b].x-$.x)*cb,C.y+=(db[v.b].y-$.y)*cb,C.z+=(db[v.b].z-$.z)*cb,D.x+=(db[v.c].x-_.x)*cb,D.y+=(db[v.c].y-_.y)*cb,D.z+=(db[v.c].z-_.z)*cb}}U.position.add(B),W.position.add(C),X.position.add(D),R.projectVertex(U),R.projectVertex(W),R.projectVertex(X)}if(Y=R.checkTriangleVisibility(U,W,X),!(!1===Y&&G===THREE.FrontSide||!0===Y&&G===THREE.BackSide)){for(j=b(),j.id=t.id,j.v1.copy(U),j.v2.copy(W),j.v3.copy(X),j.normalModel.copy(v.normal),!1!==Y||G!==THREE.BackSide&&G!==THREE.DoubleSide||j.normalModel.negate(),j.normalModel.applyMatrix3(M).normalize(),j.centroidModel.copy(v.centroid).applyMatrix4(p),x=v.vertexNormals,Z=0,$=Math.min(x.length,3);$>Z;Z++)_=j.vertexNormalsModel[Z],_.copy(x[Z]),!1!==Y||G!==THREE.BackSide&&G!==THREE.DoubleSide||_.negate(),_.applyMatrix3(M).normalize();for(j.vertexNormalsLength=x.length,x=0,Y=Math.min(E.length,3);Y>x;x++)if(G=E[x][S],void 0!==G)for(Z=0,$=G.length;$>Z;Z++)j.uvs[x][Z]=G[Z];j.color=v.color,j.material=V,j.z=(U.positionScreen.z+W.positionScreen.z+X.positionScreen.z)/3,A.elements.push(j)}}}}}else if(t instanceof THREE.Line){if(u instanceof THREE.BufferGeometry){if(E=u.attributes,void 0!==E.position){for(H=E.position.array,u=0,w=H.length;w>u;u+=3)R.pushVertex(H[u],H[u+1],H[u+2]);if(void 0!==E.index)for(E=E.index.array,u=0,w=E.length;w>u;u+=2)R.pushLine(E[u],E[u+1]);else for(u=0,w=H.length/3-1;w>u;u++)R.pushLine(u,u+1)}}else if(u instanceof THREE.Geometry&&(L.multiplyMatrices(K,p),v=t.geometry.vertices,0!==v.length))for(U=a(),U.positionScreen.copy(v[0]).applyMatrix4(L),u=t.type===THREE.LinePieces?2:1,S=1,T=v.length;T>S;S++)U=a(),U.positionScreen.copy(v[S]).applyMatrix4(L),(S+1)%u>0||(W=s[i-2],O.copy(U.positionScreen),P.copy(W.positionScreen),!0===e(O,P)&&(O.multiplyScalar(1/O.w),P.multiplyScalar(1/P.w),l=c(),l.id=t.id,l.v1.positionScreen.copy(O),l.v2.positionScreen.copy(P),l.z=Math.max(O.z,P.z),l.material=t.material,t.material.vertexColors===THREE.VertexColors&&(l.vertexColors[0].copy(t.geometry.colors[S]),l.vertexColors[1].copy(t.geometry.colors[S-1])),A.elements.push(l)))}else t instanceof THREE.Sprite&&(F.set(p.elements[12],p.elements[13],p.elements[14],1),F.applyMatrix4(K),u=1/F.w,F.z*=u,-1<=F.z&&1>=F.z&&(o===z?(w=new THREE.RenderableSprite,y.push(w),z++,o++,n=w):n=y[o++],n.id=t.id,n.x=F.x*u,n.y=F.y*u,n.z=F.z,n.object=t,n.rotation=t.rotation,n.scale.x=t.scale.x*Math.abs(n.x-(F.x+h.projectionMatrix.elements[0])/(F.w+h.projectionMatrix.elements[12])),n.scale.y=t.scale.y*Math.abs(n.y-(F.y+h.projectionMatrix.elements[5])/(F.w+h.projectionMatrix.elements[13])),n.material=t.material,A.elements.push(n)));return!0===r&&A.elements.sort(d),A}},THREE.Face3=function(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,this.vertexNormals=d instanceof Array?d:[],this.color=e instanceof THREE.Color?e:new THREE.Color,this.vertexColors=e instanceof Array?e:[],this.vertexTangents=[],this.materialIndex=void 0!==f?f:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;c>b;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;c>b;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;c>b;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Face4=function(a,b,c,d,e,f,g){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(a,b,c,e,f,g)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.offsets=[],this.boundingSphere=this.boundingBox=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b,c,d){return this.attributes[a]={array:new b(c*d),itemSize:d},this.attributes[a]},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.multiplyVector3Array(b.array),b.needsUpdate=!0),b=this.attributes.normal,void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).multiplyVector3Array(b.array),b.needsUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var b=this.boundingBox;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var c=3,d=a.length;d>c;c+=3){var e=a[c],f=a[c+1],g=a[c+2];e<b.min.x?b.min.x=e:e>b.max.x&&(b.max.x=e),f<b.min.y?b.min.y=f:f>b.max.y&&(b.max.y=f),g<b.min.z?b.min.z=g:g>b.max.z&&(b.max.z=g)}}(void 0===a||0===a.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;f>e;e+=3)b.set(c[e],c[e+1],c[e+2]),a.addPoint(b);a.center(d);for(var g=0,e=0,f=c.length;f>e;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g)}}}(),computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;if(a=this.attributes.position.array.length,void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a)};else for(a=0,b=this.attributes.normal.array.length;b>a;a++)this.attributes.normal.array[a]=0;var e,f,g,h,i,j,k=this.attributes.position.array,l=this.attributes.normal.array,m=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3;if(this.attributes.index){var r=this.attributes.index.array,s=this.offsets;for(c=0,d=s.length;d>c;++c){b=s[c].start,e=s[c].count;var t=s[c].index;for(a=b,b+=e;b>a;a+=3)e=t+r[a],f=t+r[a+1],g=t+r[a+2],h=k[3*e],i=k[3*e+1],j=k[3*e+2],m.set(h,i,j),h=k[3*f],i=k[3*f+1],j=k[3*f+2],n.set(h,i,j),h=k[3*g],i=k[3*g+1],j=k[3*g+2],o.set(h,i,j),p.subVectors(o,n),q.subVectors(m,n),p.cross(q),l[3*e]+=p.x,l[3*e+1]+=p.y,l[3*e+2]+=p.z,l[3*f]+=p.x,l[3*f+1]+=p.y,l[3*f+2]+=p.z,l[3*g]+=p.x,l[3*g+1]+=p.y,l[3*g+2]+=p.z}}else for(a=0,b=k.length;b>a;a+=9)h=k[a],i=k[a+1],j=k[a+2],m.set(h,i,j),h=k[a+3],i=k[a+4],j=k[a+5],n.set(h,i,j),h=k[a+6],i=k[a+7],j=k[a+8],o.set(h,i,j),p.subVectors(o,n),q.subVectors(m,n),p.cross(q),l[a]=p.x,l[a+1]=p.y,l[a+2]=p.z,l[a+3]=p.x,l[a+4]=p.y,l[a+5]=p.z,l[a+6]=p.x,l[a+7]=p.y,l[a+8]=p.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var a,b,c,d=this.attributes.normal.array,e=0,f=d.length;f>e;e+=3)a=d[e],b=d[e+1],c=d[e+2],a=1/Math.sqrt(a*a+b*b+c*c),d[e]*=a,d[e+1]*=a,d[e+2]*=a},computeTangents:function(){function a(a,b,c){l=d[3*a],m=d[3*a+1],n=d[3*a+2],o=d[3*b],p=d[3*b+1],q=d[3*b+2],r=d[3*c],s=d[3*c+1],t=d[3*c+2],u=f[2*a],v=f[2*a+1],w=f[2*b],x=f[2*b+1],y=f[2*c],z=f[2*c+1],A=o-l,B=r-l,C=p-m,D=s-m,E=q-n,F=t-n,G=w-u,H=y-u,I=x-v,J=z-v,K=1/(G*J-H*I),Q.set((J*A-I*B)*K,(J*C-I*D)*K,(J*E-I*F)*K),R.set((G*B-H*A)*K,(G*D-H*C)*K,(G*F-H*E)*K),i[a].add(Q),i[b].add(Q),i[c].add(Q),j[a].add(R),j[b].add(R),j[c].add(R)}function b(a){Z.x=e[3*a],Z.y=e[3*a+1],Z.z=e[3*a+2],$.copy(Z),V=i[a],X.copy(V),X.sub(Z.multiplyScalar(Z.dot(V))).normalize(),Y.crossVectors($,V),W=Y.dot(j[a]),U=0>W?-1:1,h[4*a]=X.x,h[4*a+1]=X.y,h[4*a+2]=X.z,h[4*a+3]=U}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&(this.attributes.tangent={itemSize:4,array:new Float32Array(4*g)});for(var h=this.attributes.tangent.array,i=[],j=[],k=0;g>k;k++)i[k]=new THREE.Vector3,j[k]=new THREE.Vector3;var l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q=new THREE.Vector3,R=new THREE.Vector3,S=this.offsets,k=0;for(M=S.length;M>k;++k){L=S[k].start,N=S[k].count;var T=S[k].index,g=L;for(L+=N;L>g;g+=3)N=T+c[g],O=T+c[g+1],P=T+c[g+2],a(N,O,P)}var U,V,W,X=new THREE.Vector3,Y=new THREE.Vector3,Z=new THREE.Vector3,$=new THREE.Vector3,k=0;for(M=S.length;M>k;++k)for(L=S[k].start,N=S[k].count,T=S[k].index,g=L,L+=N;L>g;g+=3)N=T+c[g],O=T+c[g+1],P=T+c[g+2],b(N),b(O),b(P)}},computeOffsets:function(a){var b=a;void 0===a&&(b=65535),Date.now(),a=this.attributes.index.array;for(var c=this.attributes.position.array,d=a.length/3,e=new Uint16Array(a.length),f=0,g=0,h=[{start:0,count:0,index:0}],i=h[0],j=0,k=0,l=new Int32Array(6),m=new Int32Array(c.length),n=new Int32Array(c.length),o=0;o<c.length;o++)m[o]=-1,n[o]=-1;for(c=0;d>c;c++){for(var p=k=0;3>p;p++)o=a[3*c+p],-1==m[o]?(l[2*p]=o,l[2*p+1]=-1,k++):m[o]<i.index?(l[2*p]=o,l[2*p+1]=-1,j++):(l[2*p]=o,l[2*p+1]=m[o]);if(g+k>i.index+b)for(i={start:f,count:0,index:g},h.push(i),k=0;6>k;k+=2)p=l[k+1],p>-1&&p<i.index&&(l[k+1]=-1);for(k=0;6>k;k+=2)o=l[k],p=l[k+1],-1===p&&(p=g++),m[o]=p,n[p]=o,e[f++]=p-i.index,i.count++}return this.reorderBuffers(e,n,g),this.offsets=h},reorderBuffers:function(a,b,c){var d,e={},f=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(d in this.attributes)if("index"!=d)for(var g=this.attributes[d].array,h=0,i=f.length;i>h;h++){var j=f[h];if(g instanceof j){e[d]=new j(this.attributes[d].itemSize*c);break}}for(f=0;c>f;f++)for(d in g=b[f],this.attributes)if("index"!=d)for(var h=this.attributes[d].array,i=this.attributes[d].itemSize,j=e[d],k=0;i>k;k++)j[f*i+k]=h[g*i+k];this.attributes.index.array=a;for(d in this.attributes)"index"!=d&&(this.attributes[d].array=e[d],this.attributes[d].numItems=this.attributes[d].itemSize*c)},clone:function(){var a,b=new THREE.BufferGeometry,c=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];for(a in this.attributes){for(var d=this.attributes[a],e=d.array,f={itemSize:d.itemSize,array:null},d=0,g=c.length;g>d;d++){var h=c[d];if(e instanceof h){f.array=new h(e);break}}b.attributes[a]=f}for(d=0,g=this.offsets.length;g>d;d++)c=this.offsets[d],b.offsets.push({start:c.start,index:c.index,count:c.count});return b},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.hasTangents=!1,this.dynamic=!0,this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1
},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;d>c;c++)this.vertices[c].applyMatrix4(a);for(c=0,d=this.faces.length;d>c;c++){var e=this.faces[c];e.normal.applyMatrix3(b).normalize();for(var f=0,g=e.vertexNormals.length;g>f;f++)e.vertexNormals[f].applyMatrix3(b).normalize();e.centroid.applyMatrix4(a)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var a,b,c;for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],c.centroid.set(0,0,0),c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;d>c;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b];a.subVectors(this.vertices[e.c],g),b.subVectors(f,g),a.cross(b),a.normalize(),e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;for(d=Array(this.vertices.length),b=0,c=this.vertices.length;c>b;b++)d[b]=new THREE.Vector3;if(a){var e,f,g,h=new THREE.Vector3,i=new THREE.Vector3;for(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,a=0,b=this.faces.length;b>a;a++)c=this.faces[a],e=this.vertices[c.a],f=this.vertices[c.b],g=this.vertices[c.c],h.subVectors(g,f),i.subVectors(e,f),h.cross(i),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);for(b=0,c=this.vertices.length;c>b;b++)d[b].normalize();for(a=0,b=this.faces.length;b>a;a++)c=this.faces[a],c.vertexNormals[0]=d[c.a].clone(),c.vertexNormals[1]=d[c.b].clone(),c.vertexNormals[2]=d[c.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;for(c=0,d=this.faces.length;d>c;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;b>a;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;for(f.faces=this.faces,a=0,b=this.morphTargets.length;b>a;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[],e=this.morphNormals[a].faceNormals;var g,h,i=this.morphNormals[a].vertexNormals;for(c=0,d=this.faces.length;d>c;c++)g=new THREE.Vector3,h={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(g),i.push(h)}for(i=this.morphNormals[a],f.vertices=this.morphTargets[a].vertices,f.computeFaceNormals(),f.computeVertexNormals(),c=0,d=this.faces.length;d>c;c++)e=this.faces[c],g=i.faceNormals[c],h=i.vertexNormals[c],g.copy(e.normal),h.a.copy(e.vertexNormals[0]),h.b.copy(e.vertexNormals[1]),h.c.copy(e.vertexNormals[2])}for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r=[],s=[];c=new THREE.Vector3;var t=new THREE.Vector3,u=new THREE.Vector3,v=new THREE.Vector3,w=new THREE.Vector3;for(a=0,b=this.vertices.length;b>a;a++)r[a]=new THREE.Vector3,s[a]=new THREE.Vector3;for(a=0,b=this.faces.length;b>a;a++)e=this.faces[a],f=this.faceVertexUvs[0][a],d=e.a,q=e.b,e=e.c,g=this.vertices[d],h=this.vertices[q],i=this.vertices[e],j=f[0],k=f[1],l=f[2],f=h.x-g.x,m=i.x-g.x,n=h.y-g.y,o=i.y-g.y,h=h.z-g.z,g=i.z-g.z,i=k.x-j.x,p=l.x-j.x,k=k.y-j.y,j=l.y-j.y,l=1/(i*j-p*k),c.set((j*f-k*m)*l,(j*n-k*o)*l,(j*h-k*g)*l),t.set((i*m-p*f)*l,(i*o-p*n)*l,(i*g-p*h)*l),r[d].add(c),r[q].add(c),r[e].add(c),s[d].add(t),s[q].add(t),s[e].add(t);for(t=["a","b","c","d"],a=0,b=this.faces.length;b>a;a++)for(e=this.faces[a],c=0;c<Math.min(e.vertexNormals.length,3);c++)w.copy(e.vertexNormals[c]),d=e[t[c]],q=r[d],u.copy(q),u.sub(w.multiplyScalar(w.dot(q))).normalize(),v.crossVectors(e.vertexNormals[c],q),d=v.dot(s[d]),d=0>d?-1:1,e.vertexTangents[c]=new THREE.Vector4(u.x,u.y,u.z,d);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;d>c;c++)c>0&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var a,b,c,d={},e=[],f=[],g=Math.pow(10,4);for(b=0,c=this.vertices.length;c>b;b++)a=this.vertices[b],a=Math.round(a.x*g)+"_"+Math.round(a.y*g)+"_"+Math.round(a.z*g),void 0===d[a]?(d[a]=b,e.push(this.vertices[b]),f[b]=e.length-1):f[b]=f[d[a]];for(d=[],b=0,c=this.faces.length;c>b;b++)for(g=this.faces[b],g.a=f[g.a],g.b=f[g.b],g.c=f[g.c],g=[g.a,g.b,g.c],a=0;3>a;a++)if(g[a]==g[(a+1)%3]){d.push(b);break}for(b=d.length-1;b>=0;b--)for(g=d[b],this.faces.splice(g,1),f=0,c=this.faceVertexUvs.length;c>f;f++)this.faceVertexUvs[f].splice(g,1);return b=this.vertices.length-e.length,this.vertices=e,b},makeGroups:function(){var a=0;return function(b){var c,d,e,f,g={},h=this.morphTargets.length,i=this.morphNormals.length;for(this.geometryGroups={},c=0,d=this.faces.length;d>c;c++)e=this.faces[c],e=b?e.materialIndex:0,e in g||(g[e]={hash:e,counter:0}),f=g[e].hash+"_"+g[e].counter,f in this.geometryGroups||(this.geometryGroups[f]={faces3:[],materialIndex:e,vertices:0,numMorphTargets:h,numMorphNormals:i}),65535<this.geometryGroups[f].vertices+3&&(g[e].counter+=1,f=g[e].hash+"_"+g[e].counter,f in this.geometryGroups||(this.geometryGroups[f]={faces3:[],materialIndex:e,vertices:0,numMorphTargets:h,numMorphNormals:i})),this.geometryGroups[f].faces3.push(c),this.geometryGroups[f].vertices+=3;this.geometryGroupsList=[];for(var j in this.geometryGroups)this.geometryGroups[j].id=a++,this.geometryGroupsList.push(this.geometryGroups[j])}}(),clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;d>c;c++)a.vertices.push(b[c].clone());for(b=this.faces,c=0,d=b.length;d>c;c++)a.faces.push(b[c].clone());for(b=this.faceVertexUvs[0],c=0,d=b.length;d>c;c++){for(var e=b[c],f=[],g=0,h=e.length;h>g;g++)f.push(new THREE.Vector2(e[g].x,e[g].y));a.faceVertexUvs[0].push(f)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Geometry2=function(a){THREE.BufferGeometry.call(this),this.vertices=this.addAttribute("position",Float32Array,a,3).array,this.normals=this.addAttribute("normal",Float32Array,a,3).array,this.uvs=this.addAttribute("uv",Float32Array,a,2).array,this.boundingSphere=this.boundingBox=null},THREE.Geometry2.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up),this.quaternion.setFromRotationMatrix(a)}}(),THREE.Camera.prototype.clone=function(a){return void 0===a&&(a=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,a),a.matrixWorldInverse.copy(this.matrixWorldInverse),a.projectionMatrix.copy(this.projectionMatrix),a},THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this),this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=void 0!==e?e:.1,this.far=void 0!==f?f:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,a),a.left=this.left,a.right=this.right,a.top=this.top,a.bottom=this.bottom,a.near=this.near,a.far=this.far,a},THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this),this.fov=void 0!==a?a:50,this.aspect=void 0!==b?b:1,this.near=void 0!==c?c:.1,this.far=void 0!==d?d:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24),this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,a),a.fov=this.fov,a.aspect=this.aspect,a.near=this.near,a.far=this.far,a},THREE.Light=function(a){THREE.Object3D.call(this),this.color=new THREE.Color(a)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(a){return void 0===a&&(a=new THREE.Light),THREE.Object3D.prototype.clone.call(this,a),a.color.copy(this.color),a},THREE.AmbientLight=function(a){THREE.Light.call(this,a)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,a),a},THREE.AreaLight=function(a,b){THREE.Light.call(this,a),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==b?b:1,this.height=this.width=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraTop=this.shadowCameraRight=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a),this.position.set(0,100,0),this.groundColor=new THREE.Color(b),this.intensity=void 0!==c?c:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,a),a.groundColor.copy(this.groundColor),a.intensity=this.intensity,a},THREE.PointLight=function(a,b,c){THREE.Light.call(this,a),this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,a),a.intensity=this.intensity,a.distance=this.distance,a},THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.angle=void 0!==d?d:Math.PI/3,this.exponent=void 0!==e?e:10,this.onlyShadow=this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapHeight=this.shadowMapWidth=512,this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.distance=this.distance,a.angle=this.angle,a.exponent=this.exponent,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/a.total).toFixed(0)+"%"):b+((a.loaded/1e3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){return a=a.split("/"),1===a.length?"./":(a.pop(),a.join("/")+"/")},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;c>b;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){return a=Math.log(a)/Math.LN2,Math.floor(a)==a}function d(a){return a=Math.log(a)/Math.LN2,Math.pow(2,Math.round(a))}function e(a,b){var e=new Image;e.onload=function(){if(c(this.width)&&c(this.height))a.image=this;else{var b=d(this.width),e=d(this.height);a.image.width=b,a.image.height=e,a.image.getContext("2d").drawImage(this,0,0,b,e)}a.needsUpdate=!0},void 0!==h.crossOrigin&&(e.crossOrigin=h.crossOrigin),e.src=b}function f(a,c,d,f,g,h,i){var j=/\.dds$/i.test(d),k=b+d;if(j){var l=THREE.ImageUtils.loadCompressedTexture(k);a[c]=l}else l=document.createElement("canvas"),a[c]=new THREE.Texture(l);a[c].sourceFile=d,f&&(a[c].repeat.set(f[0],f[1]),1!==f[0]&&(a[c].wrapS=THREE.RepeatWrapping),1!==f[1]&&(a[c].wrapT=THREE.RepeatWrapping)),g&&a[c].offset.set(g[0],g[1]),h&&(d={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==d[h[0]]&&(a[c].wrapS=d[h[0]]),void 0!==d[h[1]]&&(a[c].wrapT=d[h[1]])),i&&(a[c].anisotropy=i),j||e(a[c],k)}function g(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,i="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?i="MeshPhongMaterial":"basic"===k&&(i="MeshBasicMaterial")}return void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]),(void 0!==a.transparent||1>a.opacity)&&(j.transparent=a.transparent),void 0!==a.depthTest&&(j.depthTest=a.depthTest),void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite),void 0!==a.visible&&(j.visible=a.visible),void 0!==a.flipSided&&(j.side=THREE.BackSide),void 0!==a.doubleSided&&(j.side=THREE.DoubleSide),void 0!==a.wireframe&&(j.wireframe=a.wireframe),void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors)),a.colorDiffuse?j.color=g(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor),a.colorSpecular&&(j.specular=g(a.colorSpecular)),a.colorAmbient&&(j.ambient=g(a.colorAmbient)),a.transparency&&(j.opacity=a.transparency),a.specularCoef&&(j.shininess=a.specularCoef),a.mapDiffuse&&b&&f(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy),a.mapLight&&b&&f(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy),a.mapBump&&b&&f(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy),a.mapNormal&&b&&f(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy),a.mapSpecular&&b&&f(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy),a.mapBumpScale&&(j.bumpScale=a.mapBumpScale),a.mapNormal?(i=THREE.ShaderLib.normalmap,k=THREE.UniformsUtils.clone(i.uniforms),k.tNormal.value=j.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(k.tDiffuse.value=j.map,k.enableDiffuse.value=!0),j.specularMap&&(k.tSpecular.value=j.specularMap,k.enableSpecular.value=!0),j.lightMap&&(k.tAO.value=j.lightMap,k.enableAO.value=!0),k.diffuse.value.setHex(j.color),k.specular.value.setHex(j.specular),k.ambient.value.setHex(j.ambient),k.shininess.value=j.shininess,void 0!==j.opacity&&(k.opacity.value=j.opacity),i=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:k,lights:!0,fog:!0}),j.transparent&&(i.transparent=!0)):i=new THREE[i](j),void 0!==a.DbgName&&(i.name=a.DbgName),i}},THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=new XMLHttpRequest;void 0!==b&&f.addEventListener("load",function(c){b(c.target.responseText),e.manager.itemEnd(a)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.open("GET",a,!0),f.send(null),e.manager.itemStart(a)},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=document.createElement("img");return void 0!==b&&f.addEventListener("load",function(){e.manager.itemEnd(a),b(this)},!1),void 0!==c&&f.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&f.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin),f.src=a,e.manager.itemStart(a),f},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.JSONLoader=function(a){THREE.Loader.call(this,a),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"==typeof c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c)},THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);if("scene"===h.metadata.type)return void console.error('THREE.JSONLoader: "'+b+'" seems to be a Scene. Use THREE.SceneLoader instead.');h=a.parse(h,d),c(h.geometry,h.materials)}else console.error('THREE.JSONLoader: "'+b+'" seems to be unreachable or the file is empty.');a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+b+'" ('+f.status+")");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.withCredentials=this.withCredentials,f.send(null)},THREE.JSONLoader.prototype.parse=function(a,b){var c=new THREE.Geometry,d=void 0!==a.scale?1/a.scale:1;return function(b){var d,e,f,g,h,i,j,k,l,m,n,o,p,q=a.faces;i=a.vertices;var r=a.normals,s=a.colors,t=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&t++;for(d=0;t>d;d++)c.faceVertexUvs[d]=[]}for(g=0,h=i.length;h>g;)d=new THREE.Vector3,d.x=i[g++]*b,d.y=i[g++]*b,d.z=i[g++]*b,c.vertices.push(d);for(g=0,h=q.length;h>g;)if(b=q[g++],l=1&b,f=2&b,d=8&b,j=16&b,m=32&b,i=64&b,b&=128,l){if(l=new THREE.Face3,l.a=q[g],l.b=q[g+1],l.c=q[g+3],n=new THREE.Face3,n.a=q[g+1],n.b=q[g+2],n.c=q[g+3],g+=4,f&&(f=q[g++],l.materialIndex=f,n.materialIndex=f),f=c.faces.length,d)for(d=0;t>d;d++)for(o=a.uvs[d],c.faceVertexUvs[d][f]=[],c.faceVertexUvs[d][f+1]=[],e=0;4>e;e++)k=q[g++],p=o[2*k],k=o[2*k+1],p=new THREE.Vector2(p,k),2!==e&&c.faceVertexUvs[d][f].push(p),0!==e&&c.faceVertexUvs[d][f+1].push(p);if(j&&(j=3*q[g++],l.normal.set(r[j++],r[j++],r[j]),n.normal.copy(l.normal)),m)for(d=0;4>d;d++)j=3*q[g++],m=new THREE.Vector3(r[j++],r[j++],r[j]),2!==d&&l.vertexNormals.push(m),0!==d&&n.vertexNormals.push(m);if(i&&(i=q[g++],i=s[i],l.color.setHex(i),n.color.setHex(i)),b)for(d=0;4>d;d++)i=q[g++],i=s[i],2!==d&&l.vertexColors.push(new THREE.Color(i)),0!==d&&n.vertexColors.push(new THREE.Color(i));c.faces.push(l),c.faces.push(n)}else{if(l=new THREE.Face3,l.a=q[g++],l.b=q[g++],l.c=q[g++],f&&(f=q[g++],l.materialIndex=f),f=c.faces.length,d)for(d=0;t>d;d++)for(o=a.uvs[d],c.faceVertexUvs[d][f]=[],e=0;3>e;e++)k=q[g++],p=o[2*k],k=o[2*k+1],p=new THREE.Vector2(p,k),c.faceVertexUvs[d][f].push(p);if(j&&(j=3*q[g++],l.normal.set(r[j++],r[j++],r[j])),m)for(d=0;3>d;d++)j=3*q[g++],m=new THREE.Vector3(r[j++],r[j++],r[j]),l.vertexNormals.push(m);if(i&&(i=q[g++],l.color.setHex(s[i])),b)for(d=0;3>d;d++)i=q[g++],l.vertexColors.push(new THREE.Color(s[i]));c.faces.push(l)}}(d),function(){if(a.skinWeights)for(var b=0,d=a.skinWeights.length;d>b;b+=2)c.skinWeights.push(new THREE.Vector4(a.skinWeights[b],a.skinWeights[b+1],0,0));if(a.skinIndices)for(b=0,d=a.skinIndices.length;d>b;b+=2)c.skinIndices.push(new THREE.Vector4(a.skinIndices[b],a.skinIndices[b+1],0,0));c.bones=a.bones,c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn("When skinning, number of vertices ("+c.vertices.length+"), skinIndices ("+c.skinIndices.length+"), and skinWeights ("+c.skinWeights.length+") should match."),c.animation=a.animation,c.animations=a.animations}(),function(b){if(void 0!==a.morphTargets){var d,e,f,g,h,i;for(d=0,e=a.morphTargets.length;e>d;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],h=c.morphTargets[d].vertices,i=a.morphTargets[d].vertices,f=0,g=i.length;g>f;f+=3){var j=new THREE.Vector3;j.x=i[f]*b,j.y=i[f+1]*b,j.z=i[f+2]*b,h.push(j)}}if(void 0!==a.morphColors)for(d=0,e=a.morphColors.length;e>d;d++)for(c.morphColors[d]={},c.morphColors[d].name=a.morphColors[d].name,c.morphColors[d].colors=[],g=c.morphColors[d].colors,h=a.morphColors[d].colors,b=0,f=h.length;f>b;b+=3)i=new THREE.Color(16755200),i.setRGB(h[b],h[b+1],h[b+2]),g.push(i)}(d),c.computeCentroids(),c.computeFaceNormals(),c.computeBoundingSphere(),void 0===a.materials?{geometry:c}:(d=this.initMaterials(a.materials,b),this.needsTangents(d)&&c.computeTangents(),{geometry:c,materials:d})},THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(){f++},this.itemEnd=function(a){e++,void 0!==d.onProgress&&d.onProgress(a,e,f),e===f&&void 0!==d.onLoad&&d.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c){var d=this;c=new THREE.XHRLoader,c.setCrossOrigin(this.crossOrigin),c.load(a,function(a){b(d.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.attributes,d=a.offsets;a=a.boundingSphere;for(var e in c){var f=c[e];b.attributes[e]={itemSize:f.itemSize,array:new self[f.type](f.array)}}return void 0!==d&&(b.offsets=JSON.parse(JSON.stringify(d))),void 0!==a&&(b.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==a.center?a.center:[0,0,0]),a.radius)),b}},THREE.Geometry2Loader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.Geometry2Loader.prototype={constructor:THREE.Geometry2Loader,load:function(a,b,c){var d=this;c=new THREE.XHRLoader,c.setCrossOrigin(this.crossOrigin),c.load(a,function(a){b(d.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b,c=new THREE.Geometry2(a.vertices.length/3),d=["vertices","normals","uvs"],e=a.boundingSphere;for(b in d){var f=d[b];c[f].set(a[f])}return void 0!==e&&(c.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==e.center?e.center:[0,0,0]),e.radius)),c}},THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c){var d=this;c=new THREE.XHRLoader,c.setCrossOrigin(this.crossOrigin),c.load(a,function(a){b(d.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];if(void 0!==a.color&&b.color.setHex(a.color),void 0!==a.ambient&&b.ambient.setHex(a.ambient),void 0!==a.emissive&&b.emissive.setHex(a.emissive),void 0!==a.specular&&b.specular.setHex(a.specular),void 0!==a.shininess&&(b.shininess=a.shininess),void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors),void 0!==a.blending&&(b.blending=a.blending),void 0!==a.side&&(b.side=a.side),void 0!==a.opacity&&(b.opacity=a.opacity),void 0!==a.transparent&&(b.transparent=a.transparent),void 0!==a.wireframe&&(b.wireframe=a.wireframe),void 0!==a.materials)for(var c=0,d=a.materials.length;d>c;c++)b.materials.push(this.parse(a.materials[c]));return b}},THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c){var d=this;c=new THREE.XHRLoader(d.manager),c.setCrossOrigin(this.crossOrigin),c.load(a,function(a){b(d.parse(JSON.parse(a)))})},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=this.parseGeometries(a.geometries),c=this.parseMaterials(a.materials);return this.parseObject(a.object,b,c)},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.Geometry2Loader,e=new THREE.BufferGeometryLoader,f=0,g=a.length;g>f;f++){var h,i=a[f];switch(i.type){case"PlaneGeometry":h=new THREE.PlaneGeometry(i.width,i.height,i.widthSegments,i.heightSegments);break;case"BoxGeometry":case"CubeGeometry":h=new THREE.BoxGeometry(i.width,i.height,i.depth,i.widthSegments,i.heightSegments,i.depthSegments);break;case"CircleGeometry":h=new THREE.CircleGeometry(i.radius,i.segments);break;case"CylinderGeometry":h=new THREE.CylinderGeometry(i.radiusTop,i.radiusBottom,i.height,i.radialSegments,i.heightSegments,i.openEnded);break;case"SphereGeometry":h=new THREE.SphereGeometry(i.radius,i.widthSegments,i.heightSegments,i.phiStart,i.phiLength,i.thetaStart,i.thetaLength);break;case"IcosahedronGeometry":h=new THREE.IcosahedronGeometry(i.radius,i.detail);break;case"TorusGeometry":h=new THREE.TorusGeometry(i.radius,i.tube,i.radialSegments,i.tubularSegments,i.arc);break;case"TorusKnotGeometry":h=new THREE.TorusKnotGeometry(i.radius,i.tube,i.radialSegments,i.tubularSegments,i.p,i.q,i.heightScale);break;case"BufferGeometry":h=e.parse(i.data);break;case"Geometry2":h=d.parse(i.data);break;case"Geometry":h=c.parse(i.data).geometry}h.uuid=i.uuid,void 0!==i.name&&(h.name=i.name),b[i.uuid]=h}return b},parseMaterials:function(a){var b={};if(void 0!==a)for(var c=new THREE.MaterialLoader,d=0,e=a.length;e>d;d++){var f=a[d],g=c.parse(f);g.uuid=f.uuid,void 0!==f.name&&(g.name=f.name),b[f.uuid]=g}return b},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;switch(b.type){case"Scene":e=new THREE.Scene;break;case"PerspectiveCamera":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case"OrthographicCamera":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case"AmbientLight":e=new THREE.AmbientLight(b.color);break;case"DirectionalLight":e=new THREE.DirectionalLight(b.color,b.intensity);break;case"PointLight":e=new THREE.PointLight(b.color,b.intensity,b.distance);break;case"SpotLight":e=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent);break;case"HemisphereLight":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case"Mesh":e=c[b.geometry];var f=d[b.material];void 0===e&&console.error("THREE.ObjectLoader: Undefined geometry "+b.geometry),void 0===f&&console.error("THREE.ObjectLoader: Undefined material "+b.material),e=new THREE.Mesh(e,f);break;case"Sprite":f=d[b.material],void 0===f&&console.error("THREE.ObjectLoader: Undefined material "+b.material),e=new THREE.Sprite(f);break;default:e=new THREE.Object3D}if(e.uuid=b.uuid,void 0!==b.name&&(e.name=b.name),void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale)),void 0!==b.visible&&(e.visible=b.visible),void 0!==b.userData&&(e.userData=b.userData),void 0!==b.children)for(var g in b.children)e.add(this.parseObject(b.children[g],c,d));return e}}()},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlers={},this.hierarchyHandlers={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(a,b,c){var d=this;c=new THREE.XHRLoader(d.manager),c.setCrossOrigin(this.crossOrigin),c.load(a,function(c){d.parse(JSON.parse(c),b,a)})},setCrossOrigin:function(a){this.crossOrigin=a},addGeometryHandler:function(a,b){this.geometryHandlers[a]={loaderClass:b}},addHierarchyHandler:function(a,b){this.hierarchyHandlers[a]={loaderClass:b}},parse:function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:z+a}function e(){f(w.scene,B.objects)}function f(a,b){var c,e,g,h,j,k;for(k in b){var l=w.objects[k],p=b[k];if(void 0===l){if(p.type&&p.type in y.hierarchyHandlers){if(void 0===p.loading){c={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var q,s={};for(q in p)q in c||(s[q]=p[q]);n=w.materials[p.material],p.loading=!0,c=y.hierarchyHandlers[p.type].loaderObject,c.options?c.load(d(p.url,B.urlBaseType),i(k,a,n,p)):c.load(d(p.url,B.urlBaseType),i(k,a,n,p),s)}}else if(void 0!==p.geometry){if(m=w.geometries[p.geometry]){if(l=!1,n=w.materials[p.material],l=n instanceof THREE.ShaderMaterial,e=p.position,g=p.rotation,h=p.scale,c=p.matrix,j=p.quaternion,p.material||(n=new THREE.MeshFaceMaterial(w.face_materials[p.geometry])),n instanceof THREE.MeshFaceMaterial&&0===n.materials.length&&(n=new THREE.MeshFaceMaterial(w.face_materials[p.geometry])),n instanceof THREE.MeshFaceMaterial)for(s=0;s<n.materials.length;s++)l=l||n.materials[s]instanceof THREE.ShaderMaterial;l&&m.computeTangents(),p.skin?l=new THREE.SkinnedMesh(m,n):p.morph?(l=new THREE.MorphAnimMesh(m,n),void 0!==p.duration&&(l.duration=p.duration),void 0!==p.time&&(l.time=p.time),void 0!==p.mirroredLoop&&(l.mirroredLoop=p.mirroredLoop),n.morphNormals&&m.computeMorphNormals()):l=new THREE.Mesh(m,n),l.name=k,c?(l.matrixAutoUpdate=!1,l.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(l.position.fromArray(e),j?l.quaternion.fromArray(j):l.rotation.fromArray(g),l.scale.fromArray(h)),l.visible=p.visible,l.castShadow=p.castShadow,l.receiveShadow=p.receiveShadow,a.add(l),w.objects[k]=l
}}else if("AmbientLight"===p.type||"PointLight"===p.type||"DirectionalLight"===p.type||"SpotLight"===p.type||"HemisphereLight"===p.type||"AreaLight"===p.type){switch(s=p.color,c=p.intensity,e=p.distance,g=p.position,h=p.rotation,p.type){case"AmbientLight":r=new THREE.AmbientLight(s);break;case"PointLight":r=new THREE.PointLight(s,c,e),r.position.fromArray(g);break;case"DirectionalLight":r=new THREE.DirectionalLight(s,c),r.position.fromArray(p.direction);break;case"SpotLight":r=new THREE.SpotLight(s,c,e,1),r.angle=p.angle,r.position.fromArray(g),r.target.set(g[0],g[1]-e,g[2]),r.target.applyEuler(new THREE.Euler(h[0],h[1],h[2],"XYZ"));break;case"HemisphereLight":r=new THREE.DirectionalLight(s,c,e),r.target.set(g[0],g[1]-e,g[2]),r.target.applyEuler(new THREE.Euler(h[0],h[1],h[2],"XYZ"));break;case"AreaLight":r=new THREE.AreaLight(s,c),r.position.fromArray(g),r.width=p.size,r.height=p.size_y}a.add(r),r.name=k,w.lights[k]=r,w.objects[k]=r}else"PerspectiveCamera"===p.type||"OrthographicCamera"===p.type?(e=p.position,g=p.rotation,j=p.quaternion,"PerspectiveCamera"===p.type?o=new THREE.PerspectiveCamera(p.fov,p.aspect,p.near,p.far):"OrthographicCamera"===p.type&&(o=new THREE.OrthographicCamera(p.left,p.right,p.top,p.bottom,p.near,p.far)),o.name=k,o.position.fromArray(e),void 0!==j?o.quaternion.fromArray(j):void 0!==g&&o.rotation.fromArray(g),a.add(o),w.cameras[k]=o,w.objects[k]=o):(e=p.position,g=p.rotation,h=p.scale,j=p.quaternion,l=new THREE.Object3D,l.name=k,l.position.fromArray(e),j?l.quaternion.fromArray(j):l.rotation.fromArray(g),l.scale.fromArray(h),l.visible=void 0!==p.visible?p.visible:!1,a.add(l),w.objects[k]=l,w.empties[k]=l);if(l){if(void 0!==p.userData)for(var t in p.userData)l.userData[t]=p.userData[t];if(void 0!==p.groups)for(s=0;s<p.groups.length;s++)c=p.groups[s],void 0===w.groups[c]&&(w.groups[c]=[]),w.groups[c].push(k)}}void 0!==l&&void 0!==p.children&&f(l,p.children)}}function g(a,b,c,d,f){var g=f.rotation,h=f.quaternion,i=f.scale;a.position.fromArray(f.position),h?a.quaternion.fromArray(h):a.rotation.fromArray(g),a.scale.fromArray(i),d&&a.traverse(function(a){a.material=d});var j=void 0!==f.visible?f.visible:!0;a.traverse(function(a){a.visible=j}),c.add(a),a.name=b,w.objects[b]=a,e()}function h(a){return function(b,c){b.name=a,w.geometries[a]=b,w.face_materials[a]=c,e(),s-=1,y.onLoadComplete(),k()}}function i(a,b,c,d){return function(e){g(e.content?e.content:e.dae?e.scene:e,a,b,c,d),s-=1,y.onLoadComplete(),k()}}function j(a){return function(b,c){b.name=a,w.geometries[a]=b,w.face_materials[a]=c}}function k(){if(y.callbackProgress({totalModels:u,totalTextures:v,loadedModels:u-s,loadedTextures:v-t},w),y.onLoadProgress(),0===s&&0===t){for(var a=0;a<A.length;a++){var c=A[a],d=w.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,w.scene.add(c.object.target)),c.object.target.userData.targetInverse=c.object}b(w)}}function l(a,b){if(b(a),void 0!==a.children)for(var c in a.children)l(a.children[c],b)}var m,n,o,p,q,r,s,t,u,v,w,x,y=this,z=THREE.Loader.prototype.extractUrlBase(c),A=[],B=a;for(x in this.geometryHandlers)a=this.geometryHandlers[x].loaderClass,this.geometryHandlers[x].loaderObject=new a;for(x in this.hierarchyHandlers)a=this.hierarchyHandlers[x].loaderClass,this.hierarchyHandlers[x].loaderObject=new a;t=s=0,w={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},B.transform&&(x=B.transform.position,a=B.transform.rotation,c=B.transform.scale,x&&w.scene.position.fromArray(x),a&&w.scene.rotation.fromArray(a),c&&w.scene.scale.fromArray(c),x||a||c)&&(w.scene.updateMatrix(),w.scene.updateMatrixWorld()),x=function(a){return function(){t-=a,k(),y.onLoadComplete()}};for(var C in B.fogs)a=B.fogs[C],"linear"===a.type?p=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(p=new THREE.FogExp2(0,a.density)),a=a.color,p.color.setRGB(a[0],a[1],a[2]),w.fogs[C]=p;for(var D in B.geometries)p=B.geometries[D],p.type in this.geometryHandlers&&(s+=1,y.onLoadStart());for(var E in B.objects)l(B.objects[E],function(a){a.type&&a.type in y.hierarchyHandlers&&(s+=1,y.onLoadStart())});u=s;for(D in B.geometries)if(p=B.geometries[D],"cube"===p.type)m=new THREE.BoxGeometry(p.width,p.height,p.depth,p.widthSegments,p.heightSegments,p.depthSegments),m.name=D,w.geometries[D]=m;else if("plane"===p.type)m=new THREE.PlaneGeometry(p.width,p.height,p.widthSegments,p.heightSegments),m.name=D,w.geometries[D]=m;else if("sphere"===p.type)m=new THREE.SphereGeometry(p.radius,p.widthSegments,p.heightSegments),m.name=D,w.geometries[D]=m;else if("cylinder"===p.type)m=new THREE.CylinderGeometry(p.topRad,p.botRad,p.height,p.radSegs,p.heightSegs),m.name=D,w.geometries[D]=m;else if("torus"===p.type)m=new THREE.TorusGeometry(p.radius,p.tube,p.segmentsR,p.segmentsT),m.name=D,w.geometries[D]=m;else if("icosahedron"===p.type)m=new THREE.IcosahedronGeometry(p.radius,p.subdivisions),m.name=D,w.geometries[D]=m;else if(p.type in this.geometryHandlers){E={};for(q in p)"type"!==q&&"url"!==q&&(E[q]=p[q]);this.geometryHandlers[p.type].loaderObject.load(d(p.url,B.urlBaseType),h(D),E)}else"embedded"===p.type&&(E=B.embeds[p.id],E.metadata=B.metadata,E&&(E=this.geometryHandlers.ascii.loaderObject.parse(E,""),j(D)(E.geometry,E.materials)));for(var F in B.textures)if(D=B.textures[F],D.url instanceof Array)for(t+=D.url.length,q=0;q<D.url.length;q++)y.onLoadStart();else t+=1,y.onLoadStart();v=t;for(F in B.textures){if(D=B.textures[F],void 0!==D.mapping&&void 0!==THREE[D.mapping]&&(D.mapping=new THREE[D.mapping]),D.url instanceof Array){for(E=D.url.length,p=[],q=0;E>q;q++)p[q]=d(D.url[q],B.urlBaseType);q=(q=/\.dds$/i.test(p[0]))?THREE.ImageUtils.loadCompressedTextureCube(p,D.mapping,x(E)):THREE.ImageUtils.loadTextureCube(p,D.mapping,x(E))}else q=/\.dds$/i.test(D.url),E=d(D.url,B.urlBaseType),p=x(1),q=q?THREE.ImageUtils.loadCompressedTexture(E,D.mapping,p):THREE.ImageUtils.loadTexture(E,D.mapping,p),void 0!==THREE[D.minFilter]&&(q.minFilter=THREE[D.minFilter]),void 0!==THREE[D.magFilter]&&(q.magFilter=THREE[D.magFilter]),D.anisotropy&&(q.anisotropy=D.anisotropy),D.repeat&&(q.repeat.set(D.repeat[0],D.repeat[1]),1!==D.repeat[0]&&(q.wrapS=THREE.RepeatWrapping),1!==D.repeat[1]&&(q.wrapT=THREE.RepeatWrapping)),D.offset&&q.offset.set(D.offset[0],D.offset[1]),D.wrap&&(E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==E[D.wrap[0]]&&(q.wrapS=E[D.wrap[0]]),void 0!==E[D.wrap[1]]&&(q.wrapT=E[D.wrap[1]]));w.textures[F]=q}var G,H;for(G in B.materials){F=B.materials[G];for(H in F.parameters)"envMap"===H||"map"===H||"lightMap"===H||"bumpMap"===H?F.parameters[H]=w.textures[F.parameters[H]]:"shading"===H?F.parameters[H]="flat"===F.parameters[H]?THREE.FlatShading:THREE.SmoothShading:"side"===H?F.parameters[H]="double"==F.parameters[H]?THREE.DoubleSide:"back"==F.parameters[H]?THREE.BackSide:THREE.FrontSide:"blending"===H?F.parameters[H]=F.parameters[H]in THREE?THREE[F.parameters[H]]:THREE.NormalBlending:"combine"===H?F.parameters[H]=F.parameters[H]in THREE?THREE[F.parameters[H]]:THREE.MultiplyOperation:"vertexColors"===H?"face"==F.parameters[H]?F.parameters[H]=THREE.FaceColors:F.parameters[H]&&(F.parameters[H]=THREE.VertexColors):"wrapRGB"===H&&(x=F.parameters[H],F.parameters[H]=new THREE.Vector3(x[0],x[1],x[2]));void 0!==F.parameters.opacity&&1>F.parameters.opacity&&(F.parameters.transparent=!0),F.parameters.normalMap?(x=THREE.ShaderLib.normalmap,D=THREE.UniformsUtils.clone(x.uniforms),q=F.parameters.color,E=F.parameters.specular,p=F.parameters.ambient,C=F.parameters.shininess,D.tNormal.value=w.textures[F.parameters.normalMap],F.parameters.normalScale&&D.uNormalScale.value.set(F.parameters.normalScale[0],F.parameters.normalScale[1]),F.parameters.map&&(D.tDiffuse.value=F.parameters.map,D.enableDiffuse.value=!0),F.parameters.envMap&&(D.tCube.value=F.parameters.envMap,D.enableReflection.value=!0,D.reflectivity.value=F.parameters.reflectivity),F.parameters.lightMap&&(D.tAO.value=F.parameters.lightMap,D.enableAO.value=!0),F.parameters.specularMap&&(D.tSpecular.value=w.textures[F.parameters.specularMap],D.enableSpecular.value=!0),F.parameters.displacementMap&&(D.tDisplacement.value=w.textures[F.parameters.displacementMap],D.enableDisplacement.value=!0,D.uDisplacementBias.value=F.parameters.displacementBias,D.uDisplacementScale.value=F.parameters.displacementScale),D.diffuse.value.setHex(q),D.specular.value.setHex(E),D.ambient.value.setHex(p),D.shininess.value=C,F.parameters.opacity&&(D.opacity.value=F.parameters.opacity),n=new THREE.ShaderMaterial({fragmentShader:x.fragmentShader,vertexShader:x.vertexShader,uniforms:D,lights:!0,fog:!0})):n=new THREE[F.type](F.parameters),n.name=G,w.materials[G]=n}for(G in B.materials)if(F=B.materials[G],F.parameters.materials){for(H=[],q=0;q<F.parameters.materials.length;q++)H.push(w.materials[F.parameters.materials[q]]);w.materials[G].materials=H}e(),w.cameras&&B.defaults.camera&&(w.currentCamera=w.cameras[B.defaults.camera]),w.fogs&&B.defaults.fog&&(w.scene.fog=w.fogs[B.defaults.fog]),y.callbackSync(w),k()}},THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c){c=new THREE.ImageLoader(this.manager),c.setCrossOrigin(this.crossOrigin),c.load(a,function(a){a=new THREE.Texture(a),a.needsUpdate=!0,void 0!==b&&b(a)})},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthWrite=this.depthTest=!0,this.polygonOffset=!1,this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]="overdraw"==b?Number(c):c}}},clone:function(a){return void 0===a&&(a=new THREE.Material),a.name=this.name,a.side=this.side,a.opacity=this.opacity,a.transparent=this.transparent,a.blending=this.blending,a.blendSrc=this.blendSrc,a.blendDst=this.blendDst,a.blendEquation=this.blendEquation,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.polygonOffset=this.polygonOffset,a.polygonOffsetFactor=this.polygonOffsetFactor,a.polygonOffsetUnits=this.polygonOffsetUnits,a.alphaTest=this.alphaTest,a.overdraw=this.overdraw,a.visible=this.visible,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.linecap=this.linecap,a.linejoin=this.linejoin,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.LineDashedMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.scale=this.scale,a.dashSize=this.dashSize,a.gapSize=this.gapSize,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.MeshBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(a)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a},THREE.MeshLambertMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.envMap=this.specularMap=this.lightMap=this.map=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(a)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshPhongMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.wrapAround=this.metal=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.bumpMap=this.lightMap=this.map=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.envMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(a)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.specular.copy(this.specular),a.shininess=this.shininess,a.metal=this.metal,a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.bumpMap=this.bumpMap,a.bumpScale=this.bumpScale,a.normalMap=this.normalMap,a.normalScale.copy(this.normalScale),a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshDepthMaterial=function(a){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,a),a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(a)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,a),a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a},THREE.ParticleSystemMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleSystemMaterial.prototype.clone=function(){var a=new THREE.ParticleSystemMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.size=this.size,a.sizeAttenuation=this.sizeAttenuation,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial,THREE.ShaderMaterial=function(a){THREE.Material.call(this),this.vertexShader=this.fragmentShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName="position",this.setValues(a)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,a),a.fragmentShader=this.fragmentShader,a.vertexShader=this.vertexShader,a.uniforms=THREE.UniformsUtils.clone(this.uniforms),a.attributes=this.attributes,a.defines=this.defines,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.fog=this.fog,a.lights=this.lights,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.SpriteMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(a)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.rotation=this.rotation,a.fog=this.fog,a},THREE.SpriteCanvasMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(a)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var a=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.program=this.program,a},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(a,b,c,d,e,f,g,h,i){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=a,this.mipmaps=[],this.mapping=void 0!==b?b:new THREE.UVMapping,this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==e?e:THREE.LinearFilter,this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i?i:1,this.format=void 0!==g?g:THREE.RGBAFormat,this.type=void 0!==h?h:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update(),this._needsUpdate=a},clone:function(a){return void 0===a&&(a=new THREE.Texture),a.image=this.image,a.mipmaps=this.mipmaps.slice(0),a.mapping=this.mapping,a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.format=this.format,a.type=this.type,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.generateMipmaps=this.generateMipmaps,a.premultiplyAlpha=this.premultiplyAlpha,a.flipY=this.flipY,a.unpackAlignment=this.unpackAlignment,a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={width:b,height:c},this.mipmaps=a,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.ParticleSystemMaterial({color:16777215*Math.random()}),this.frustumCulled=this.sortParticles=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(a){return void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material)),a.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,a),a},THREE.Line=function(a,b,c){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==c?c:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(a){return void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Mesh=function(a,b){THREE.Object3D.call(this),this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;b>a;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return void 0!==this.morphTargetDictionary[a]?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Bone=function(a){THREE.Object3D.call(this),this.skin=a,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix()),(b||this.matrixWorldNeedsUpdate)&&(a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0);var c,d=this.children.length;for(c=0;d>c;c++)this.children[c].update(this.skinMatrix,b)},THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b),this.useVertexTexture=void 0!==c?c:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var d,e,f;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length,this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=a>256?64:a>64?32:a>16?16:8,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a),this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(a){return void 0===a&&(a=new THREE.Bone(this)),this.bones.push(a),a},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var a=new THREE.Matrix4;return function(b){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||b)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1),b=0;for(var c=this.children.length;c>b;b++){var d=this.children[b];d instanceof THREE.Bone?d.update(this.identityMatrix,!1):d.updateMatrixWorld(!0)}if(void 0==this.boneInverses)for(this.boneInverses=[],b=0,c=this.bones.length;c>b;b++)d=new THREE.Matrix4,d.getInverse(this.bones[b].skinMatrix),this.boneInverses.push(d);for(b=0,c=this.bones.length;c>b;b++)a.multiplyMatrices(this.bones[b].skinMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0),this.normalizeSkinWeights()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();1/0!==c?b.multiplyScalar(c):b.set(1)}},THREE.SkinnedMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,a),a},THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b),this.duration=1e3,this.mirroredLoop=!1,this.currentKeyframe=this.lastKeyframe=this.time=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a,this.endKeyframe=b,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;f>e;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1],c[g]||(c[g]={start:1/0,end:-1/0});var h=c[g];e<h.start&&(h.start=e),e>h.end&&(h.end=e),b||(b=g)}}a.firstAnimation=b},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1e3,this.time=0):console.warn("animation["+a+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time%=this.duration,0>this.time&&(this.time+=this.duration)),a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1),a!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a),b=this.time%b/b,this.directionBackwards&&(b=1-b),this.morphTargetInfluences[this.currentKeyframe]=b,this.morphTargetInfluences[this.lastKeyframe]=1-b},THREE.MorphAnimMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material)),a.duration=this.duration,a.mirroredLoop=this.mirroredLoop,a.time=this.time,a.lastKeyframe=this.lastKeyframe,a.currentKeyframe=this.currentKeyframe,a.direction=this.direction,a.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,a),a},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0),b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a}),this.add(a)},THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;c>b&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object},THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(1<this.objects.length){a.setFromMatrixPosition(c.matrixWorld),b.setFromMatrixPosition(this.matrixWorld),c=a.distanceTo(b),this.objects[0].object.visible=!0;for(var d=1,e=this.objects.length;e>d&&c>=this.objects[d].distance;d++)this.objects[d-1].object.visible=!1,this.objects[d].object.visible=!0;for(;e>d;d++)this.objects[d].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(a){void 0===a&&(a=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,a);for(var b=0,c=this.objects.length;c>b;b++){var d=this.objects[b].object.clone();d.visible=0===b,a.addLevel(d,this.objects[b].distance)}return a},THREE.Sprite=function(){var a=new THREE.Geometry2(3);return a.vertices.set([-.5,-.5,0,.5,-.5,0,.5,.5,0]),function(b){THREE.Object3D.call(this),this.geometry=a,this.material=void 0!==b?b:new THREE.SpriteMaterial
}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(a){return void 0===a&&(a=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.overrideMaterial=this.fog=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)){this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(this.dispatchEvent({type:"objectAdded",object:a}),a.dispatchEvent({type:"addedToScene",scene:this}),b=0;b<a.children.length;b++)this.__addObject(a.children[b])},THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);if(-1!==b&&this.__lights.splice(b,1),a.shadowCascadeArray)for(b=0;b<a.shadowCascadeArray.length;b++)this.__removeObject(a.shadowCascadeArray[b])}else a instanceof THREE.Camera||(this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1));for(this.dispatchEvent({type:"objectRemoved",object:a}),a.dispatchEvent({type:"removedFromScene",scene:this}),b=0;b<a.children.length;b++)this.__removeObject(a.children[b])},THREE.Scene.prototype.clone=function(a){return void 0===a&&(a=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,a),null!==this.fog&&(a.fog=this.fog.clone()),null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone()),a.autoUpdate=this.autoUpdate,a.matrixAutoUpdate=this.matrixAutoUpdate,a},THREE.Fog=function(a,b,c){this.name="",this.color=new THREE.Color(a),this.near=void 0!==b?b:1,this.far=void 0!==c?c:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(a,b){this.name="",this.color=new THREE.Color(a),this.density=void 0!==b?b:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(a){function b(a,b,c){for(var d=0,e=v.length;e>d;d++){var f=v[d];if(ub.copy(f.color),f instanceof THREE.DirectionalLight){var g=Cb.setFromMatrixPosition(f.matrixWorld).normalize(),h=b.dot(g);0>=h||(h*=f.intensity,c.add(ub.multiplyScalar(h)))}else f instanceof THREE.PointLight&&(g=Cb.setFromMatrixPosition(f.matrixWorld),h=b.dot(Cb.subVectors(g,a).normalize()),0>=h||(h*=0==f.distance?1:1-Math.min(a.distanceTo(g)/f.distance,1),0!=h&&(h*=f.intensity,c.add(ub.multiplyScalar(h)))))}}function c(a,b,c,d){m(b),n(c),o(d),p(a.getStyle()),H.stroke(),yb.expandByScalar(2*b)}function d(a){q(a.getStyle()),H.fill()}function e(a){f(a.target)}function f(a){var b=a.wrapS===THREE.RepeatWrapping,c=a.wrapT===THREE.RepeatWrapping,d=a.image,e=document.createElement("canvas");e.width=d.width,e.height=d.height;var f=e.getContext("2d");f.setTransform(1,0,0,-1,0,d.height),f.drawImage(d,0,0),vb[a.id]=H.createPattern(e,!0===b&&!0===c?"repeat":!0===b&&!1===c?"repeat-x":!1===b&&!0===c?"repeat-y":"no-repeat")}function g(a,b,c,d,g,h,i,j,k,l,m,n,o){if(!(o instanceof THREE.DataTexture)){!1===o.hasEventListener("update",e)&&(void 0!==o.image&&0<o.image.width&&f(o),o.addEventListener("update",e));var p=vb[o.id];if(void 0!==p){q(p);var p=o.offset.x/o.repeat.x,r=o.offset.y/o.repeat.y,s=o.image.width*o.repeat.x;o=o.image.height*o.repeat.y,i=(i+p)*s,j=(j+r)*o,c-=a,d-=b,g-=a,h-=b,k=(k+p)*s-i,l=(l+r)*o-j,m=(m+p)*s-i,n=(n+r)*o-j,o=k*n-m*l,0!==o&&(p=1/o,o=(n*c-l*g)*p,l=(n*d-l*h)*p,c=(k*g-m*c)*p,d=(k*h-m*d)*p,a=a-o*i-c*j,b=b-l*i-d*j,H.save(),H.transform(o,l,c,d,a,b),H.fill(),H.restore())}else q("rgba(0,0,0,1)"),H.fill()}}function h(a,b,c,d,e,f,g,h,i,j,k,l,m){var n,o;n=m.width-1,o=m.height-1,g*=n,h*=o,c-=a,d-=b,e-=a,f-=b,i=i*n-g,j=j*o-h,k=k*n-g,l=l*o-h,o=1/(i*l-k*j),n=(l*c-j*e)*o,j=(l*d-j*f)*o,c=(i*e-k*c)*o,d=(i*f-k*d)*o,a=a-n*g-c*h,b=b-j*g-d*h,H.save(),H.transform(n,j,c,d,a,b),H.clip(),H.drawImage(m,0,0),H.restore()}function i(a,b,c,d){return kb[0]=255*a.r|0,kb[1]=255*a.g|0,kb[2]=255*a.b|0,kb[4]=255*b.r|0,kb[5]=255*b.g|0,kb[6]=255*b.b|0,kb[8]=255*c.r|0,kb[9]=255*c.g|0,kb[10]=255*c.b|0,kb[12]=255*d.r|0,kb[13]=255*d.g|0,kb[14]=255*d.b|0,ib.putImageData(jb,0,0),mb.drawImage(hb,0,0),lb}function j(a,b,c){var d=b.x-a.x,e=b.y-a.y,f=d*d+e*e;0!==f&&(c/=Math.sqrt(f),d*=c,e*=c,b.x+=d,b.y+=e,a.x-=d,a.y-=e)}function k(a){K!==a&&(K=H.globalAlpha=a)}function l(a){L!==a&&(a===THREE.NormalBlending?H.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?H.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(H.globalCompositeOperation="darker"),L=a)}function m(a){O!==a&&(O=H.lineWidth=a)}function n(a){P!==a&&(P=H.lineCap=a)}function o(a){Q!==a&&(Q=H.lineJoin=a)}function p(a){M!==a&&(M=H.strokeStyle=a)}function q(a){N!==a&&(N=H.fillStyle=a)}function r(a,b){(R!==a||S!==b)&&(H.setLineDash([a,b]),R=a,S=b)}console.log("THREE.CanvasRenderer",THREE.REVISION);var s=THREE.Math.smoothstep;a=a||{};var t,u,v,w,x,y,z,A=this,B=new THREE.Projector,C=void 0!==a.canvas?a.canvas:document.createElement("canvas"),D=C.width,E=C.height,F=Math.floor(D/2),G=Math.floor(E/2),H=C.getContext("2d",{alpha:!0===a.alpha}),I=new THREE.Color(0),J=0,K=1,L=0,M=null,N=null,O=null,P=null,Q=null,R=null,S=0;new THREE.RenderableVertex,new THREE.RenderableVertex;var T,U,V,W,X,Y,Z,$,_,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb=new THREE.Color,ob=new THREE.Color,pb=new THREE.Color,qb=new THREE.Color,rb=new THREE.Color,sb=new THREE.Color,tb=new THREE.Color,ub=new THREE.Color,vb={},wb=new THREE.Box2,xb=new THREE.Box2,yb=new THREE.Box2,zb=new THREE.Color,Ab=new THREE.Color,Bb=new THREE.Color,Cb=new THREE.Vector3,Db=new THREE.Vector3,Eb=new THREE.Matrix3,Fb=16;hb=document.createElement("canvas"),hb.width=hb.height=2,ib=hb.getContext("2d"),ib.fillStyle="rgba(0,0,0,1)",ib.fillRect(0,0,2,2),jb=ib.getImageData(0,0,2,2),kb=jb.data,lb=document.createElement("canvas"),lb.width=lb.height=Fb,mb=lb.getContext("2d"),mb.translate(-Fb/2,-Fb/2),mb.scale(Fb,Fb),Fb--,void 0===H.setLineDash&&(H.setLineDash=void 0!==H.mozDash?function(a){H.mozDash=null!==a[0]?a:null}:function(){}),this.domElement=C,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.sortElements=this.sortObjects=this.autoClear=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(a,b,c){D=a*this.devicePixelRatio,E=b*this.devicePixelRatio,F=Math.floor(D/2),G=Math.floor(E/2),C.width=D,C.height=E,1!==this.devicePixelRatio&&!1!==c&&(C.style.width=a+"px",C.style.height=b+"px"),wb.min.set(-F,-G),wb.max.set(F,G),xb.min.set(-F,-G),xb.max.set(F,G),K=1,L=0,Q=P=O=N=M=null},this.setClearColor=function(a,b){I.set(a),J=void 0!==b?b:1,xb.min.set(-F,-G),xb.max.set(F,G)},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){H.setTransform(1,0,0,-1,F,G),!1===xb.empty()&&(xb.intersect(wb),xb.expandByScalar(2),1>J&&H.clearRect(0|xb.min.x,0|xb.min.y,xb.max.x-xb.min.x|0,xb.max.y-xb.min.y|0),J>0&&(l(THREE.NormalBlending),k(1),q("rgba("+Math.floor(255*I.r)+","+Math.floor(255*I.g)+","+Math.floor(255*I.b)+","+J+")"),H.fillRect(0|xb.min.x,0|xb.min.y,xb.max.x-xb.min.x|0,xb.max.y-xb.min.y|0)),xb.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(a,C){if(!1==C instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear(),H.setTransform(1,0,0,-1,F,G),A.info.render.vertices=0,A.info.render.faces=0,t=B.projectScene(a,C,this.sortObjects,this.sortElements),u=t.elements,v=t.lights,w=C,Eb.getNormalMatrix(C.matrixWorldInverse),zb.setRGB(0,0,0),Ab.setRGB(0,0,0),Bb.setRGB(0,0,0);for(var D=0,E=v.length;E>D;D++){var I=v[D],J=I.color;I instanceof THREE.AmbientLight?zb.add(J):I instanceof THREE.DirectionalLight?Ab.add(J):I instanceof THREE.PointLight&&Bb.add(J)}for(D=0,E=u.length;E>D;D++){var K=u[D],L=K.material;if(void 0!==L&&!1!==L.visible){if(yb.makeEmpty(),K instanceof THREE.RenderableSprite){x=K,x.x*=F,x.y*=G,I=x,J=L,k(J.opacity),l(J.blending);var M=K.scale.x*F,K=K.scale.y*G,L=.5*Math.sqrt(M*M+K*K);if(yb.min.set(I.x-L,I.y-L),yb.max.set(I.x+L,I.y+L),J instanceof THREE.SpriteMaterial||J instanceof THREE.ParticleSystemMaterial){var N=J.map;if(null!==N){!1===N.hasEventListener("update",e)&&(void 0!==N.image&&0<N.image.width&&f(N),N.addEventListener("update",e)),L=vb[N.id],q(void 0!==L?L:"rgba( 0, 0, 0, 1 )");var O=N.image,L=O.width*N.offset.x,P=O.height*N.offset.y,Q=O.width*N.repeat.x,N=O.height*N.repeat.y,O=M/Q,R=K/N;H.save(),H.translate(I.x,I.y),0!==J.rotation&&H.rotate(J.rotation),H.translate(-M/2,-K/2),H.scale(O,R),H.translate(-L,-P),H.fillRect(L,P,Q,N)}else q(J.color.getStyle()),H.save(),H.translate(I.x,I.y),0!==J.rotation&&H.rotate(J.rotation),H.scale(M,-K),H.fillRect(-.5,-.5,1,1);H.restore()}else J instanceof THREE.SpriteCanvasMaterial&&(p(J.color.getStyle()),q(J.color.getStyle()),H.save(),H.translate(I.x,I.y),0!==J.rotation&&H.rotate(J.rotation),H.scale(M,K),J.program(H),H.restore())}else if(K instanceof THREE.RenderableLine){if(x=K.v1,y=K.v2,x.positionScreen.x*=F,x.positionScreen.y*=G,y.positionScreen.x*=F,y.positionScreen.y*=G,yb.setFromPoints([x.positionScreen,y.positionScreen]),!0===wb.isIntersectionBox(yb))if(I=x,J=y,M=K,K=L,k(K.opacity),l(K.blending),H.beginPath(),H.moveTo(I.positionScreen.x,I.positionScreen.y),H.lineTo(J.positionScreen.x,J.positionScreen.y),K instanceof THREE.LineBasicMaterial){if(m(K.linewidth),n(K.linecap),o(K.linejoin),K.vertexColors!==THREE.VertexColors)p(K.color.getStyle());else if(L=M.vertexColors[0].getStyle(),M=M.vertexColors[1].getStyle(),L===M)p(L);else{try{var S=H.createLinearGradient(I.positionScreen.x,I.positionScreen.y,J.positionScreen.x,J.positionScreen.y);S.addColorStop(0,L),S.addColorStop(1,M)}catch(hb){S=L}p(S)}H.stroke(),yb.expandByScalar(2*K.linewidth)}else K instanceof THREE.LineDashedMaterial&&(m(K.linewidth),n(K.linecap),o(K.linejoin),p(K.color.getStyle()),r(K.dashSize,K.gapSize),H.stroke(),yb.expandByScalar(2*K.linewidth),r(null,null))}else if(K instanceof THREE.RenderableFace){if(x=K.v1,y=K.v2,z=K.v3,-1>x.positionScreen.z||1<x.positionScreen.z)continue;if(-1>y.positionScreen.z||1<y.positionScreen.z)continue;if(-1>z.positionScreen.z||1<z.positionScreen.z)continue;if(x.positionScreen.x*=F,x.positionScreen.y*=G,y.positionScreen.x*=F,y.positionScreen.y*=G,z.positionScreen.x*=F,z.positionScreen.y*=G,0<L.overdraw&&(j(x.positionScreen,y.positionScreen,L.overdraw),j(y.positionScreen,z.positionScreen,L.overdraw),j(z.positionScreen,x.positionScreen,L.overdraw)),yb.setFromPoints([x.positionScreen,y.positionScreen,z.positionScreen]),!0===wb.isIntersectionBox(yb)){I=x,J=y,M=z,A.info.render.vertices+=3,A.info.render.faces++,k(L.opacity),l(L.blending),T=I.positionScreen.x,U=I.positionScreen.y,V=J.positionScreen.x,W=J.positionScreen.y,X=M.positionScreen.x,Y=M.positionScreen.y;var P=T,Q=U,N=V,O=W,R=X,ib=Y;H.beginPath(),H.moveTo(P,Q),H.lineTo(N,O),H.lineTo(R,ib),H.closePath(),(L instanceof THREE.MeshLambertMaterial||L instanceof THREE.MeshPhongMaterial)&&null===L.map?(sb.copy(L.color),tb.copy(L.emissive),L.vertexColors===THREE.FaceColors&&sb.multiply(K.color),!1===L.wireframe&&L.shading===THREE.SmoothShading&&3===K.vertexNormalsLength?(ob.copy(zb),pb.copy(zb),qb.copy(zb),b(K.v1.positionWorld,K.vertexNormalsModel[0],ob),b(K.v2.positionWorld,K.vertexNormalsModel[1],pb),b(K.v3.positionWorld,K.vertexNormalsModel[2],qb),ob.multiply(sb).add(tb),pb.multiply(sb).add(tb),qb.multiply(sb).add(tb),rb.addColors(pb,qb).multiplyScalar(.5),_=i(ob,pb,qb,rb),h(T,U,V,W,X,Y,0,0,1,0,0,1,_)):(nb.copy(zb),b(K.centroidModel,K.normalModel,nb),nb.multiply(sb).add(tb),!0===L.wireframe?c(nb,L.wireframeLinewidth,L.wireframeLinecap,L.wireframeLinejoin):d(nb))):L instanceof THREE.MeshBasicMaterial||L instanceof THREE.MeshLambertMaterial||L instanceof THREE.MeshPhongMaterial?null!==L.map?L.map.mapping instanceof THREE.UVMapping&&(ab=K.uvs[0],g(T,U,V,W,X,Y,ab[0].x,ab[0].y,ab[1].x,ab[1].y,ab[2].x,ab[2].y,L.map)):null!==L.envMap?L.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(Db.copy(K.vertexNormalsModel[0]).applyMatrix3(Eb),bb=.5*Db.x+.5,cb=.5*Db.y+.5,Db.copy(K.vertexNormalsModel[1]).applyMatrix3(Eb),db=.5*Db.x+.5,eb=.5*Db.y+.5,Db.copy(K.vertexNormalsModel[2]).applyMatrix3(Eb),fb=.5*Db.x+.5,gb=.5*Db.y+.5,g(T,U,V,W,X,Y,bb,cb,db,eb,fb,gb,L.envMap)):(nb.copy(L.color),L.vertexColors===THREE.FaceColors&&nb.multiply(K.color),!0===L.wireframe?c(nb,L.wireframeLinewidth,L.wireframeLinecap,L.wireframeLinejoin):d(nb)):L instanceof THREE.MeshDepthMaterial?(Z=w.near,$=w.far,ob.r=ob.g=ob.b=1-s(I.positionScreen.z*I.positionScreen.w,Z,$),pb.r=pb.g=pb.b=1-s(J.positionScreen.z*J.positionScreen.w,Z,$),qb.r=qb.g=qb.b=1-s(M.positionScreen.z*M.positionScreen.w,Z,$),rb.addColors(pb,qb).multiplyScalar(.5),_=i(ob,pb,qb,rb),h(T,U,V,W,X,Y,0,0,1,0,0,1,_)):L instanceof THREE.MeshNormalMaterial&&(L.shading===THREE.FlatShading?(Db.copy(K.normalModel).applyMatrix3(Eb),nb.setRGB(Db.x,Db.y,Db.z).multiplyScalar(.5).addScalar(.5),!0===L.wireframe?c(nb,L.wireframeLinewidth,L.wireframeLinecap,L.wireframeLinejoin):d(nb)):L.shading===THREE.SmoothShading&&(Db.copy(K.vertexNormalsModel[0]).applyMatrix3(Eb),ob.setRGB(Db.x,Db.y,Db.z).multiplyScalar(.5).addScalar(.5),Db.copy(K.vertexNormalsModel[1]).applyMatrix3(Eb),pb.setRGB(Db.x,Db.y,Db.z).multiplyScalar(.5).addScalar(.5),Db.copy(K.vertexNormalsModel[2]).applyMatrix3(Eb),qb.setRGB(Db.x,Db.y,Db.z).multiplyScalar(.5).addScalar(.5),rb.addColors(pb,qb).multiplyScalar(.5),_=i(ob,pb,qb,rb),h(T,U,V,W,X,Y,0,0,1,0,0,1,_)))}}xb.union(yb)}}H.setTransform(1,0,0,1,0,0)}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\nmat4 boneMatZ = getBoneMatrix( skinIndex.z );\nmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned      += boneMatY * skinVertex * skinWeight.y;\nskinned      += boneMatZ * skinVertex * skinWeight.z;\nskinned      += boneMatW * skinVertex * skinWeight.w;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix 	+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(a){var b,c,d,e={};
for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]))e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform float reflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), opacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned 	  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=R.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function c(a,b){var c=b.geometry,g=a.faces3,h=3*g.length,i=1*g.length,j=3*g.length,g=d(b,a),k=f(g),l=e(g),m=g.vertexColors?g.vertexColors:!1;if(a.__vertexArray=new Float32Array(3*h),l&&(a.__normalArray=new Float32Array(3*h)),c.hasTangents&&(a.__tangentArray=new Float32Array(4*h)),m&&(a.__colorArray=new Float32Array(3*h)),k&&(0<c.faceVertexUvs.length&&(a.__uvArray=new Float32Array(2*h)),1<c.faceVertexUvs.length&&(a.__uv2Array=new Float32Array(2*h))),b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*h),a.__skinWeightArray=new Float32Array(4*h)),a.__faceArray=new Uint16Array(3*i),a.__lineArray=new Uint16Array(2*j),a.numMorphTargets)for(a.__morphTargetsArrays=[],c=0,k=a.numMorphTargets;k>c;c++)a.__morphTargetsArrays.push(new Float32Array(3*h));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],c=0,k=a.numMorphNormals;k>c;c++)a.__morphNormalsArrays.push(new Float32Array(3*h));if(a.__webglFaceCount=3*i,a.__webglLineCount=2*j,g.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var n in g.attributes){var o,i=g.attributes[n],j={};for(o in i)j[o]=i[o];(!j.__webglInitialized||j.createUniqueBuffers)&&(j.__webglInitialized=!0,c=1,"v2"===j.type?c=2:"v3"===j.type?c=3:"v4"===j.type?c=4:"c"===j.type&&(c=3),j.size=c,j.array=new Float32Array(h*c),j.buffer=R.createBuffer(),j.buffer.belongsToAttribute=n,i.needsUpdate=!0,j.__original=i),a.__webglCustomAttributesList.push(j)}}a.__inittedArrays=!0}function d(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function e(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function g(a,b,c,d){var e,f,g,i;for(f in b)g=b[f],e=c[f],g>=0&&(e?(i=e.itemSize,R.bindBuffer(R.ARRAY_BUFFER,e.buffer),h(g),R.vertexAttribPointer(g,i,R.FLOAT,!1,0,d*i*4)):a.defaultAttributeValues&&(2===a.defaultAttributeValues[f].length?R.vertexAttrib2fv(g,a.defaultAttributeValues[f]):3===a.defaultAttributeValues[f].length&&R.vertexAttrib3fv(g,a.defaultAttributeValues[f])))}function h(a){0===vb[a]&&(R.enableVertexAttribArray(a),vb[a]=1)}function i(){for(var a in vb)1===vb[a]&&(R.disableVertexAttribArray(a),vb[a]=0)}function j(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function k(a,b){return b[0]-a[0]}function l(a,b,c){if(a.length)for(var d=0,e=a.length;e>d;d++)bb=Z=null,_=ab=eb=db=kb=jb=fb=-1,Bb=!0,a[d].render(b,c,tb,ub),bb=Z=null,_=ab=eb=db=kb=jb=fb=-1,Bb=!0}function m(a,b,c,d,e,f,g,h){var i,j,k,l;b?(j=a.length-1,l=b=-1):(j=0,b=a.length,l=1);for(var m=j;m!==b;m+=l)if(i=a[m],i.render){if(j=i.object,k=i.buffer,h)i=h;else{if(i=i[c],!i)continue;g&&W.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),W.setDepthTest(i.depthTest),W.setDepthWrite(i.depthWrite),A(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}W.setMaterialFaces(i),k instanceof THREE.BufferGeometry?W.renderBufferDirect(d,e,f,i,k,j):W.renderBuffer(d,e,f,i,k,j)}}function n(a,b,c,d,e,f,g){for(var h,i,j=0,k=a.length;k>j;j++)if(h=a[j],i=h.object,i.visible){if(g)h=g;else{if(h=h[b],!h)continue;f&&W.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),W.setDepthTest(h.depthTest),W.setDepthWrite(h.depthWrite),A(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}W.renderImmediateObject(c,d,e,h,i)}}function o(a,d){var e,f,g;if(void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,void 0!==a.geometry&&void 0===a.geometry.__webglInit&&(a.geometry.__webglInit=!0,a.geometry.addEventListener("dispose",Pb)),f=a.geometry,void 0!==f))if(f instanceof THREE.BufferGeometry){var h,i;for(g in f.attributes)i="index"===g?R.ELEMENT_ARRAY_BUFFER:R.ARRAY_BUFFER,h=f.attributes[g],h.buffer=R.createBuffer(),R.bindBuffer(i,h.buffer),R.bufferData(i,h.array,R.STATIC_DRAW)}else if(a instanceof THREE.Mesh){for(e in g=a.material,void 0===f.geometryGroups&&f.makeGroups(g instanceof THREE.MeshFaceMaterial),f.geometryGroups)if(g=f.geometryGroups[e],!g.__webglVertexBuffer){h=g,h.__webglVertexBuffer=R.createBuffer(),h.__webglNormalBuffer=R.createBuffer(),h.__webglTangentBuffer=R.createBuffer(),h.__webglColorBuffer=R.createBuffer(),h.__webglUVBuffer=R.createBuffer(),h.__webglUV2Buffer=R.createBuffer(),h.__webglSkinIndicesBuffer=R.createBuffer(),h.__webglSkinWeightsBuffer=R.createBuffer(),h.__webglFaceBuffer=R.createBuffer(),h.__webglLineBuffer=R.createBuffer();var j=i=void 0;if(h.numMorphTargets)for(h.__webglMorphTargetsBuffers=[],i=0,j=h.numMorphTargets;j>i;i++)h.__webglMorphTargetsBuffers.push(R.createBuffer());if(h.numMorphNormals)for(h.__webglMorphNormalsBuffers=[],i=0,j=h.numMorphNormals;j>i;i++)h.__webglMorphNormalsBuffers.push(R.createBuffer());W.info.memory.geometries++,c(g,a),f.verticesNeedUpdate=!0,f.morphTargetsNeedUpdate=!0,f.elementsNeedUpdate=!0,f.uvsNeedUpdate=!0,f.normalsNeedUpdate=!0,f.tangentsNeedUpdate=!0,f.colorsNeedUpdate=!0}}else a instanceof THREE.Line?f.__webglVertexBuffer||(g=f,g.__webglVertexBuffer=R.createBuffer(),g.__webglColorBuffer=R.createBuffer(),g.__webglLineDistanceBuffer=R.createBuffer(),W.info.memory.geometries++,g=f,h=g.vertices.length,g.__vertexArray=new Float32Array(3*h),g.__colorArray=new Float32Array(3*h),g.__lineDistanceArray=new Float32Array(1*h),g.__webglLineCount=h,b(g,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0,f.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&!f.__webglVertexBuffer&&(g=f,g.__webglVertexBuffer=R.createBuffer(),g.__webglColorBuffer=R.createBuffer(),W.info.memory.geometries++,g=f,h=g.vertices.length,g.__vertexArray=new Float32Array(3*h),g.__colorArray=new Float32Array(3*h),g.__sortArray=[],g.__webglParticleCount=h,b(g,a),f.verticesNeedUpdate=!0,f.colorsNeedUpdate=!0);
if(void 0===a.__webglActive){if(a instanceof THREE.Mesh){if(f=a.geometry,f instanceof THREE.BufferGeometry)p(d.__webglObjects,f,a);else if(f instanceof THREE.Geometry)for(e in f.geometryGroups)g=f.geometryGroups[e],p(d.__webglObjects,g,a)}else a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(f=a.geometry,p(d.__webglObjects,f,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?d.__webglObjectsImmediate.push({id:null,object:a,opaque:null,transparent:null,z:0}):a instanceof THREE.Sprite?d.__webglSprites.push(a):a instanceof THREE.LensFlare&&d.__webglFlares.push(a);a.__webglActive=!0}}function p(a,b,c){a.push({id:null,buffer:b,object:c,opaque:null,transparent:null,z:0})}function q(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function r(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function s(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Line?t(b.__webglObjects,a):a instanceof THREE.Sprite?u(b.__webglSprites,a):a instanceof THREE.LensFlare?u(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&t(b.__webglObjectsImmediate,a),delete a.__webglActive}function t(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function u(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function v(a,b,c,d,e){cb=0,d.needsUpdate&&(d.program&&Ub(d),W.initMaterial(d,b,c,e),d.needsUpdate=!1),d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(W.maxMorphTargets));var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;if(g!==Z&&(R.useProgram(g),Z=g,f=!0),d.id!==_&&(_=d.id,f=!0),(f||a!==bb)&&(R.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==bb&&(bb=a)),d.skinning)if(Ib&&e.useVertexTexture){if(null!==h.boneTexture){var j=w();R.uniform1i(h.boneTexture,j),W.setTexture(e.boneTexture,j)}null!==h.boneTextureWidth&&R.uniform1i(h.boneTextureWidth,e.boneTextureWidth),null!==h.boneTextureHeight&&R.uniform1i(h.boneTextureHeight,e.boneTextureHeight)}else null!==h.boneGlobalMatrices&&R.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){if(c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density)),d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Bb){var k,l,m,n,o=j=0,p=0,q=Cb,r=q.directional.colors,s=q.directional.positions,t=q.point.colors,u=q.point.positions,v=q.point.distances,z=q.spot.colors,A=q.spot.positions,B=q.spot.distances,C=q.spot.directions,E=q.spot.anglesCos,F=q.spot.exponents,I=q.hemi.skyColors,J=q.hemi.groundColors,K=q.hemi.positions,L=0,M=0,N=0,O=0,P=0,Q=0,S=0,T=0,U=k=0;for(c=n=U=0,f=b.length;f>c;c++)k=b[c],k.onlyShadow||(l=k.color,m=k.intensity,n=k.distance,k instanceof THREE.AmbientLight?k.visible&&(W.gammaInput?(j+=l.r*l.r,o+=l.g*l.g,p+=l.b*l.b):(j+=l.r,o+=l.g,p+=l.b)):k instanceof THREE.DirectionalLight?(P+=1,k.visible&&(Ab.setFromMatrixPosition(k.matrixWorld),zb.setFromMatrixPosition(k.target.matrixWorld),Ab.sub(zb),Ab.normalize(),0!==Ab.x||0!==Ab.y||0!==Ab.z)&&(k=3*L,s[k]=Ab.x,s[k+1]=Ab.y,s[k+2]=Ab.z,W.gammaInput?x(r,k,l,m*m):y(r,k,l,m),L+=1)):k instanceof THREE.PointLight?(Q+=1,k.visible&&(U=3*M,W.gammaInput?x(t,U,l,m*m):y(t,U,l,m),zb.setFromMatrixPosition(k.matrixWorld),u[U]=zb.x,u[U+1]=zb.y,u[U+2]=zb.z,v[M]=n,M+=1)):k instanceof THREE.SpotLight?(S+=1,k.visible&&(U=3*N,W.gammaInput?x(z,U,l,m*m):y(z,U,l,m),zb.setFromMatrixPosition(k.matrixWorld),A[U]=zb.x,A[U+1]=zb.y,A[U+2]=zb.z,B[N]=n,Ab.copy(zb),zb.setFromMatrixPosition(k.target.matrixWorld),Ab.sub(zb),Ab.normalize(),C[U]=Ab.x,C[U+1]=Ab.y,C[U+2]=Ab.z,E[N]=Math.cos(k.angle),F[N]=k.exponent,N+=1)):k instanceof THREE.HemisphereLight&&(T+=1,k.visible&&(Ab.setFromMatrixPosition(k.matrixWorld),Ab.normalize(),0!==Ab.x||0!==Ab.y||0!==Ab.z))&&(n=3*O,K[n]=Ab.x,K[n+1]=Ab.y,K[n+2]=Ab.z,l=k.color,k=k.groundColor,W.gammaInput?(m*=m,x(I,n,l,m),x(J,n,k,m)):(y(I,n,l,m),y(J,n,k,m)),O+=1));for(c=3*L,f=Math.max(r.length,3*P);f>c;c++)r[c]=0;for(c=3*M,f=Math.max(t.length,3*Q);f>c;c++)t[c]=0;for(c=3*N,f=Math.max(z.length,3*S);f>c;c++)z[c]=0;for(c=3*O,f=Math.max(I.length,3*T);f>c;c++)I[c]=0;for(c=3*O,f=Math.max(J.length,3*T);f>c;c++)J[c]=0;q.directional.length=L,q.point.length=M,q.spot.length=N,q.hemi.length=O,q.ambient[0]=j,q.ambient[1]=o,q.ambient[2]=p,Bb=!1}c=Cb,i.ambientLightColor.value=c.ambient,i.directionalLightColor.value=c.directional.colors,i.directionalLightDirection.value=c.directional.positions,i.pointLightColor.value=c.point.colors,i.pointLightPosition.value=c.point.positions,i.pointLightDistance.value=c.point.distances,i.spotLightColor.value=c.spot.colors,i.spotLightPosition.value=c.spot.positions,i.spotLightDistance.value=c.spot.distances,i.spotLightDirection.value=c.spot.directions,i.spotLightAngleCos.value=c.spot.anglesCos,i.spotLightExponent.value=c.spot.exponents,i.hemisphereLightSkyColor.value=c.hemi.skyColors,i.hemisphereLightGroundColor.value=c.hemi.groundColors,i.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=d.opacity,W.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color,i.map.value=d.map,i.lightMap.value=d.lightMap,i.specularMap.value=d.specularMap,d.bumpMap&&(i.bumpMap.value=d.bumpMap,i.bumpScale.value=d.bumpScale),d.normalMap&&(i.normalMap.value=d.normalMap,i.normalScale.value.copy(d.normalScale));var V;d.map?V=d.map:d.specularMap?V=d.specularMap:d.normalMap?V=d.normalMap:d.bumpMap&&(V=d.bumpMap),void 0!==V&&(c=V.offset,V=V.repeat,i.offsetRepeat.value.set(c.x,c.y,V.x,V.y)),i.envMap.value=d.envMap,i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,i.reflectivity.value=d.reflectivity,i.refractionRatio.value=d.refractionRatio,i.combine.value=d.combine,i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}if(d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity,i.dashSize.value=d.dashSize,i.totalSize.value=d.dashSize+d.gapSize,i.scale.value=d.scale):d instanceof THREE.ParticleSystemMaterial?(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=H.height/2,i.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,W.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(W.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity),e.receiveShadow&&!d._shadowPass&&i.shadowMatrix)for(c=V=0,f=b.length;f>c;c++)j=b[c],j.castShadow&&(j instanceof THREE.SpotLight||j instanceof THREE.DirectionalLight&&!j.shadowCascade)&&(i.shadowMap.value[V]=j.shadowMap,i.shadowMapSize.value[V]=j.shadowMapSize,i.shadowMatrix.value[V]=j.shadowMatrix,i.shadowDarkness.value[V]=j.shadowDarkness,i.shadowBias.value[V]=j.shadowBias,V++);for(b=d.uniformsList,i=0,V=b.length;V>i;i++)if(f=g.uniforms[b[i][1]])if(c=b[i][0],o=c.type,j=c.value,"i"===o)R.uniform1i(f,j);else if("f"===o)R.uniform1f(f,j);else if("v2"===o)R.uniform2f(f,j.x,j.y);else if("v3"===o)R.uniform3f(f,j.x,j.y,j.z);else if("v4"===o)R.uniform4f(f,j.x,j.y,j.z,j.w);else if("c"===o)R.uniform3f(f,j.r,j.g,j.b);else if("iv1"===o)R.uniform1iv(f,j);else if("iv"===o)R.uniform3iv(f,j);else if("fv1"===o)R.uniform1fv(f,j);else if("fv"===o)R.uniform3fv(f,j);else if("v2v"===o){for(void 0===c._array&&(c._array=new Float32Array(2*j.length)),o=0,p=j.length;p>o;o++)q=2*o,c._array[q]=j[o].x,c._array[q+1]=j[o].y;R.uniform2fv(f,c._array)}else if("v3v"===o){for(void 0===c._array&&(c._array=new Float32Array(3*j.length)),o=0,p=j.length;p>o;o++)q=3*o,c._array[q]=j[o].x,c._array[q+1]=j[o].y,c._array[q+2]=j[o].z;R.uniform3fv(f,c._array)}else if("v4v"===o){for(void 0===c._array&&(c._array=new Float32Array(4*j.length)),o=0,p=j.length;p>o;o++)q=4*o,c._array[q]=j[o].x,c._array[q+1]=j[o].y,c._array[q+2]=j[o].z,c._array[q+3]=j[o].w;R.uniform4fv(f,c._array)}else if("m4"===o)void 0===c._array&&(c._array=new Float32Array(16)),j.flattenToArray(c._array),R.uniformMatrix4fv(f,!1,c._array);else if("m4v"===o){for(void 0===c._array&&(c._array=new Float32Array(16*j.length)),o=0,p=j.length;p>o;o++)j[o].flattenToArrayOffset(c._array,16*o);R.uniformMatrix4fv(f,!1,c._array)}else if("t"===o){if(q=j,j=w(),R.uniform1i(f,j),q)if(q.image instanceof Array&&6===q.image.length){if(c=q,f=j,6===c.image.length)if(c.needsUpdate){for(c.image.__webglTextureCube||(c.addEventListener("dispose",Qb),c.image.__webglTextureCube=R.createTexture(),W.info.memory.textures++),R.activeTexture(R.TEXTURE0+f),R.bindTexture(R.TEXTURE_CUBE_MAP,c.image.__webglTextureCube),R.pixelStorei(R.UNPACK_FLIP_Y_WEBGL,c.flipY),f=c instanceof THREE.CompressedTexture,j=[],o=0;6>o;o++)W.autoScaleCubemaps&&!f?(p=j,q=o,r=c.image[o],t=Fb,r.width<=t&&r.height<=t||(u=Math.max(r.width,r.height),s=Math.floor(r.width*t/u),t=Math.floor(r.height*t/u),u=document.createElement("canvas"),u.width=s,u.height=t,u.getContext("2d").drawImage(r,0,0,r.width,r.height,0,0,s,t),r=u),p[q]=r):j[o]=c.image[o];for(o=j[0],p=THREE.Math.isPowerOfTwo(o.width)&&THREE.Math.isPowerOfTwo(o.height),q=G(c.format),r=G(c.type),D(R.TEXTURE_CUBE_MAP,c,p),o=0;6>o;o++)if(f)for(t=j[o].mipmaps,u=0,v=t.length;v>u;u++)s=t[u],c.format!==THREE.RGBAFormat?R.compressedTexImage2D(R.TEXTURE_CUBE_MAP_POSITIVE_X+o,u,q,s.width,s.height,0,s.data):R.texImage2D(R.TEXTURE_CUBE_MAP_POSITIVE_X+o,u,q,s.width,s.height,0,q,r,s.data);else R.texImage2D(R.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,q,q,r,j[o]);c.generateMipmaps&&p&&R.generateMipmap(R.TEXTURE_CUBE_MAP),c.needsUpdate=!1,c.onUpdate&&c.onUpdate()}else R.activeTexture(R.TEXTURE0+f),R.bindTexture(R.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else q instanceof THREE.WebGLRenderTargetCube?(c=q,R.activeTexture(R.TEXTURE0+j),R.bindTexture(R.TEXTURE_CUBE_MAP,c.__webglTexture)):W.setTexture(q,j)}else if("tv"===o){for(void 0===c._array&&(c._array=[]),o=0,p=c.value.length;p>o;o++)c._array[o]=w();for(R.uniform1iv(f,c._array),o=0,p=c.value.length;p>o;o++)q=c.value[o],j=c._array[o],q&&W.setTexture(q,j)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+o);(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition&&(zb.setFromMatrixPosition(a.matrixWorld),R.uniform3f(h.cameraPosition,zb.x,zb.y,zb.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&R.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)}return R.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements),h.normalMatrix&&R.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements),null!==h.modelMatrix&&R.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements),g}function w(){var a=cb;return a>=Db&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Db),cb+=1,a}function x(a,b,c,d){a[b]=c.r*c.r*d,a[b+1]=c.g*c.g*d,a[b+2]=c.b*c.b*d}function y(a,b,c,d){a[b]=c.r*d,a[b+1]=c.g*d,a[b+2]=c.b*d}function z(a){a!==ob&&(R.lineWidth(a),ob=a)}function A(a,b,c){lb!==a&&(a?R.enable(R.POLYGON_OFFSET_FILL):R.disable(R.POLYGON_OFFSET_FILL),lb=a),!a||mb===b&&nb===c||(R.polygonOffset(b,c),mb=b,nb=c)}function B(a){a=a.split("\n");for(var b=0,c=a.length;c>b;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function C(a,b){var c;return"fragment"===a?c=R.createShader(R.FRAGMENT_SHADER):"vertex"===a&&(c=R.createShader(R.VERTEX_SHADER)),R.shaderSource(c,b),R.compileShader(c),R.getShaderParameter(c,R.COMPILE_STATUS)?c:(console.error(R.getShaderInfoLog(c)),console.error(B(b)),null)}function D(a,b,c){c?(R.texParameteri(a,R.TEXTURE_WRAP_S,G(b.wrapS)),R.texParameteri(a,R.TEXTURE_WRAP_T,G(b.wrapT)),R.texParameteri(a,R.TEXTURE_MAG_FILTER,G(b.magFilter)),R.texParameteri(a,R.TEXTURE_MIN_FILTER,G(b.minFilter))):(R.texParameteri(a,R.TEXTURE_WRAP_S,R.CLAMP_TO_EDGE),R.texParameteri(a,R.TEXTURE_WRAP_T,R.CLAMP_TO_EDGE),R.texParameteri(a,R.TEXTURE_MAG_FILTER,F(b.magFilter)),R.texParameteri(a,R.TEXTURE_MIN_FILTER,F(b.minFilter))),U&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy)&&(R.texParameterf(a,U.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Gb)),b.__oldAnisotropy=b.anisotropy)}function E(a,b){R.bindRenderbuffer(R.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(R.renderbufferStorage(R.RENDERBUFFER,R.DEPTH_COMPONENT16,b.width,b.height),R.framebufferRenderbuffer(R.FRAMEBUFFER,R.DEPTH_ATTACHMENT,R.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(R.renderbufferStorage(R.RENDERBUFFER,R.DEPTH_STENCIL,b.width,b.height),R.framebufferRenderbuffer(R.FRAMEBUFFER,R.DEPTH_STENCIL_ATTACHMENT,R.RENDERBUFFER,a)):R.renderbufferStorage(R.RENDERBUFFER,R.RGBA4,b.width,b.height)}function F(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?R.NEAREST:R.LINEAR}function G(a){if(a===THREE.RepeatWrapping)return R.REPEAT;if(a===THREE.ClampToEdgeWrapping)return R.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return R.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return R.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return R.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return R.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return R.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return R.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return R.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return R.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return R.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return R.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return R.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return R.BYTE;if(a===THREE.ShortType)return R.SHORT;if(a===THREE.UnsignedShortType)return R.UNSIGNED_SHORT;if(a===THREE.IntType)return R.INT;if(a===THREE.UnsignedIntType)return R.UNSIGNED_INT;if(a===THREE.FloatType)return R.FLOAT;if(a===THREE.AlphaFormat)return R.ALPHA;if(a===THREE.RGBFormat)return R.RGB;if(a===THREE.RGBAFormat)return R.RGBA;if(a===THREE.LuminanceFormat)return R.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return R.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return R.FUNC_ADD;if(a===THREE.SubtractEquation)return R.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return R.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return R.ZERO;if(a===THREE.OneFactor)return R.ONE;if(a===THREE.SrcColorFactor)return R.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return R.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return R.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return R.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return R.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return R.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return R.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return R.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return R.SRC_ALPHA_SATURATE;if(void 0!==V){if(a===THREE.RGB_S3TC_DXT1_Format)return V.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return V.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return V.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return V.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION),a=a||{};var H=void 0!==a.canvas?a.canvas:document.createElement("canvas"),I=void 0!==a.context?a.context:null,J=void 0!==a.precision?a.precision:"highp",K=void 0!==a.alpha?a.alpha:!1,L=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,M=void 0!==a.antialias?a.antialias:!1,N=void 0!==a.stencil?a.stencil:!0,O=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,P=new THREE.Color(0),Q=0;this.domElement=H,this.context=null,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.shadowMapEnabled=this.gammaOutput=this.gammaInput=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapCascade=this.shadowMapDebug=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var R,S,T,U,V,W=this,X=[],Y=0,Z=null,$=null,_=-1,ab=null,bb=null,cb=0,db=-1,eb=-1,fb=-1,gb=-1,hb=-1,ib=-1,jb=-1,kb=-1,lb=null,mb=null,nb=null,ob=null,pb=0,qb=0,rb=H.width,sb=H.height,tb=0,ub=0,vb=new Uint8Array(16),wb=new THREE.Frustum,xb=new THREE.Matrix4,yb=new THREE.Matrix4,zb=new THREE.Vector3,Ab=new THREE.Vector3,Bb=!0,Cb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};!function(){try{var a={alpha:K,premultipliedAlpha:L,antialias:M,stencil:N,preserveDrawingBuffer:O};if(R=I||H.getContext("webgl",a)||H.getContext("experimental-webgl",a),null===R)throw"Error creating WebGL context."}catch(b){console.error(b)}S=R.getExtension("OES_texture_float"),R.getExtension("OES_texture_float_linear"),T=R.getExtension("OES_standard_derivatives"),U=R.getExtension("EXT_texture_filter_anisotropic")||R.getExtension("MOZ_EXT_texture_filter_anisotropic")||R.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),V=R.getExtension("WEBGL_compressed_texture_s3tc")||R.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||R.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),S||console.log("THREE.WebGLRenderer: Float textures not supported."),T||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),U||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),V||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===R.getShaderPrecisionFormat&&(R.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}(),R.clearColor(0,0,0,1),R.clearDepth(1),R.clearStencil(0),R.enable(R.DEPTH_TEST),R.depthFunc(R.LEQUAL),R.frontFace(R.CCW),R.cullFace(R.BACK),R.enable(R.CULL_FACE),R.enable(R.BLEND),R.blendEquation(R.FUNC_ADD),R.blendFunc(R.SRC_ALPHA,R.ONE_MINUS_SRC_ALPHA),R.viewport(pb,qb,rb,sb),R.clearColor(P.r,P.g,P.b,Q),this.context=R;var Db=R.getParameter(R.MAX_TEXTURE_IMAGE_UNITS),Eb=R.getParameter(R.MAX_VERTEX_TEXTURE_IMAGE_UNITS);R.getParameter(R.MAX_TEXTURE_SIZE);var Fb=R.getParameter(R.MAX_CUBE_MAP_TEXTURE_SIZE),Gb=U?R.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Hb=Eb>0,Ib=Hb&&S;V&&R.getParameter(R.COMPRESSED_TEXTURE_FORMATS);var Jb=R.getShaderPrecisionFormat(R.VERTEX_SHADER,R.HIGH_FLOAT),Kb=R.getShaderPrecisionFormat(R.VERTEX_SHADER,R.MEDIUM_FLOAT);R.getShaderPrecisionFormat(R.VERTEX_SHADER,R.LOW_FLOAT);var Lb=R.getShaderPrecisionFormat(R.FRAGMENT_SHADER,R.HIGH_FLOAT),Mb=R.getShaderPrecisionFormat(R.FRAGMENT_SHADER,R.MEDIUM_FLOAT);R.getShaderPrecisionFormat(R.FRAGMENT_SHADER,R.LOW_FLOAT),R.getShaderPrecisionFormat(R.VERTEX_SHADER,R.HIGH_INT),R.getShaderPrecisionFormat(R.VERTEX_SHADER,R.MEDIUM_INT),R.getShaderPrecisionFormat(R.VERTEX_SHADER,R.LOW_INT),R.getShaderPrecisionFormat(R.FRAGMENT_SHADER,R.HIGH_INT),R.getShaderPrecisionFormat(R.FRAGMENT_SHADER,R.MEDIUM_INT),R.getShaderPrecisionFormat(R.FRAGMENT_SHADER,R.LOW_INT);var Nb=0<Jb.precision&&0<Lb.precision,Ob=0<Kb.precision&&0<Mb.precision;"highp"!==J||Nb||(Ob?(J="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(J="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==J||Ob||(J="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return R},this.supportsVertexTextures=function(){return Hb},this.supportsFloatTextures=function(){return S},this.supportsStandardDerivatives=function(){return T},this.supportsCompressedTextureS3TC=function(){return V},this.getMaxAnisotropy=function(){return Gb},this.getPrecision=function(){return J},this.setSize=function(a,b,c){H.width=a*this.devicePixelRatio,H.height=b*this.devicePixelRatio,1!==this.devicePixelRatio&&!1!==c&&(H.style.width=a+"px",H.style.height=b+"px"),this.setViewport(0,0,a,b)},this.setViewport=function(a,b,c,d){pb=a*this.devicePixelRatio,qb=b*this.devicePixelRatio,rb=c*this.devicePixelRatio,sb=d*this.devicePixelRatio,R.viewport(pb,qb,rb,sb)},this.setScissor=function(a,b,c,d){R.scissor(a*this.devicePixelRatio,b*this.devicePixelRatio,c*this.devicePixelRatio,d*this.devicePixelRatio)},this.enableScissorTest=function(a){a?R.enable(R.SCISSOR_TEST):R.disable(R.SCISSOR_TEST)},this.setClearColor=function(a,b){P.set(a),Q=void 0!==b?b:1,R.clearColor(P.r,P.g,P.b,Q)},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getClearColor=function(){return P},this.getClearAlpha=function(){return Q},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=R.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=R.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=R.STENCIL_BUFFER_BIT),R.clear(d)},this.clearColor=function(){R.clear(R.COLOR_BUFFER_BIT)},this.clearDepth=function(){R.clear(R.DEPTH_BUFFER_BIT)},this.clearStencil=function(){R.clear(R.STENCIL_BUFFER_BIT)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.addPostPlugin=function(a){a.init(this),this.renderPluginsPost.push(a)},this.addPrePlugin=function(a){a.init(this),this.renderPluginsPre.push(a)},this.updateShadowMap=function(a,b){Z=null,_=ab=kb=jb=fb=-1,Bb=!0,eb=db=-1,this.shadowMapPlugin.update(a,b)};var Pb=function(a){if(a=a.target,a.removeEventListener("dispose",Pb),a.__webglInit=void 0,a instanceof THREE.BufferGeometry){var b,c=a.attributes;for(b in c)void 0!==c[b].buffer&&R.deleteBuffer(c[b].buffer);W.info.memory.geometries--}else if(void 0!==a.geometryGroups)for(c in a.geometryGroups){if(b=a.geometryGroups[c],void 0!==b.numMorphTargets)for(var d=0,e=b.numMorphTargets;e>d;d++)R.deleteBuffer(b.__webglMorphTargetsBuffers[d]);if(void 0!==b.numMorphNormals)for(d=0,e=b.numMorphNormals;e>d;d++)R.deleteBuffer(b.__webglMorphNormalsBuffers[d]);Tb(b)}else Tb(a)},Qb=function(a){a=a.target,a.removeEventListener("dispose",Qb),a.image&&a.image.__webglTextureCube?R.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,R.deleteTexture(a.__webglTexture)),W.info.memory.textures--},Rb=function(a){if(a=a.target,a.removeEventListener("dispose",Rb),a&&a.__webglTexture)if(R.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)R.deleteFramebuffer(a.__webglFramebuffer[b]),R.deleteRenderbuffer(a.__webglRenderbuffer[b]);else R.deleteFramebuffer(a.__webglFramebuffer),R.deleteRenderbuffer(a.__webglRenderbuffer);W.info.memory.textures--},Sb=function(a){a=a.target,a.removeEventListener("dispose",Sb),Ub(a)},Tb=function(a){if(void 0!==a.__webglVertexBuffer&&R.deleteBuffer(a.__webglVertexBuffer),void 0!==a.__webglNormalBuffer&&R.deleteBuffer(a.__webglNormalBuffer),void 0!==a.__webglTangentBuffer&&R.deleteBuffer(a.__webglTangentBuffer),void 0!==a.__webglColorBuffer&&R.deleteBuffer(a.__webglColorBuffer),void 0!==a.__webglUVBuffer&&R.deleteBuffer(a.__webglUVBuffer),void 0!==a.__webglUV2Buffer&&R.deleteBuffer(a.__webglUV2Buffer),void 0!==a.__webglSkinIndicesBuffer&&R.deleteBuffer(a.__webglSkinIndicesBuffer),void 0!==a.__webglSkinWeightsBuffer&&R.deleteBuffer(a.__webglSkinWeightsBuffer),void 0!==a.__webglFaceBuffer&&R.deleteBuffer(a.__webglFaceBuffer),void 0!==a.__webglLineBuffer&&R.deleteBuffer(a.__webglLineBuffer),void 0!==a.__webglLineDistanceBuffer&&R.deleteBuffer(a.__webglLineDistanceBuffer),void 0!==a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)R.deleteBuffer(a.__webglCustomAttributesList[b].buffer);W.info.memory.geometries--},Ub=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1;for(a=0,c=X.length;c>a;a++)if(d=X[a],d.program===b){d.usedTimes--,0===d.usedTimes&&(e=!0);break}if(!0===e){for(e=[],a=0,c=X.length;c>a;a++)d=X[a],d.program!==b&&e.push(d);X=e,R.deleteProgram(b),W.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){if(a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=R.createBuffer()),a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=R.createBuffer()),a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=R.createBuffer()),a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=R.createBuffer()),a.hasPositions&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webglVertexBuffer),R.bufferData(R.ARRAY_BUFFER,a.positionArray,R.DYNAMIC_DRAW),R.enableVertexAttribArray(b.attributes.position),R.vertexAttribPointer(b.attributes.position,3,R.FLOAT,!1,0,0)),a.hasNormals){if(R.bindBuffer(R.ARRAY_BUFFER,a.__webglNormalBuffer),c.shading===THREE.FlatShading){var d,e,f,g,h,i,j,k,l,m,n,o=3*a.count;for(n=0;o>n;n+=9)m=a.normalArray,d=m[n],e=m[n+1],f=m[n+2],g=m[n+3],i=m[n+4],k=m[n+5],h=m[n+6],j=m[n+7],l=m[n+8],d=(d+g+h)/3,e=(e+i+j)/3,f=(f+k+l)/3,m[n]=d,m[n+1]=e,m[n+2]=f,m[n+3]=d,m[n+4]=e,m[n+5]=f,m[n+6]=d,m[n+7]=e,m[n+8]=f}R.bufferData(R.ARRAY_BUFFER,a.normalArray,R.DYNAMIC_DRAW),R.enableVertexAttribArray(b.attributes.normal),R.vertexAttribPointer(b.attributes.normal,3,R.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webglUvBuffer),R.bufferData(R.ARRAY_BUFFER,a.uvArray,R.DYNAMIC_DRAW),R.enableVertexAttribArray(b.attributes.uv),R.vertexAttribPointer(b.attributes.uv,2,R.FLOAT,!1,0,0)),a.hasColors&&c.vertexColors!==THREE.NoColors&&(R.bindBuffer(R.ARRAY_BUFFER,a.__webglColorBuffer),R.bufferData(R.ARRAY_BUFFER,a.colorArray,R.DYNAMIC_DRAW),R.enableVertexAttribArray(b.attributes.color),R.vertexAttribPointer(b.attributes.color,3,R.FLOAT,!1,0,0)),R.drawArrays(R.TRIANGLES,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible){var j,k,l,m;if(j=v(a,b,c,d,f),a=j.attributes,b=e.attributes,c=!1,j=16777215*e.id+2*j.id+(d.wireframe?1:0),j!==ab&&(ab=j,c=!0),c&&i(),f instanceof THREE.Mesh)if(f=b.index){e=e.offsets,1<e.length&&(c=!0);for(var n=0,o=e.length;o>n;n++){var p=e[n].index;if(c){for(k in a)l=a[k],j=b[k],l>=0&&(j?(m=j.itemSize,R.bindBuffer(R.ARRAY_BUFFER,j.buffer),h(l),R.vertexAttribPointer(l,m,R.FLOAT,!1,0,p*m*4)):d.defaultAttributeValues&&(2===d.defaultAttributeValues[k].length?R.vertexAttrib2fv(l,d.defaultAttributeValues[k]):3===d.defaultAttributeValues[k].length&&R.vertexAttrib3fv(l,d.defaultAttributeValues[k])));R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,f.buffer)}R.drawElements(R.TRIANGLES,e[n].count,R.UNSIGNED_SHORT,2*e[n].start),W.info.render.calls++,W.info.render.vertices+=e[n].count,W.info.render.faces+=e[n].count/3}}else{if(c)for(k in a)"index"!==k&&(l=a[k],j=b[k],l>=0&&(j?(m=j.itemSize,R.bindBuffer(R.ARRAY_BUFFER,j.buffer),h(l),R.vertexAttribPointer(l,m,R.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[k]&&(2===d.defaultAttributeValues[k].length?R.vertexAttrib2fv(l,d.defaultAttributeValues[k]):3===d.defaultAttributeValues[k].length&&R.vertexAttrib3fv(l,d.defaultAttributeValues[k]))));d=e.attributes.position,R.drawArrays(R.TRIANGLES,0,d.array.length/3),W.info.render.calls++,W.info.render.vertices+=d.array.length/3,W.info.render.faces+=d.array.length/3/3}else if(f instanceof THREE.ParticleSystem){if(c)for(k in a)l=a[k],j=b[k],l>=0&&(j?(m=j.itemSize,R.bindBuffer(R.ARRAY_BUFFER,j.buffer),h(l),R.vertexAttribPointer(l,m,R.FLOAT,!1,0,0)):d.defaultAttributeValues&&d.defaultAttributeValues[k]&&(2===d.defaultAttributeValues[k].length?R.vertexAttrib2fv(l,d.defaultAttributeValues[k]):3===d.defaultAttributeValues[k].length&&R.vertexAttrib3fv(l,d.defaultAttributeValues[k])));d=b.position,R.drawArrays(R.POINTS,0,d.array.length/3),W.info.render.calls++,W.info.render.points+=d.array.length/3}else if(f instanceof THREE.Line)if(k=f.type===THREE.LineStrip?R.LINE_STRIP:R.LINES,z(d.linewidth),f=b.index)for(e=e.offsets,1<e.length&&(c=!0),n=0,o=e.length;o>n;n++)p=e[n].index,c&&(g(d,a,b,p),R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,f.buffer)),R.drawElements(R.LINES,e[n].count,R.UNSIGNED_SHORT,2*e[n].start),W.info.render.calls++,W.info.render.vertices+=e[n].count;else c&&g(d,a,b,0),d=b.position,R.drawArrays(k,0,d.array.length/3),W.info.render.calls++,W.info.render.points+=d.array.length}},this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,j;if(c=v(a,b,c,d,f),a=c.attributes,b=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0),c!==ab&&(ab=c,b=!0),b&&i(),!d.morphTargets&&0<=a.position)b&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglVertexBuffer),h(a.position),R.vertexAttribPointer(a.position,3,R.FLOAT,!1,0,0));else if(f.morphTargetBase){if(c=d.program.attributes,-1!==f.morphTargetBase&&0<=c.position?(R.bindBuffer(R.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),h(c.position),R.vertexAttribPointer(c.position,3,R.FLOAT,!1,0,0)):0<=c.position&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglVertexBuffer),h(c.position),R.vertexAttribPointer(c.position,3,R.FLOAT,!1,0,0)),f.morphTargetForcedOrder.length){var l=0;for(j=f.morphTargetForcedOrder,g=f.morphTargetInfluences;l<d.numSupportedMorphTargets&&l<j.length;)0<=c["morphTarget"+l]&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[j[l]]),h(c["morphTarget"+l]),R.vertexAttribPointer(c["morphTarget"+l],3,R.FLOAT,!1,0,0)),0<=c["morphNormal"+l]&&d.morphNormals&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[j[l]]),h(c["morphNormal"+l]),R.vertexAttribPointer(c["morphNormal"+l],3,R.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=g[j[l]],l++}else{j=[],g=f.morphTargetInfluences;var m,n=g.length;for(m=0;n>m;m++)l=g[m],l>0&&j.push([l,m]);for(j.length>d.numSupportedMorphTargets?(j.sort(k),j.length=d.numSupportedMorphTargets):j.length>d.numSupportedMorphNormals?j.sort(k):0===j.length&&j.push([0,0]),l=0;l<d.numSupportedMorphTargets;)j[l]?(m=j[l][1],0<=c["morphTarget"+l]&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]),h(c["morphTarget"+l]),R.vertexAttribPointer(c["morphTarget"+l],3,R.FLOAT,!1,0,0)),0<=c["morphNormal"+l]&&d.morphNormals&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[m]),h(c["morphNormal"+l]),R.vertexAttribPointer(c["morphNormal"+l],3,R.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=g[m]):f.__webglMorphTargetInfluences[l]=0,l++}null!==d.program.uniforms.morphTargetInfluences&&R.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(b){if(e.__webglCustomAttributesList)for(g=0,j=e.__webglCustomAttributesList.length;j>g;g++)c=e.__webglCustomAttributesList[g],0<=a[c.buffer.belongsToAttribute]&&(R.bindBuffer(R.ARRAY_BUFFER,c.buffer),h(a[c.buffer.belongsToAttribute]),R.vertexAttribPointer(a[c.buffer.belongsToAttribute],c.size,R.FLOAT,!1,0,0));0<=a.color&&(0<f.geometry.colors.length||0<f.geometry.faces.length?(R.bindBuffer(R.ARRAY_BUFFER,e.__webglColorBuffer),h(a.color),R.vertexAttribPointer(a.color,3,R.FLOAT,!1,0,0)):d.defaultAttributeValues&&R.vertexAttrib3fv(a.color,d.defaultAttributeValues.color)),0<=a.normal&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglNormalBuffer),h(a.normal),R.vertexAttribPointer(a.normal,3,R.FLOAT,!1,0,0)),0<=a.tangent&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglTangentBuffer),h(a.tangent),R.vertexAttribPointer(a.tangent,4,R.FLOAT,!1,0,0)),0<=a.uv&&(f.geometry.faceVertexUvs[0]?(R.bindBuffer(R.ARRAY_BUFFER,e.__webglUVBuffer),h(a.uv),R.vertexAttribPointer(a.uv,2,R.FLOAT,!1,0,0)):d.defaultAttributeValues&&R.vertexAttrib2fv(a.uv,d.defaultAttributeValues.uv)),0<=a.uv2&&(f.geometry.faceVertexUvs[1]?(R.bindBuffer(R.ARRAY_BUFFER,e.__webglUV2Buffer),h(a.uv2),R.vertexAttribPointer(a.uv2,2,R.FLOAT,!1,0,0)):d.defaultAttributeValues&&R.vertexAttrib2fv(a.uv2,d.defaultAttributeValues.uv2)),d.skinning&&0<=a.skinIndex&&0<=a.skinWeight&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),h(a.skinIndex),R.vertexAttribPointer(a.skinIndex,4,R.FLOAT,!1,0,0),R.bindBuffer(R.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),h(a.skinWeight),R.vertexAttribPointer(a.skinWeight,4,R.FLOAT,!1,0,0)),0<=a.lineDistance&&(R.bindBuffer(R.ARRAY_BUFFER,e.__webglLineDistanceBuffer),h(a.lineDistance),R.vertexAttribPointer(a.lineDistance,1,R.FLOAT,!1,0,0))
}f instanceof THREE.Mesh?(d.wireframe?(z(d.wireframeLinewidth),b&&R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),R.drawElements(R.LINES,e.__webglLineCount,R.UNSIGNED_SHORT,0)):(b&&R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),R.drawElements(R.TRIANGLES,e.__webglFaceCount,R.UNSIGNED_SHORT,0)),W.info.render.calls++,W.info.render.vertices+=e.__webglFaceCount,W.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?R.LINE_STRIP:R.LINES,z(d.linewidth),R.drawArrays(f,0,e.__webglLineCount),W.info.render.calls++):f instanceof THREE.ParticleSystem&&(R.drawArrays(R.POINTS,0,e.__webglParticleCount),W.info.render.calls++,W.info.render.points+=e.__webglParticleCount)}},this.render=function(a,b,c,d){if(!1==b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,i=a.__lights,k=a.fog;for(_=-1,Bb=!0,!0===a.autoUpdate&&a.updateMatrixWorld(),void 0===b.parent&&b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),xb.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),wb.setFromMatrix(xb),this.autoUpdateObjects&&this.initWebGLObjects(a),l(this.renderPluginsPre,a,b),W.info.render.calls=0,W.info.render.vertices=0,W.info.render.faces=0,W.info.render.points=0,this.setRenderTarget(c),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),h=a.__webglObjects,d=0,e=h.length;e>d;d++)if(f=h[d],g=f.object,f.id=d,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||wb.intersectsObject(g))){var o=g;o._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,o.matrixWorld),o._normalMatrix.getNormalMatrix(o._modelViewMatrix);var o=f,p=o.object,q=o.buffer,r=p.geometry,p=p.material;p instanceof THREE.MeshFaceMaterial?(p=p.materials[r instanceof THREE.BufferGeometry?0:q.materialIndex],p.transparent?(o.transparent=p,o.opaque=null):(o.opaque=p,o.transparent=null)):p&&(p.transparent?(o.transparent=p,o.opaque=null):(o.opaque=p,o.transparent=null)),f.render=!0,!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(zb.setFromMatrixPosition(g.matrixWorld),zb.applyProjection(xb),f.z=zb.z))}for(this.sortObjects&&h.sort(j),h=a.__webglObjectsImmediate,d=0,e=h.length;e>d;d++)f=h[d],g=f.object,g.visible&&(g._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,g.matrixWorld),g._normalMatrix.getNormalMatrix(g._modelViewMatrix),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),A(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),m(a.__webglObjects,!1,"",b,i,k,!0,d),n(a.__webglObjectsImmediate,"",b,i,k,!1,d)):(d=null,this.setBlending(THREE.NoBlending),m(a.__webglObjects,!0,"opaque",b,i,k,!1,d),n(a.__webglObjectsImmediate,"opaque",b,i,k,!1,d),m(a.__webglObjects,!1,"transparent",b,i,k,!0,d),n(a.__webglObjectsImmediate,"transparent",b,i,k,!0,d)),l(this.renderPluginsPost,a,b),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(R.bindTexture(R.TEXTURE_CUBE_MAP,c.__webglTexture),R.generateMipmap(R.TEXTURE_CUBE_MAP),R.bindTexture(R.TEXTURE_CUBE_MAP,null)):(R.bindTexture(R.TEXTURE_2D,c.__webglTexture),R.generateMipmap(R.TEXTURE_2D),R.bindTexture(R.TEXTURE_2D,null))),this.setDepthTest(!0),this.setDepthWrite(!0)}},this.renderImmediateObject=function(a,b,c,d,e){var f=v(a,b,c,d,e);ab=-1,W.setMaterialFaces(d),e.immediateRenderCallback?e.immediateRenderCallback(f,R,wb):e.render(function(a){W.renderBufferImmediate(a,f,d)})},this.initWebGLObjects=function(a){for(a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);a.__objectsAdded.length;)o(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)s(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,g=a.__webglObjects.length;g>b;b++){var h=a.__webglObjects[b].object;void 0===h.__webglInit&&(void 0!==h.__webglActive&&s(h,a),o(h,a));var i=h,j=i.geometry,l=void 0,m=void 0,n=void 0;if(j instanceof THREE.BufferGeometry){var p=R.DYNAMIC_DRAW,t=j.attributes,u=void 0,v=void 0;for(u in t)v=t[u],v.needsUpdate&&("index"===u?(R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,v.buffer),R.bufferData(R.ELEMENT_ARRAY_BUFFER,v.array,p)):(R.bindBuffer(R.ARRAY_BUFFER,v.buffer),R.bufferData(R.ARRAY_BUFFER,v.array,p)),v.needsUpdate=!1)}else if(i instanceof THREE.Mesh){for(var w=0,x=j.geometryGroupsList.length;x>w;w++)if(l=j.geometryGroupsList[w],n=d(i,l),j.buffersNeedUpdate&&c(l,i),m=n.attributes&&q(n),j.verticesNeedUpdate||j.morphTargetsNeedUpdate||j.elementsNeedUpdate||j.uvsNeedUpdate||j.normalsNeedUpdate||j.colorsNeedUpdate||j.tangentsNeedUpdate||m){var y=l,z=i,A=R.DYNAMIC_DRAW,B=!j.dynamic,C=n;if(y.__inittedArrays){var D=e(C),E=C.vertexColors?C.vertexColors:!1,F=f(C),G=D===THREE.SmoothShading,H=void 0,I=void 0,J=void 0,K=void 0,L=void 0,M=void 0,N=void 0,O=void 0,P=void 0,Q=void 0,S=void 0,T=void 0,U=void 0,V=void 0,W=void 0,X=void 0,Y=void 0,Z=void 0,$=void 0,_=void 0,ab=void 0,bb=void 0,cb=void 0,db=void 0,eb=void 0,fb=void 0,gb=void 0,hb=void 0,ib=void 0,jb=void 0,kb=void 0,lb=void 0,mb=void 0,nb=void 0,ob=void 0,pb=void 0,qb=void 0,rb=void 0,sb=void 0,tb=void 0,ub=0,vb=0,wb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=void 0,Kb=y.__vertexArray,Lb=y.__uvArray,Mb=y.__uv2Array,Nb=y.__normalArray,Ob=y.__tangentArray,Pb=y.__colorArray,Qb=y.__skinIndexArray,Rb=y.__skinWeightArray,Sb=y.__morphTargetsArrays,Tb=y.__morphNormalsArrays,Ub=y.__webglCustomAttributesList,Vb=void 0,Wb=y.__faceArray,Xb=y.__lineArray,Yb=z.geometry,Zb=Yb.elementsNeedUpdate,$b=Yb.uvsNeedUpdate,_b=Yb.normalsNeedUpdate,ac=Yb.tangentsNeedUpdate,bc=Yb.colorsNeedUpdate,cc=Yb.morphTargetsNeedUpdate,dc=Yb.vertices,ec=y.faces3,fc=Yb.faces,gc=Yb.faceVertexUvs[0],hc=Yb.faceVertexUvs[1],ic=Yb.skinIndices,jc=Yb.skinWeights,kc=Yb.morphTargets,lc=Yb.morphNormals;if(Yb.verticesNeedUpdate){for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],T=dc[K.a],U=dc[K.b],V=dc[K.c],Kb[vb]=T.x,Kb[vb+1]=T.y,Kb[vb+2]=T.z,Kb[vb+3]=U.x,Kb[vb+4]=U.y,Kb[vb+5]=U.z,Kb[vb+6]=V.x,Kb[vb+7]=V.y,Kb[vb+8]=V.z,vb+=9;R.bindBuffer(R.ARRAY_BUFFER,y.__webglVertexBuffer),R.bufferData(R.ARRAY_BUFFER,Kb,A)}if(cc)for(ob=0,pb=kc.length;pb>ob;ob++){for(H=Hb=0,I=ec.length;I>H;H++)sb=ec[H],K=fc[sb],T=kc[ob].vertices[K.a],U=kc[ob].vertices[K.b],V=kc[ob].vertices[K.c],qb=Sb[ob],qb[Hb]=T.x,qb[Hb+1]=T.y,qb[Hb+2]=T.z,qb[Hb+3]=U.x,qb[Hb+4]=U.y,qb[Hb+5]=U.z,qb[Hb+6]=V.x,qb[Hb+7]=V.y,qb[Hb+8]=V.z,C.morphNormals&&(G?(tb=lc[ob].vertexNormals[sb],Z=tb.a,$=tb.b,_=tb.c):_=$=Z=lc[ob].faceNormals[sb],rb=Tb[ob],rb[Hb]=Z.x,rb[Hb+1]=Z.y,rb[Hb+2]=Z.z,rb[Hb+3]=$.x,rb[Hb+4]=$.y,rb[Hb+5]=$.z,rb[Hb+6]=_.x,rb[Hb+7]=_.y,rb[Hb+8]=_.z),Hb+=9;R.bindBuffer(R.ARRAY_BUFFER,y.__webglMorphTargetsBuffers[ob]),R.bufferData(R.ARRAY_BUFFER,Sb[ob],A),C.morphNormals&&(R.bindBuffer(R.ARRAY_BUFFER,y.__webglMorphNormalsBuffers[ob]),R.bufferData(R.ARRAY_BUFFER,Tb[ob],A))}if(jc.length){for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],db=jc[K.a],eb=jc[K.b],fb=jc[K.c],Rb[Gb]=db.x,Rb[Gb+1]=db.y,Rb[Gb+2]=db.z,Rb[Gb+3]=db.w,Rb[Gb+4]=eb.x,Rb[Gb+5]=eb.y,Rb[Gb+6]=eb.z,Rb[Gb+7]=eb.w,Rb[Gb+8]=fb.x,Rb[Gb+9]=fb.y,Rb[Gb+10]=fb.z,Rb[Gb+11]=fb.w,gb=ic[K.a],hb=ic[K.b],ib=ic[K.c],Qb[Gb]=gb.x,Qb[Gb+1]=gb.y,Qb[Gb+2]=gb.z,Qb[Gb+3]=gb.w,Qb[Gb+4]=hb.x,Qb[Gb+5]=hb.y,Qb[Gb+6]=hb.z,Qb[Gb+7]=hb.w,Qb[Gb+8]=ib.x,Qb[Gb+9]=ib.y,Qb[Gb+10]=ib.z,Qb[Gb+11]=ib.w,Gb+=12;Gb>0&&(R.bindBuffer(R.ARRAY_BUFFER,y.__webglSkinIndicesBuffer),R.bufferData(R.ARRAY_BUFFER,Qb,A),R.bindBuffer(R.ARRAY_BUFFER,y.__webglSkinWeightsBuffer),R.bufferData(R.ARRAY_BUFFER,Rb,A))}if(bc&&E){for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],N=K.vertexColors,O=K.color,3===N.length&&E===THREE.VertexColors?(ab=N[0],bb=N[1],cb=N[2]):cb=bb=ab=O,Pb[Fb]=ab.r,Pb[Fb+1]=ab.g,Pb[Fb+2]=ab.b,Pb[Fb+3]=bb.r,Pb[Fb+4]=bb.g,Pb[Fb+5]=bb.b,Pb[Fb+6]=cb.r,Pb[Fb+7]=cb.g,Pb[Fb+8]=cb.b,Fb+=9;Fb>0&&(R.bindBuffer(R.ARRAY_BUFFER,y.__webglColorBuffer),R.bufferData(R.ARRAY_BUFFER,Pb,A))}if(ac&&Yb.hasTangents){for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],P=K.vertexTangents,W=P[0],X=P[1],Y=P[2],Ob[Db]=W.x,Ob[Db+1]=W.y,Ob[Db+2]=W.z,Ob[Db+3]=W.w,Ob[Db+4]=X.x,Ob[Db+5]=X.y,Ob[Db+6]=X.z,Ob[Db+7]=X.w,Ob[Db+8]=Y.x,Ob[Db+9]=Y.y,Ob[Db+10]=Y.z,Ob[Db+11]=Y.w,Db+=12;R.bindBuffer(R.ARRAY_BUFFER,y.__webglTangentBuffer),R.bufferData(R.ARRAY_BUFFER,Ob,A)}if(_b&&D){for(H=0,I=ec.length;I>H;H++)if(K=fc[ec[H]],L=K.vertexNormals,M=K.normal,3===L.length&&G)for(jb=0;3>jb;jb++)lb=L[jb],Nb[Cb]=lb.x,Nb[Cb+1]=lb.y,Nb[Cb+2]=lb.z,Cb+=3;else for(jb=0;3>jb;jb++)Nb[Cb]=M.x,Nb[Cb+1]=M.y,Nb[Cb+2]=M.z,Cb+=3;R.bindBuffer(R.ARRAY_BUFFER,y.__webglNormalBuffer),R.bufferData(R.ARRAY_BUFFER,Nb,A)}if($b&&gc&&F){for(H=0,I=ec.length;I>H;H++)if(J=ec[H],Q=gc[J],void 0!==Q)for(jb=0;3>jb;jb++)mb=Q[jb],Lb[wb]=mb.x,Lb[wb+1]=mb.y,wb+=2;wb>0&&(R.bindBuffer(R.ARRAY_BUFFER,y.__webglUVBuffer),R.bufferData(R.ARRAY_BUFFER,Lb,A))}if($b&&hc&&F){for(H=0,I=ec.length;I>H;H++)if(J=ec[H],S=hc[J],void 0!==S)for(jb=0;3>jb;jb++)nb=S[jb],Mb[Ab]=nb.x,Mb[Ab+1]=nb.y,Ab+=2;Ab>0&&(R.bindBuffer(R.ARRAY_BUFFER,y.__webglUV2Buffer),R.bufferData(R.ARRAY_BUFFER,Mb,A))}if(Zb){for(H=0,I=ec.length;I>H;H++)Wb[Bb]=ub,Wb[Bb+1]=ub+1,Wb[Bb+2]=ub+2,Bb+=3,Xb[Eb]=ub,Xb[Eb+1]=ub+1,Xb[Eb+2]=ub,Xb[Eb+3]=ub+2,Xb[Eb+4]=ub+1,Xb[Eb+5]=ub+2,Eb+=6,ub+=3;R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,y.__webglFaceBuffer),R.bufferData(R.ELEMENT_ARRAY_BUFFER,Wb,A),R.bindBuffer(R.ELEMENT_ARRAY_BUFFER,y.__webglLineBuffer),R.bufferData(R.ELEMENT_ARRAY_BUFFER,Xb,A)}if(Ub)for(jb=0,kb=Ub.length;kb>jb;jb++)if(Vb=Ub[jb],Vb.__original.needsUpdate){if(Ib=0,1===Vb.size){if(void 0===Vb.boundTo||"vertices"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],Vb.array[Ib]=Vb.value[K.a],Vb.array[Ib+1]=Vb.value[K.b],Vb.array[Ib+2]=Vb.value[K.c],Ib+=3;else if("faces"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)Jb=Vb.value[ec[H]],Vb.array[Ib]=Jb,Vb.array[Ib+1]=Jb,Vb.array[Ib+2]=Jb,Ib+=3}else if(2===Vb.size){if(void 0===Vb.boundTo||"vertices"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],T=Vb.value[K.a],U=Vb.value[K.b],V=Vb.value[K.c],Vb.array[Ib]=T.x,Vb.array[Ib+1]=T.y,Vb.array[Ib+2]=U.x,Vb.array[Ib+3]=U.y,Vb.array[Ib+4]=V.x,Vb.array[Ib+5]=V.y,Ib+=6;else if("faces"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)V=U=T=Jb=Vb.value[ec[H]],Vb.array[Ib]=T.x,Vb.array[Ib+1]=T.y,Vb.array[Ib+2]=U.x,Vb.array[Ib+3]=U.y,Vb.array[Ib+4]=V.x,Vb.array[Ib+5]=V.y,Ib+=6}else if(3===Vb.size){var mc;if(mc="c"===Vb.type?["r","g","b"]:["x","y","z"],void 0===Vb.boundTo||"vertices"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],T=Vb.value[K.a],U=Vb.value[K.b],V=Vb.value[K.c],Vb.array[Ib]=T[mc[0]],Vb.array[Ib+1]=T[mc[1]],Vb.array[Ib+2]=T[mc[2]],Vb.array[Ib+3]=U[mc[0]],Vb.array[Ib+4]=U[mc[1]],Vb.array[Ib+5]=U[mc[2]],Vb.array[Ib+6]=V[mc[0]],Vb.array[Ib+7]=V[mc[1]],Vb.array[Ib+8]=V[mc[2]],Ib+=9;else if("faces"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)V=U=T=Jb=Vb.value[ec[H]],Vb.array[Ib]=T[mc[0]],Vb.array[Ib+1]=T[mc[1]],Vb.array[Ib+2]=T[mc[2]],Vb.array[Ib+3]=U[mc[0]],Vb.array[Ib+4]=U[mc[1]],Vb.array[Ib+5]=U[mc[2]],Vb.array[Ib+6]=V[mc[0]],Vb.array[Ib+7]=V[mc[1]],Vb.array[Ib+8]=V[mc[2]],Ib+=9;else if("faceVertices"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)Jb=Vb.value[ec[H]],T=Jb[0],U=Jb[1],V=Jb[2],Vb.array[Ib]=T[mc[0]],Vb.array[Ib+1]=T[mc[1]],Vb.array[Ib+2]=T[mc[2]],Vb.array[Ib+3]=U[mc[0]],Vb.array[Ib+4]=U[mc[1]],Vb.array[Ib+5]=U[mc[2]],Vb.array[Ib+6]=V[mc[0]],Vb.array[Ib+7]=V[mc[1]],Vb.array[Ib+8]=V[mc[2]],Ib+=9}else if(4===Vb.size)if(void 0===Vb.boundTo||"vertices"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)K=fc[ec[H]],T=Vb.value[K.a],U=Vb.value[K.b],V=Vb.value[K.c],Vb.array[Ib]=T.x,Vb.array[Ib+1]=T.y,Vb.array[Ib+2]=T.z,Vb.array[Ib+3]=T.w,Vb.array[Ib+4]=U.x,Vb.array[Ib+5]=U.y,Vb.array[Ib+6]=U.z,Vb.array[Ib+7]=U.w,Vb.array[Ib+8]=V.x,Vb.array[Ib+9]=V.y,Vb.array[Ib+10]=V.z,Vb.array[Ib+11]=V.w,Ib+=12;else if("faces"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)V=U=T=Jb=Vb.value[ec[H]],Vb.array[Ib]=T.x,Vb.array[Ib+1]=T.y,Vb.array[Ib+2]=T.z,Vb.array[Ib+3]=T.w,Vb.array[Ib+4]=U.x,Vb.array[Ib+5]=U.y,Vb.array[Ib+6]=U.z,Vb.array[Ib+7]=U.w,Vb.array[Ib+8]=V.x,Vb.array[Ib+9]=V.y,Vb.array[Ib+10]=V.z,Vb.array[Ib+11]=V.w,Ib+=12;else if("faceVertices"===Vb.boundTo)for(H=0,I=ec.length;I>H;H++)Jb=Vb.value[ec[H]],T=Jb[0],U=Jb[1],V=Jb[2],Vb.array[Ib]=T.x,Vb.array[Ib+1]=T.y,Vb.array[Ib+2]=T.z,Vb.array[Ib+3]=T.w,Vb.array[Ib+4]=U.x,Vb.array[Ib+5]=U.y,Vb.array[Ib+6]=U.z,Vb.array[Ib+7]=U.w,Vb.array[Ib+8]=V.x,Vb.array[Ib+9]=V.y,Vb.array[Ib+10]=V.z,Vb.array[Ib+11]=V.w,Ib+=12;R.bindBuffer(R.ARRAY_BUFFER,Vb.buffer),R.bufferData(R.ARRAY_BUFFER,Vb.array,A)}B&&(delete y.__inittedArrays,delete y.__colorArray,delete y.__normalArray,delete y.__tangentArray,delete y.__uvArray,delete y.__uv2Array,delete y.__faceArray,delete y.__vertexArray,delete y.__lineArray,delete y.__skinIndexArray,delete y.__skinWeightArray)}}j.verticesNeedUpdate=!1,j.morphTargetsNeedUpdate=!1,j.elementsNeedUpdate=!1,j.uvsNeedUpdate=!1,j.normalsNeedUpdate=!1,j.colorsNeedUpdate=!1,j.tangentsNeedUpdate=!1,j.buffersNeedUpdate=!1,n.attributes&&r(n)}else if(i instanceof THREE.Line){if(n=d(i,j),m=n.attributes&&q(n),j.verticesNeedUpdate||j.colorsNeedUpdate||j.lineDistancesNeedUpdate||m){var nc=j,oc=R.DYNAMIC_DRAW,pc=void 0,qc=void 0,rc=void 0,sc=void 0,tc=void 0,uc=void 0,vc=nc.vertices,wc=nc.colors,xc=nc.lineDistances,yc=vc.length,zc=wc.length,Ac=xc.length,Bc=nc.__vertexArray,Cc=nc.__colorArray,Dc=nc.__lineDistanceArray,Ec=nc.colorsNeedUpdate,Fc=nc.lineDistancesNeedUpdate,Gc=nc.__webglCustomAttributesList,Hc=void 0,Ic=void 0,Jc=void 0,Kc=void 0,Lc=void 0,Mc=void 0;if(nc.verticesNeedUpdate){for(pc=0;yc>pc;pc++)sc=vc[pc],tc=3*pc,Bc[tc]=sc.x,Bc[tc+1]=sc.y,Bc[tc+2]=sc.z;R.bindBuffer(R.ARRAY_BUFFER,nc.__webglVertexBuffer),R.bufferData(R.ARRAY_BUFFER,Bc,oc)}if(Ec){for(qc=0;zc>qc;qc++)uc=wc[qc],tc=3*qc,Cc[tc]=uc.r,Cc[tc+1]=uc.g,Cc[tc+2]=uc.b;R.bindBuffer(R.ARRAY_BUFFER,nc.__webglColorBuffer),R.bufferData(R.ARRAY_BUFFER,Cc,oc)}if(Fc){for(rc=0;Ac>rc;rc++)Dc[rc]=xc[rc];R.bindBuffer(R.ARRAY_BUFFER,nc.__webglLineDistanceBuffer),R.bufferData(R.ARRAY_BUFFER,Dc,oc)}if(Gc)for(Hc=0,Ic=Gc.length;Ic>Hc;Hc++)if(Mc=Gc[Hc],Mc.needsUpdate&&(void 0===Mc.boundTo||"vertices"===Mc.boundTo)){if(tc=0,Kc=Mc.value.length,1===Mc.size)for(Jc=0;Kc>Jc;Jc++)Mc.array[Jc]=Mc.value[Jc];else if(2===Mc.size)for(Jc=0;Kc>Jc;Jc++)Lc=Mc.value[Jc],Mc.array[tc]=Lc.x,Mc.array[tc+1]=Lc.y,tc+=2;else if(3===Mc.size)if("c"===Mc.type)for(Jc=0;Kc>Jc;Jc++)Lc=Mc.value[Jc],Mc.array[tc]=Lc.r,Mc.array[tc+1]=Lc.g,Mc.array[tc+2]=Lc.b,tc+=3;else for(Jc=0;Kc>Jc;Jc++)Lc=Mc.value[Jc],Mc.array[tc]=Lc.x,Mc.array[tc+1]=Lc.y,Mc.array[tc+2]=Lc.z,tc+=3;else if(4===Mc.size)for(Jc=0;Kc>Jc;Jc++)Lc=Mc.value[Jc],Mc.array[tc]=Lc.x,Mc.array[tc+1]=Lc.y,Mc.array[tc+2]=Lc.z,Mc.array[tc+3]=Lc.w,tc+=4;R.bindBuffer(R.ARRAY_BUFFER,Mc.buffer),R.bufferData(R.ARRAY_BUFFER,Mc.array,oc)}}j.verticesNeedUpdate=!1,j.colorsNeedUpdate=!1,j.lineDistancesNeedUpdate=!1,n.attributes&&r(n)}else if(i instanceof THREE.ParticleSystem){if(n=d(i,j),m=n.attributes&&q(n),j.verticesNeedUpdate||j.colorsNeedUpdate||i.sortParticles||m){var Nc=j,Oc=R.DYNAMIC_DRAW,Pc=i,Qc=void 0,Rc=void 0,Sc=void 0,Tc=void 0,Uc=void 0,Vc=void 0,Wc=Nc.vertices,Xc=Wc.length,Yc=Nc.colors,Zc=Yc.length,$c=Nc.__vertexArray,_c=Nc.__colorArray,ad=Nc.__sortArray,bd=Nc.verticesNeedUpdate,cd=Nc.colorsNeedUpdate,dd=Nc.__webglCustomAttributesList,ed=void 0,fd=void 0,gd=void 0,hd=void 0,id=void 0,jd=void 0;if(Pc.sortParticles){for(yb.copy(xb),yb.multiply(Pc.matrixWorld),Qc=0;Xc>Qc;Qc++)Sc=Wc[Qc],zb.copy(Sc),zb.applyProjection(yb),ad[Qc]=[zb.z,Qc];for(ad.sort(k),Qc=0;Xc>Qc;Qc++)Sc=Wc[ad[Qc][1]],Tc=3*Qc,$c[Tc]=Sc.x,$c[Tc+1]=Sc.y,$c[Tc+2]=Sc.z;for(Rc=0;Zc>Rc;Rc++)Tc=3*Rc,Vc=Yc[ad[Rc][1]],_c[Tc]=Vc.r,_c[Tc+1]=Vc.g,_c[Tc+2]=Vc.b;if(dd)for(ed=0,fd=dd.length;fd>ed;ed++)if(jd=dd[ed],void 0===jd.boundTo||"vertices"===jd.boundTo)if(Tc=0,hd=jd.value.length,1===jd.size)for(gd=0;hd>gd;gd++)Uc=ad[gd][1],jd.array[gd]=jd.value[Uc];else if(2===jd.size)for(gd=0;hd>gd;gd++)Uc=ad[gd][1],id=jd.value[Uc],jd.array[Tc]=id.x,jd.array[Tc+1]=id.y,Tc+=2;else if(3===jd.size)if("c"===jd.type)for(gd=0;hd>gd;gd++)Uc=ad[gd][1],id=jd.value[Uc],jd.array[Tc]=id.r,jd.array[Tc+1]=id.g,jd.array[Tc+2]=id.b,Tc+=3;else for(gd=0;hd>gd;gd++)Uc=ad[gd][1],id=jd.value[Uc],jd.array[Tc]=id.x,jd.array[Tc+1]=id.y,jd.array[Tc+2]=id.z,Tc+=3;else if(4===jd.size)for(gd=0;hd>gd;gd++)Uc=ad[gd][1],id=jd.value[Uc],jd.array[Tc]=id.x,jd.array[Tc+1]=id.y,jd.array[Tc+2]=id.z,jd.array[Tc+3]=id.w,Tc+=4}else{if(bd)for(Qc=0;Xc>Qc;Qc++)Sc=Wc[Qc],Tc=3*Qc,$c[Tc]=Sc.x,$c[Tc+1]=Sc.y,$c[Tc+2]=Sc.z;if(cd)for(Rc=0;Zc>Rc;Rc++)Vc=Yc[Rc],Tc=3*Rc,_c[Tc]=Vc.r,_c[Tc+1]=Vc.g,_c[Tc+2]=Vc.b;if(dd)for(ed=0,fd=dd.length;fd>ed;ed++)if(jd=dd[ed],jd.needsUpdate&&(void 0===jd.boundTo||"vertices"===jd.boundTo))if(hd=jd.value.length,Tc=0,1===jd.size)for(gd=0;hd>gd;gd++)jd.array[gd]=jd.value[gd];else if(2===jd.size)for(gd=0;hd>gd;gd++)id=jd.value[gd],jd.array[Tc]=id.x,jd.array[Tc+1]=id.y,Tc+=2;else if(3===jd.size)if("c"===jd.type)for(gd=0;hd>gd;gd++)id=jd.value[gd],jd.array[Tc]=id.r,jd.array[Tc+1]=id.g,jd.array[Tc+2]=id.b,Tc+=3;else for(gd=0;hd>gd;gd++)id=jd.value[gd],jd.array[Tc]=id.x,jd.array[Tc+1]=id.y,jd.array[Tc+2]=id.z,Tc+=3;else if(4===jd.size)for(gd=0;hd>gd;gd++)id=jd.value[gd],jd.array[Tc]=id.x,jd.array[Tc+1]=id.y,jd.array[Tc+2]=id.z,jd.array[Tc+3]=id.w,Tc+=4}if((bd||Pc.sortParticles)&&(R.bindBuffer(R.ARRAY_BUFFER,Nc.__webglVertexBuffer),R.bufferData(R.ARRAY_BUFFER,$c,Oc)),(cd||Pc.sortParticles)&&(R.bindBuffer(R.ARRAY_BUFFER,Nc.__webglColorBuffer),R.bufferData(R.ARRAY_BUFFER,_c,Oc)),dd)for(ed=0,fd=dd.length;fd>ed;ed++)jd=dd[ed],(jd.needsUpdate||Pc.sortParticles)&&(R.bindBuffer(R.ARRAY_BUFFER,jd.buffer),R.bufferData(R.ARRAY_BUFFER,jd.array,Oc))}j.verticesNeedUpdate=!1,j.colorsNeedUpdate=!1,n.attributes&&r(n)}}},this.initMaterial=function(a,b,c,d){var e,f,g,h;a.addEventListener("dispose",Sb);var i,j,k,l,m;if(a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.LineDashedMaterial?m="dashed":a instanceof THREE.ParticleSystemMaterial&&(m="particle_basic"),m){var n=THREE.ShaderLib[m];a.uniforms=THREE.UniformsUtils.clone(n.uniforms),a.vertexShader=n.vertexShader,a.fragmentShader=n.fragmentShader}var o=e=0,p=0,q=n=0;for(f=b.length;f>q;q++)g=b[q],g.onlyShadow||!1===g.visible||(g instanceof THREE.DirectionalLight&&e++,g instanceof THREE.PointLight&&o++,g instanceof THREE.SpotLight&&p++,g instanceof THREE.HemisphereLight&&n++);for(f=o,g=p,h=n,p=n=0,o=b.length;o>p;p++)q=b[p],q.castShadow&&(q instanceof THREE.SpotLight&&n++,q instanceof THREE.DirectionalLight&&!q.shadowCascade&&n++);l=n,Ib&&d&&d.useVertexTexture?k=1024:(b=R.getParameter(R.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),k=b);a:{p=a.fragmentShader,o=a.vertexShader,n=a.uniforms,b=a.attributes,q=a.defines,c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:k,useVertexTexture:Ib&&d&&d.useVertexTexture,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow&&l>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},d=a.index0AttributeName;var r,s,t;e=[],m?e.push(m):(e.push(p),e.push(o));for(s in q)e.push(s),e.push(q[s]);for(r in c)e.push(r),e.push(c[r]);for(m=e.join(),r=0,s=X.length;s>r;r++)if(e=X[r],e.code===m){e.usedTimes++,j=e.program;break a}r="SHADOWMAP_TYPE_BASIC",c.shadowMapType===THREE.PCFShadowMap?r="SHADOWMAP_TYPE_PCF":c.shadowMapType===THREE.PCFSoftShadowMap&&(r="SHADOWMAP_TYPE_PCF_SOFT"),s=[];for(t in q)e=q[t],!1!==e&&(e="#define "+t+" "+e,s.push(e));e=s.join("\n"),t=R.createProgram(),s=["precision "+J+" float;","precision "+J+" int;",e,Hb?"#define VERTEX_TEXTURES":"",W.gammaInput?"#define GAMMA_INPUT":"",W.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+r:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n"),r=["precision "+J+" float;","precision "+J+" int;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",e,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",W.gammaInput?"#define GAMMA_INPUT":"",W.gammaOutput?"#define GAMMA_OUTPUT":"",c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+r:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n"),s=C("vertex",s+o),r=C("fragment",r+p),R.attachShader(t,s),R.attachShader(t,r),void 0!==d&&R.bindAttribLocation(t,0,d),R.linkProgram(t),!1===R.getProgramParameter(t,R.LINK_STATUS)&&(console.error("Could not initialise shader"),console.error("gl.VALIDATE_STATUS",R.getProgramParameter(t,R.VALIDATE_STATUS)),console.error("gl.getError()",R.getError())),""!==R.getProgramInfoLog(t)&&console.error("gl.getProgramInfoLog()",R.getProgramInfoLog(t)),R.deleteShader(r),R.deleteShader(s),t.uniforms={},t.attributes={};var u;r="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" "),c.useVertexTexture?(r.push("boneTexture"),r.push("boneTextureWidth"),r.push("boneTextureHeight")):r.push("boneGlobalMatrices");for(u in n)r.push(u);for(u=r,r=0,s=u.length;s>r;r++)n=u[r],t.uniforms[n]=R.getUniformLocation(t,n);for(r="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" "),u=0;u<c.maxMorphTargets;u++)r.push("morphTarget"+u);for(u=0;u<c.maxMorphNormals;u++)r.push("morphNormal"+u);for(j in b)r.push(j);for(j=r,u=0,b=j.length;b>u;u++)r=j[u],t.attributes[r]=R.getAttribLocation(t,r);t.id=Y++,X.push({program:t,code:m,usedTimes:1}),W.info.memory.programs=X.length,j=t}if(a.program=j,u=a.program.attributes,a.morphTargets)for(a.numSupportedMorphTargets=0,b="morphTarget",j=0;j<this.maxMorphTargets;j++)t=b+j,0<=u[t]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(a.numSupportedMorphNormals=0,b="morphNormal",j=0;j<this.maxMorphNormals;j++)t=b+j,0<=u[t]&&a.numSupportedMorphNormals++;a.uniformsList=[];for(i in a.uniforms)a.uniformsList.push([a.uniforms[i],i])},this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?R.disable(R.CULL_FACE):(R.frontFace(b===THREE.FrontFaceDirectionCW?R.CW:R.CCW),R.cullFace(a===THREE.CullFaceBack?R.BACK:a===THREE.CullFaceFront?R.FRONT:R.FRONT_AND_BACK),R.enable(R.CULL_FACE))},this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide,db!==b&&(b?R.disable(R.CULL_FACE):R.enable(R.CULL_FACE),db=b),eb!==a&&(R.frontFace(a?R.CW:R.CCW),eb=a)},this.setDepthTest=function(a){jb!==a&&(a?R.enable(R.DEPTH_TEST):R.disable(R.DEPTH_TEST),jb=a)},this.setDepthWrite=function(a){kb!==a&&(R.depthMask(a),kb=a)},this.setBlending=function(a,b,c,d){a!==fb&&(a===THREE.NoBlending?R.disable(R.BLEND):a===THREE.AdditiveBlending?(R.enable(R.BLEND),R.blendEquation(R.FUNC_ADD),R.blendFunc(R.SRC_ALPHA,R.ONE)):a===THREE.SubtractiveBlending?(R.enable(R.BLEND),R.blendEquation(R.FUNC_ADD),R.blendFunc(R.ZERO,R.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(R.enable(R.BLEND),R.blendEquation(R.FUNC_ADD),R.blendFunc(R.ZERO,R.SRC_COLOR)):a===THREE.CustomBlending?R.enable(R.BLEND):(R.enable(R.BLEND),R.blendEquationSeparate(R.FUNC_ADD,R.FUNC_ADD),R.blendFuncSeparate(R.SRC_ALPHA,R.ONE_MINUS_SRC_ALPHA,R.ONE,R.ONE_MINUS_SRC_ALPHA)),fb=a),a===THREE.CustomBlending?(b!==gb&&(R.blendEquation(G(b)),gb=b),(c!==hb||d!==ib)&&(R.blendFunc(G(c),G(d)),hb=c,ib=d)):ib=hb=gb=null},this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",Qb),a.__webglTexture=R.createTexture(),W.info.memory.textures++),R.activeTexture(R.TEXTURE0+b),R.bindTexture(R.TEXTURE_2D,a.__webglTexture),R.pixelStorei(R.UNPACK_FLIP_Y_WEBGL,a.flipY),R.pixelStorei(R.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),R.pixelStorei(R.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=THREE.Math.isPowerOfTwo(c.width)&&THREE.Math.isPowerOfTwo(c.height),e=G(a.format),f=G(a.type);D(R.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var h=0,i=g.length;i>h;h++)c=g[h],R.texImage2D(R.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else R.texImage2D(R.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture)for(h=0,i=g.length;i>h;h++)c=g[h],a.format!==THREE.RGBAFormat?R.compressedTexImage2D(R.TEXTURE_2D,h,e,c.width,c.height,0,c.data):R.texImage2D(R.TEXTURE_2D,h,e,c.width,c.height,0,e,f,c.data);else if(0<g.length&&d){for(h=0,i=g.length;i>h;h++)c=g[h],R.texImage2D(R.TEXTURE_2D,h,e,e,f,c);a.generateMipmaps=!1}else R.texImage2D(R.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&R.generateMipmap(R.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else R.activeTexture(R.TEXTURE0+b),R.bindTexture(R.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0),void 0===a.stencilBuffer&&(a.stencilBuffer=!0),a.addEventListener("dispose",Rb),a.__webglTexture=R.createTexture(),W.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=G(a.format),e=G(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],R.bindTexture(R.TEXTURE_CUBE_MAP,a.__webglTexture),D(R.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=R.createFramebuffer(),a.__webglRenderbuffer[f]=R.createRenderbuffer(),R.texImage2D(R.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=R.TEXTURE_CUBE_MAP_POSITIVE_X+f;R.bindFramebuffer(R.FRAMEBUFFER,a.__webglFramebuffer[f]),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,h,g.__webglTexture,0),E(a.__webglRenderbuffer[f],a)}c&&R.generateMipmap(R.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=R.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:R.createRenderbuffer(),R.bindTexture(R.TEXTURE_2D,a.__webglTexture),D(R.TEXTURE_2D,a,c),R.texImage2D(R.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=R.TEXTURE_2D,R.bindFramebuffer(R.FRAMEBUFFER,a.__webglFramebuffer),R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?R.framebufferRenderbuffer(R.FRAMEBUFFER,R.DEPTH_ATTACHMENT,R.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&R.framebufferRenderbuffer(R.FRAMEBUFFER,R.DEPTH_STENCIL_ATTACHMENT,R.RENDERBUFFER,a.__webglRenderbuffer):E(a.__webglRenderbuffer,a),c&&R.generateMipmap(R.TEXTURE_2D);b?R.bindTexture(R.TEXTURE_CUBE_MAP,null):R.bindTexture(R.TEXTURE_2D,null),R.bindRenderbuffer(R.RENDERBUFFER,null),R.bindFramebuffer(R.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=rb,a=sb,d=pb,e=qb),b!==$&&(R.bindFramebuffer(R.FRAMEBUFFER,b),R.viewport(d,e,c,a),$=b),tb=c,ub=a},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(a,b,c){this.width=a,this.height=b,c=c||{},this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter,this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==c.format?c.format:THREE.RGBAFormat,this.type=void 0!==c.type?c.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0,this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);return a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.format=this.format,a.type=this.type,a.depthBuffer=this.depthBuffer,a.stencilBuffer=this.stencilBuffer,a.generateMipmaps=this.generateMipmaps,a.shareDepthFrom=this.shareDepthFrom,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0
},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.material=this.color=null,this.uvs=[[]],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.rotation=this.z=this.y=this.x=0,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(a,b,c){var d,e,f=a.vertices.length,g=b instanceof THREE.Mesh?b.geometry:b,h=a.vertices,i=g.vertices,j=a.faces,k=g.faces;a=a.faceVertexUvs[0],g=g.faceVertexUvs[0],void 0===c&&(c=0),b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,e=(new THREE.Matrix3).getNormalMatrix(d)),b=0;for(var l=i.length;l>b;b++){var m=i[b].clone();d&&m.applyMatrix4(d),h.push(m)}for(b=0,l=k.length;l>b;b++){var n,o,m=k[b],p=m.vertexNormals,q=m.vertexColors;for(n=new THREE.Face3(m.a+f,m.b+f,m.c+f),n.normal.copy(m.normal),e&&n.normal.applyMatrix3(e).normalize(),h=0,i=p.length;i>h;h++)o=p[h].clone(),e&&o.applyMatrix3(e).normalize(),n.vertexNormals.push(o);for(n.color.copy(m.color),h=0,i=q.length;i>h;h++)o=q[h],n.vertexColors.push(o.clone());n.materialIndex=m.materialIndex+c,n.centroid.copy(m.centroid),d&&n.centroid.applyMatrix4(d),j.push(n)}for(b=0,l=g.length;l>b;b++){for(c=g[b],d=[],h=0,i=c.length;i>h;h++)d.push(new THREE.Vector2(c[h].x,c[h].y));a.push(d)}},randomPointInTriangle:function(){var a=new THREE.Vector3;return function(b,c,d){var e=new THREE.Vector3,f=THREE.Math.random16(),g=THREE.Math.random16();f+g>1&&(f=1-f,g=1-g);var h=1-f-g;return e.copy(b),e.multiplyScalar(f),a.copy(c),a.multiplyScalar(g),e.add(a),a.copy(d),a.multiplyScalar(h),e.add(a),e}}(),randomPointInFace:function(a,b){return THREE.GeometryUtils.randomPointInTriangle(b.vertices[a.a],b.vertices[a.b],b.vertices[a.c])},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(c>d)return c;var e=c+Math.floor((d-c)/2);return m[e]>a?b(c,e-1):m[e]<a?b(e+1,d):e}return b(0,m.length-1)}var d,e,f,g,h,i=a.faces,j=a.vertices,k=i.length,l=0,m=[];for(e=0;k>e;e++)d=i[e],f=j[d.a],g=j[d.b],h=j[d.c],d._area=THREE.GeometryUtils.triangleArea(f,g,h),l+=d._area,m[e]=l;for(d=[],e=0;b>e;e++)j=THREE.Math.random16()*l,j=c(j),d[e]=THREE.GeometryUtils.randomPointInFace(i[j],a,!0);return d},triangleArea:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){return a.subVectors(d,c),b.subVectors(e,c),a.cross(b),.5*a.length()}}(),center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;return c.addVectors(b.min,b.max),c.multiplyScalar(-.5),a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z)),a.computeBoundingBox(),c},triangulateQuads:function(a){var b,c,d,e,f=[],g=[];for(b=0,c=a.faceVertexUvs.length;c>b;b++)g[b]=[];for(b=0,c=a.faces.length;c>b;b++)for(f.push(a.faces[b]),d=0,e=a.faceVertexUvs.length;e>d;d++)g[d].push(a.faceVertexUvs[d][b]);a.faces=f,a.faceVertexUvs=g,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals(),a.hasTangents&&a.computeTangents()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){d=new THREE.ImageLoader,d.crossOrigin=this.crossOrigin;var e=new THREE.Texture(void 0,b);return b=d.load(a,function(){e.needsUpdate=!0,c&&c(e)}),e.image=b,e.sourceFile=a,e},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;return f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,!0);e.format=a.format,e.mipmaps=a.mipmaps,e.image.width=a.width,e.image.height=a.height,e.generateMipmaps=!1,e.needsUpdate=!0,c&&c(e)},f.onerror=d,f.open("GET",a,!0),f.responseType="arraybuffer",f.send(null),e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1,b=0;for(var g=a.length;g>b;++b){var h=new Image;e[b]=h,h.onload=function(){e.loadCount+=1,6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))},h.onerror=d,h.crossOrigin=this.crossOrigin,h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;if(f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1,f.generateMipmaps=!1,b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format,b.mipmaps=d.mipmaps,b.width=d.width,b.height=d.height,e.loadCount+=1,6===e.loadCount&&(f.format=d.format,f.needsUpdate=!0,c&&c(f))}},a instanceof Array)for(var g=0,h=a.length;h>g;++g){var i={};e[g]=i;var j=new XMLHttpRequest;j.onload=b(j,i),j.onerror=d,i=a[g],j.open("GET",i,!0),j.responseType="arraybuffer",j.send(null)}else j=new XMLHttpRequest,j.onload=function(){var a=THREE.ImageUtils.parseDDS(j.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;b>d;d++){e[d]={mipmaps:[]};for(var g=0;g<a.mipmapCount;g++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+g]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}f.format=a.format,f.needsUpdate=!0,c&&c(f)}},j.onerror=d,j.open("GET",a,!0),j.responseType="arraybuffer",j.send(null);return f},loadDDSTexture:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1,f.generateMipmaps=!1;var g=new XMLHttpRequest;return g.onload=function(){var a=THREE.ImageUtils.parseDDS(g.response,!0);if(a.isCubemap)for(var b=a.mipmaps.length/a.mipmapCount,d=0;b>d;d++){e[d]={mipmaps:[]};for(var h=0;h<a.mipmapCount;h++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+h]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}else f.image.width=a.width,f.image.height=a.height,f.mipmaps=a.mipmaps;f.format=a.format,f.needsUpdate=!0,c&&c(f)},g.onerror=d,g.open("GET",a,!0),g.responseType="arraybuffer",g.send(null),f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}function d(a,b,c,d){var e=c*d*4;a=new Uint8Array(a,b,e);for(var e=new Uint8Array(e),f=b=0,g=0;d>g;g++)for(var h=0;c>h;h++){var i=a[f];f++;var j=a[f];f++;var k=a[f];f++;var l=a[f];f++,e[b]=k,b++,e[b]=j,b++,e[b]=i,b++,e[b]=l,b++}return e}var e={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=c("DXT1"),g=c("DXT3"),h=c("DXT5"),i=new Int32Array(a,0,31);if(542327876!==i[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),e;if(4&!i[20])return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),e;var j=i[21],k=!1;switch(j){case f:f=8,e.format=THREE.RGB_S3TC_DXT1_Format;break;case g:f=16,e.format=THREE.RGBA_S3TC_DXT3_Format;break;case h:f=16,e.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(!(32==i[22]&&16711680&i[23]&&65280&i[24]&&255&i[25]&&4278190080&i[26]))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(255&j,j>>8&255,j>>16&255,j>>24&255)),e;k=!0,f=64,e.format=THREE.RGBAFormat}e.mipmapCount=1,131072&i[2]&&!1!==b&&(e.mipmapCount=Math.max(1,i[7])),e.isCubemap=512&i[28]?!0:!1,e.width=i[4],e.height=i[3];for(var i=i[1]+4,g=e.width,h=e.height,j=e.isCubemap?6:1,l=0;j>l;l++){for(var m=0;m<e.mipmapCount;m++){if(k)var n=d(a,i,g,h),o=n.length;else o=Math.max(4,g)/4*Math.max(4,h)/4*f,n=new Uint8Array(a,i,o);e.mipmaps.push({data:n,width:g,height:h}),i+=o,g=Math.max(.5*g,1),h=Math.max(.5*h,1)}g=e.width,h=e.height}return e},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,i=g.createImageData(d,e),j=i.data,k=0;d>k;k++)for(var l=0;e>l;l++){var m=0>l-1?0:l-1,n=l+1>e-1?e-1:l+1,o=0>k-1?0:k-1,p=k+1>d-1?d-1:k+1,q=[],r=[0,0,h[4*(l*d+k)]/255*b];for(q.push([-1,0,h[4*(l*d+o)]/255*b]),q.push([-1,-1,h[4*(m*d+o)]/255*b]),q.push([0,-1,h[4*(m*d+k)]/255*b]),q.push([1,-1,h[4*(m*d+p)]/255*b]),q.push([1,0,h[4*(l*d+p)]/255*b]),q.push([1,1,h[4*(n*d+p)]/255*b]),q.push([0,1,h[4*(n*d+k)]/255*b]),q.push([-1,1,h[4*(n*d+o)]/255*b]),m=[],o=q.length,n=0;o>n;n++){var p=q[n],s=q[(n+1)%o],p=[p[0]-r[0],p[1]-r[1],p[2]-r[2]],s=[s[0]-r[0],s[1]-r[1],s[2]-r[2]];m.push(c([p[1]*s[2]-p[2]*s[1],p[2]*s[0]-p[0]*s[2],p[0]*s[1]-p[1]*s[0]]))}for(q=[0,0,0],n=0;n<m.length;n++)q[0]+=m[n][0],q[1]+=m[n][1],q[2]+=m[n][2];q[0]/=m.length,q[1]/=m.length,q[2]/=m.length,r=4*(l*d+k),j[r]=(q[0]+1)/2*255|0,j[r+1]=(q[1]+1)/2*255|0,j[r+2]=255*q[2]|0,j[r+3]=255}return g.putImageData(i,0,0),f},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;d>h;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;return a=new THREE.DataTexture(e,a,b,THREE.RGBFormat),a.needsUpdate=!0,a}},THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;e>d;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();return this.faces[b]=this.faces[b]||{},this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{},this.faces[b][a.cssFontWeight][a.cssFontStyle]=a,this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=String(a).split(""),f=e.length,g=[];for(a=0;f>a;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=[],r=b.glyphs[a]||b.glyphs["?"];if(r){if(r.o)for(b=r._cachedOutline||(r._cachedOutline=r.o.split(" ")),i=b.length,a=0;i>a;)switch(h=b[a++]){case"m":h=b[a++]*c+d,j=b[a++]*c,e.moveTo(h,j);break;case"l":h=b[a++]*c+d,j=b[a++]*c,e.lineTo(h,j);break;case"q":if(h=b[a++]*c+d,j=b[a++]*c,m=b[a++]*c+d,n=b[a++]*c,e.quadraticCurveTo(m,n,h,j),f=q[q.length-1])for(k=f.x,l=f.y,f=1,g=this.divisions;g>=f;f++){var s=f/g;THREE.Shape.Utils.b2(s,k,m,h),THREE.Shape.Utils.b2(s,l,n,j)}break;case"b":if(h=b[a++]*c+d,j=b[a++]*c,m=b[a++]*c+d,n=b[a++]*-c,o=b[a++]*c+d,p=b[a++]*-c,e.bezierCurveTo(h,j,m,n,o,p),f=q[q.length-1])for(k=f.x,l=f.y,f=1,g=this.divisions;g>=f;f++)s=f/g,THREE.Shape.Utils.b3(s,k,m,o,h),THREE.Shape.Utils.b3(s,l,n,p,j)}return{offset:r.ha*c,path:e}}}},THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";for(THREE.FontUtils.size=void 0!==b.size?b.size:100,THREE.FontUtils.divisions=c,THREE.FontUtils.face=d,THREE.FontUtils.weight=e,THREE.FontUtils.style=f,c=THREE.FontUtils.drawText(a).paths,d=[],e=0,f=c.length;f>e;e++)Array.prototype.push.apply(d,c[e].toShapes());return d},function(a){var b=function(a){for(var b=a.length,c=0,d=b-1,e=0;b>e;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c};return a.Triangulate=function(a,c){var d=a.length;if(3>d)return null;var e,f,g,h=[],i=[],j=[];if(0<b(a))for(f=0;d>f;f++)i[f]=f;else for(f=0;d>f;f++)i[f]=d-1-f;var k=2*d;for(f=d-1;d>2;){if(0>=k--){console.log("Warning, unable to triangulate polygon!");break}e=f,e>=d&&(e=0),f=e+1,f>=d&&(f=0),g=f+1,g>=d&&(g=0);var l;a:{var m=l=void 0,n=void 0,o=void 0,p=void 0,q=void 0,r=void 0,s=void 0,t=void 0,m=a[i[e]].x,n=a[i[e]].y,o=a[i[f]].x,p=a[i[f]].y,q=a[i[g]].x,r=a[i[g]].y;if(1e-10>(o-m)*(r-n)-(p-n)*(q-m))l=!1;else{var u=void 0,v=void 0,w=void 0,x=void 0,y=void 0,z=void 0,A=void 0,B=void 0,C=void 0,D=void 0,C=B=A=t=s=void 0,u=q-o,v=r-p,w=m-q,x=n-r,y=o-m,z=p-n;for(l=0;d>l;l++)if(s=a[i[l]].x,t=a[i[l]].y,!(s===m&&t===n||s===o&&t===p||s===q&&t===r)&&(A=s-m,B=t-n,C=s-o,D=t-p,s-=q,t-=r,C=u*D-v*C,A=y*B-z*A,B=w*t-x*s,C>=-1e-10&&B>=-1e-10&&A>=-1e-10)){l=!1;break a}l=!0}}if(l){for(h.push([a[i[e]],a[i[f]],a[i[g]]]),j.push([i[e],i[f],i[g]]),e=f,g=f+1;d>g;e++,g++)i[e]=i[g];d--,k=2*d}}return c?j:h},a.Triangulate.area=b,a}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(a){return a=this.getUtoTmapping(a),this.getPoint(a)},THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPoint(b/a));return c},THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPointAt(b/a));return c},THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},THREE.Curve.prototype.getLengths=function(a){if(a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b,c,d=[],e=this.getPoint(0),f=0;for(d.push(0),c=1;a>=c;c++)b=this.getPoint(c/a),f+=b.distanceTo(e),d.push(f),e=b;return this.cacheArcLengths=d},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(a,b){var c,d=this.getLengths(),e=0,f=d.length;c=b?b:a*d[f-1];for(var g,h=0,i=f-1;i>=h;)if(e=Math.floor(h+(i-h)/2),g=d[e]-c,0>g)h=e+1;else{if(!(g>0)){i=e;break}i=e-1}return e=i,d[e]==c?e/(f-1):(h=d[e],d=(e+(c-h)/(d[e+1]-h))/(f-1))},THREE.Curve.prototype.getTangent=function(a){var b=a-1e-4;return a+=1e-4,0>b&&(b=0),a>1&&(a=1),b=this.getPoint(b),this.getPoint(a).clone().sub(b).normalize()},THREE.Curve.prototype.getTangentAt=function(a){return a=this.getUtoTmapping(a),this.getTangent(a)},THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a),d=.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}},THREE.Curve.create=function(a,b){return a.prototype=Object.create(THREE.Curve.prototype),a.prototype.getPoint=b,a},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(a){this.curves.push(a)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null},THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a,b=[],c=0,d=this.curves.length;for(a=0;d>a;a++)c+=this.curves[a].getLength(),b.push(c);return this.cacheLengths=b},THREE.CurvePath.prototype.getBoundingBox=function(){var a,b,c,d,e,f,g=this.getPoints();a=b=Number.NEGATIVE_INFINITY,d=e=Number.POSITIVE_INFINITY;var h,i,j,k,l=g[0]instanceof THREE.Vector3;for(k=l?new THREE.Vector3:new THREE.Vector2,i=0,j=g.length;j>i;i++)h=g[i],h.x>a?a=h.x:h.x<d&&(d=h.x),h.y>b?b=h.y:h.y<e&&(e=h.y),l&&(h.z>c?c=h.z:h.z<f&&(f=h.z)),k.add(h);return g={minX:d,minY:e,maxX:a,maxY:b,centroid:k.divideScalar(j)},l&&(g.maxZ=c,g.minZ=f),g},THREE.CurvePath.prototype.createPointsGeometry=function(a){return a=this.getPoints(a,!0),this.createGeometry(a)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return a=this.getSpacedPoints(a,!0),this.createGeometry(a)},THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b},THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c,d,e=this.getPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c,d,e=this.getSpacedPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c,d,e,f,g,h,i=this.getBoundingBox();for(c=0,d=a.length;d>c;c++)e=a[c],f=e.x,g=e.y,h=f/i.maxX,h=b.getUtoTmapping(h,f),f=b.getPoint(h),h=b.getTangent(h),h.set(-h.y,h.x).multiplyScalar(g),e.x=f.x+h.x,e.y=f.y+h.y;return a},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;c>b;b++)this.children[b].updateMatrixWorld(a)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(a){THREE.CurvePath.call(this),this.actions=[],a&&this.fromPoints(a)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;c>b;b++)this.lineTo(a[b].x,a[b].y)},THREE.Path.prototype.moveTo=function(){var a=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:a})},THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d),this.actions.push({action:THREE.PathActions.LINE_TO,args:c})},THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})},THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})},THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a),c=new THREE.SplineCurve(c),this.curves.push(c),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})},THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)},THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)},THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i),i=i.getPoint(1),h.push(i.x),h.push(i.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})},THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;a>c;c++)b.push(this.getPoint(c/a));return b},THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c,d,e,f,g,h,i,j,k,l,m,n,o,p=[];for(c=0,d=this.actions.length;d>c;c++)switch(e=this.actions[c],f=e.action,e=e.args,f){case THREE.PathActions.MOVE_TO:p.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.LINE_TO:p.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(g=e[2],h=e[3],k=e[0],l=e[1],0<p.length?(f=p[p.length-1],m=f.x,n=f.y):(f=this.actions[c-1].args,m=f[f.length-2],n=f[f.length-1]),e=1;a>=e;e++)o=e/a,f=THREE.Shape.Utils.b2(o,m,k,g),o=THREE.Shape.Utils.b2(o,n,l,h),p.push(new THREE.Vector2(f,o));break;case THREE.PathActions.BEZIER_CURVE_TO:for(g=e[4],h=e[5],k=e[0],l=e[1],i=e[2],j=e[3],0<p.length?(f=p[p.length-1],m=f.x,n=f.y):(f=this.actions[c-1].args,m=f[f.length-2],n=f[f.length-1]),e=1;a>=e;e++)o=e/a,f=THREE.Shape.Utils.b3(o,m,k,i,g),o=THREE.Shape.Utils.b3(o,n,l,j,h),p.push(new THREE.Vector2(f,o));break;case THREE.PathActions.CSPLINE_THRU:for(f=this.actions[c-1].args,o=[new THREE.Vector2(f[f.length-2],f[f.length-1])],f=a*e[0].length,o=o.concat(e[0]),o=new THREE.SplineCurve(o),e=1;f>=e;e++)p.push(o.getPointAt(e/f));break;case THREE.PathActions.ARC:for(g=e[0],h=e[1],l=e[2],i=e[3],f=e[4],k=!!e[5],m=f-i,n=2*a,e=1;n>=e;e++)o=e/n,k||(o=1-o),o=i+o*m,f=g+l*Math.cos(o),o=h+l*Math.sin(o),p.push(new THREE.Vector2(f,o));break;case THREE.PathActions.ELLIPSE:for(g=e[0],h=e[1],l=e[2],j=e[3],i=e[4],f=e[5],k=!!e[6],m=f-i,n=2*a,e=1;n>=e;e++)o=e/n,k||(o=1-o),o=i+o*m,f=g+l*Math.cos(o),o=h+j*Math.sin(o),p.push(new THREE.Vector2(f,o))}return c=p[p.length-1],1e-10>Math.abs(c.x-p[0].x)&&1e-10>Math.abs(c.y-p[0].y)&&p.splice(p.length-1,1),b&&p.push(p[0]),p},THREE.Path.prototype.toShapes=function(a){function b(a,b){for(var c=b.length,d=!1,e=c-1,f=0;c>f;e=f++){var g=b[e],h=b[f],i=h.x-g.x,j=h.y-g.y;if(1e-10<Math.abs(j)){if(0>j&&(g=b[f],i=-i,h=b[e],j=-j),!(a.y<g.y||a.y>h.y))if(a.y==g.y){if(a.x==g.x)return!0}else{if(e=j*(a.x-g.x)-i*(a.y-g.y),0==e)return!0;0>e||(d=!d)}}else if(a.y==g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=h.x))return!0}return d}var c,d,e,f,g=[],h=new THREE.Path;for(c=0,d=this.actions.length;d>c;c++)e=this.actions[c],f=e.args,e=e.action,e==THREE.PathActions.MOVE_TO&&0!=h.actions.length&&(g.push(h),h=new THREE.Path),h[e].apply(h,f);if(0!=h.actions.length&&g.push(h),0==g.length)return[];var i,j,k;if(f=[],1==g.length)return j=g[0],k=new THREE.Shape,k.actions=j.actions,k.curves=j.curves,f.push(k),f;var l=!THREE.Shape.Utils.isClockWise(g[0].getPoints()),l=a?!l:l;k=[],h=[],e=[];var m,n=0;for(h[n]=void 0,e[n]=[],c=0,d=g.length;d>c;c++)j=g[c],m=j.getPoints(),i=THREE.Shape.Utils.isClockWise(m),(i=a?!i:i)?(!l&&h[n]&&n++,h[n]={s:new THREE.Shape,p:m},h[n].s.actions=j.actions,h[n].s.curves=j.curves,l&&n++,e[n]=[]):e[n].push({h:j,p:m[0]});if(1<h.length){for(c=!1,d=[],a=0,g=h.length;g>a;a++)k[a]=[];for(a=0,g=h.length;g>a;a++)for(j=e[a],i=0;i<j.length;i++){for(l=j[i],n=!0,m=0;m<h.length;m++)b(l.p,h[m].p)&&(a!=m&&d.push({froms:a,tos:m,hole:i}),n?(n=!1,k[m].push(l)):c=!0);n&&k[a].push(l)}0<d.length&&(c||(e=k))}for(c=0,d=h.length;d>c;c++)for(k=h[c].s,f.push(k),a=e[c],g=0,j=a.length;j>g;g++)k.holes.push(a[g].h);return f},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)},THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)},THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},THREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,i=e.x-d.x,j=e.y-d.y,k=a.x-d.x,l=a.y-d.y,m=h*i-g*j,n=h*k-g*l;if(1e-10<Math.abs(m)){if(m>0){if(0>n||n>m)return[];if(i=j*k-i*l,0>i||i>m)return[]}else{if(n>0||m>n)return[];if(i=j*k-i*l,i>0||m>i)return[]}return 0==i?!f||0!=n&&n!=m?[a]:[]:i==m?!f||0!=n&&n!=m?[b]:[]:0==n?[d]:n==m?[e]:(f=i/m,[{x:a.x+f*g,y:a.y+f*h}])}return 0!=n||j*k!=i*l?[]:(h=0==g&&0==h,i=0==i&&0==j,h&&i?a.x!=d.x||a.y!=d.y?[]:[a]:h?c(d,e,a)?[a]:[]:i?c(a,b,d)?[d]:[]:(0!=g?(a.x<b.x?(g=a,i=a.x,h=b,a=b.x):(g=b,i=b.x,h=a,a=a.x),d.x<e.x?(b=d,m=d.x,j=e,d=e.x):(b=e,m=e.x,j=d,d=d.x)):(a.y<b.y?(g=a,i=a.y,h=b,a=b.y):(g=b,i=b.y,h=a,a=a.y),d.y<e.y?(b=d,m=d.y,j=e,d=e.y):(b=e,m=e.y,j=d,d=d.y)),m>=i?m>a?[]:a==m?f?[]:[b]:d>=a?[b,h]:[b,j]:i>d?[]:i==d?f?[]:[g]:d>=a?[g,h]:[g,j]))}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x,c=c.y-a.y;var g=d.x-a.x;return d=d.y-a.y,a=e*c-f*b,e=e*d-f*g,1e-10<Math.abs(a)?(b=g*c-d*b,a>0?e>=0&&b>=0:e>=0||b>=0):e>0}var f,g,h,i,j,k={};for(h=a.concat(),f=0,g=b.length;g>f;f++)Array.prototype.push.apply(h,b[f]);for(f=0,g=h.length;g>f;f++)j=h[f].x+":"+h[f].y,void 0!==k[j]&&console.log("Duplicate point",j),k[j]=f;f=function(a,b){function c(a,b){var c=q.length-1,d=a-1;0>d&&(d=c);var f=a+1;return f>c&&(f=0),(c=e(q[a],q[d],q[f],h[b]))?(c=h.length-1,d=b-1,0>d&&(d=c),f=b+1,f>c&&(f=0),(c=e(h[b],h[d],h[f],q[a]))?!0:!1):!1}function f(a,b){var c,e;for(c=0;c<q.length;c++)if(e=c+1,e%=q.length,e=d(a,b,q[c],q[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,g,h;for(e=0;e<r.length;e++)for(f=b[r[e]],g=0;g<f.length;g++)if(h=g+1,h%=f.length,h=d(a,c,f[g],f[h],!0),0<h.length)return!0;return!1}var h,i,j,k,l,m,n,o,p,q=a.concat(),r=[],s=[],t=0;for(i=b.length;i>t;t++)r.push(t);for(var u=2*r.length;0<r.length;){if(u--,0>u){console.log("Infinite Loop! Holes left:"+r.length+", Probably Hole outside Shape!");break}for(j=0;j<q.length;j++){for(k=q[j],i=-1,t=0;t<r.length;t++)if(l=r[t],m=k.x+":"+k.y+":"+l,void 0===s[m]){for(h=b[l],n=0;n<h.length;n++)if(l=h[n],c(j,n)&&!f(k,l)&&!g(k,l)){i=n,r.splice(t,1),l=q.slice(0,j+1),n=q.slice(j),o=h.slice(i),p=h.slice(0,i+1),q=l.concat(o).concat(p).concat(n);break}if(i>=0)break;s[m]=!0}if(i>=0)break}}return q}(a,b);var l=THREE.FontUtils.Triangulate(f,!1);for(f=0,g=l.length;g>f;f++)for(i=l[f],h=0;3>h;h++)j=i[h].x+":"+i[h].y,j=k[j],void 0!==j&&(i[h]=j);return l.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}},THREE.LineCurve=function(a,b){this.v1=a,this.v2=b},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);return b.multiplyScalar(a).add(this.v1),b},THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(b,a)},THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;return b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x),a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y),b=new THREE.Vector2(b,a),b.normalize(),b},THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(b,a)},THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;return b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),b=new THREE.Vector2(b,a),b.normalize(),b},THREE.SplineCurve=function(a){this.points=void 0==a?[]:a},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(a){var b,c=new THREE.Vector2,d=[],e=this.points;return b=(e.length-1)*a,a=Math.floor(b),b-=a,d[0]=0==a?a:a-1,d[1]=a,d[2]=a>e.length-2?e.length-1:a+1,d[3]=a>e.length-3?e.length-1:a+2,c.x=THREE.Curve.Utils.interpolate(e[d[0]].x,e[d[1]].x,e[d[2]].x,e[d[3]].x,b),c.y=THREE.Curve.Utils.interpolate(e[d[0]].y,e[d[1]].y,e[d[2]].y,e[d[3]].y,b),c},THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(a){var b;return b=this.aEndAngle-this.aStartAngle,0>b&&(b+=2*Math.PI),b>2*Math.PI&&(b-=2*Math.PI),b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b,a=this.aX+this.xRadius*Math.cos(b),b=this.aY+this.yRadius*Math.sin(b),new THREE.Vector2(a,b)},THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a,this.v2=b},function(a){var b=new THREE.Vector3;return b.subVectors(this.v2,this.v1),b.multiplyScalar(a),b.add(this.v1),b}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c
},function(a){var b,c;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(b,c,a)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},function(a){var b,c;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(b,c,a)}),THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b,c=new THREE.Vector3,d=[],e=this.points;a*=e.length-1,b=Math.floor(a),a-=b,d[0]=0==b?b:b-1,d[1]=b,d[2]=b>e.length-2?e.length-1:b+1,d[3]=b>e.length-3?e.length-1:b+2,b=e[d[0]];var f=e[d[1]],g=e[d[2]],d=e[d[3]];return c.x=THREE.Curve.Utils.interpolate(b.x,f.x,g.x,d.x,a),c.y=THREE.Curve.Utils.interpolate(b.y,f.y,g.y,d.y,a),c.z=THREE.Curve.Utils.interpolate(b.z,f.z,g.z,d.z,a),c}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b,c=new THREE.Vector3,d=[],e=this.points;return b=(e.length-0)*a,a=Math.floor(b),b-=a,a+=a>0?0:(Math.floor(Math.abs(a)/e.length)+1)*e.length,d[0]=(a-1)%e.length,d[1]=a%e.length,d[2]=(a+1)%e.length,d[3]=(a+2)%e.length,c.x=THREE.Curve.Utils.interpolate(e[d[0]].x,e[d[1]].x,e[d[2]].x,e[d[3]].x,b),c.y=THREE.Curve.Utils.interpolate(e[d[0]].y,e[d[1]].y,e[d[2]].y,e[d[3]].y,b),c.z=THREE.Curve.Utils.interpolate(e[d[0]].z,e[d[1]].z,e[d[2]].z,e[d[3]].z,b),c}),THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b),-1!==b&&a.splice(b,1)},add:function(a){if(void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting."),b[a.name]=a,!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var e=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(e[0],e[1],e[2],e[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){for(e={},d=0;d<a.hierarchy[c].keys.length;d++)for(var f=0;f<a.hierarchy[c].keys[d].morphTargets.length;f++){var g=a.hierarchy[c].keys[d].morphTargets[f];e[g]=-1}for(a.hierarchy[c].usedMorphTargets=e,d=0;d<a.hierarchy[c].keys.length;d++){var h={};for(g in e){for(f=0;f<a.hierarchy[c].keys[d].morphTargets.length;f++)if(a.hierarchy[c].keys[d].morphTargets[f]===g){h[g]=a.hierarchy[c].keys[d].morphTargetsInfluences[f];break}f===a.hierarchy[c].keys[d].morphTargets.length&&(h[g]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=h}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}a.initialized=!0}},get:function(a){return"string"==typeof a?b[a]?b[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null):void 0},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};return c.LINEAR=0,c.CATMULLROM=1,c.CATMULLROM_FORWARD=2,c}(),THREE.Animation=function(a,b){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=this.isPaused=!0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.play=function(a){this.currentTime=void 0!==a?a:0,!1===this.isPlaying&&(this.isPlaying=!0,this.reset(),this.update(0)),this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.reset=function(){for(var a=0,b=this.hierarchy.length;b>a;a++){var c=this.hierarchy[a];c.matrixAutoUpdate=!0,void 0===c.animationCache&&(c.animationCache={},c.animationCache.prevKey={pos:0,rot:0,scl:0},c.animationCache.nextKey={pos:0,rot:0,scl:0},c.animationCache.originalMatrix=c instanceof THREE.Bone?c.skinMatrix:c.matrix);var d=c.animationCache.prevKey,c=c.animationCache.nextKey;d.pos=this.data.hierarchy[a].keys[0],d.rot=this.data.hierarchy[a].keys[0],d.scl=this.data.hierarchy[a].keys[0],c.pos=this.getNextKeyWith("pos",a,1),c.rot=this.getNextKeyWith("rot",a,1),c.scl=this.getNextKeyWith("scl",a,1)}},THREE.Animation.prototype.update=function(){var a=[],b=new THREE.Vector3,c=function(a,b){var c,e,f,g,h,i,j=[],k=[];return c=(a.length-1)*b,e=Math.floor(c),c-=e,j[0]=0===e?e:e-1,j[1]=e,j[2]=e>a.length-2?e:e+1,j[3]=e>a.length-3?e:e+2,e=a[j[0]],g=a[j[1]],h=a[j[2]],i=a[j[3]],j=c*c,f=c*j,k[0]=d(e[0],g[0],h[0],i[0],c,j,f),k[1]=d(e[1],g[1],h[1],i[1],c,j,f),k[2]=d(e[2],g[2],h[2],i[2],c,j,f),k},d=function(a,b,c,d,e,f,g){return a=.5*(c-a),d=.5*(d-b),(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};return function(d){if(!1!==this.isPlaying){this.currentTime+=d*this.timeScale;var e;d=["pos","rot","scl"];var f=this.data.length;if(!0===this.loop&&this.currentTime>f)this.currentTime%=f,this.reset();else if(!1===this.loop&&this.currentTime>f)return void this.stop();this.currentTime=Math.min(this.currentTime,f);for(var f=0,g=this.hierarchy.length;g>f;f++)for(var h=this.hierarchy[f],i=h.animationCache,j=0;3>j;j++){e=d[j];var k=i.prevKey[e],l=i.nextKey[e];if(l.time<=this.currentTime){for(k=this.data.hierarchy[f].keys[0],l=this.getNextKeyWith(e,f,1);l.time<this.currentTime&&l.index>k.index;)k=l,l=this.getNextKeyWith(e,f,l.index+1);i.prevKey[e]=k,i.nextKey[e]=l}h.matrixAutoUpdate=!0,h.matrixWorldNeedsUpdate=!0;var m=(this.currentTime-k.time)/(l.time-k.time),n=k[e],o=l[e];0>m&&(m=0),m>1&&(m=1),"pos"===e?(e=h.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(e.x=n[0]+(o[0]-n[0])*m,e.y=n[1]+(o[1]-n[1])*m,e.z=n[2]+(o[2]-n[2])*m):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(a[0]=this.getPrevKeyWith("pos",f,k.index-1).pos,a[1]=n,a[2]=o,a[3]=this.getNextKeyWith("pos",f,l.index+1).pos,m=.33*m+.33,k=c(a,m),e.x=k[0],e.y=k[1],e.z=k[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(m=c(a,1.01*m),b.set(m[0],m[1],m[2]),b.sub(e),b.y=0,b.normalize(),e=Math.atan2(b.x,b.z),h.rotation.set(0,e,0)))):"rot"===e?THREE.Quaternion.slerp(n,o,h.quaternion,m):"scl"===e&&(e=h.scale,e.x=n[0]+(o[0]-n[0])*m,e.y=n[1]+(o[1]-n[1])*m,e.z=n[2]+(o[2]-n[2])*m)}}}}(),THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]},THREE.KeyFrameAnimation=function(a,b){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.loop=this.isPaused=!0;for(var c=0,d=this.hierarchy.length;d>c;c++){var e=this.data.hierarchy[c].sids,f=this.hierarchy[c];if(this.data.hierarchy[c].keys.length&&e){for(var g=0;g<e.length;g++){var h=e[g],i=this.getNextKeyWith(h,c,0);i&&i.apply(h)}f.matrixAutoUpdate=!1,this.data.hierarchy[c].node.updateMatrix(),f.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(a){if(this.currentTime=void 0!==a?a:0,!1===this.isPlaying){this.isPlaying=!0;var b,c,d=this.hierarchy.length;for(a=0;d>a;a++)b=this.hierarchy[a],c=this.data.hierarchy[a],void 0===c.animationCache&&(c.animationCache={},c.animationCache.prevKey=null,c.animationCache.nextKey=null,c.animationCache.originalMatrix=b instanceof THREE.Bone?b.skinMatrix:b.matrix),b=this.data.hierarchy[a].keys,b.length&&(c.animationCache.prevKey=b[0],c.animationCache.nextKey=b[1],this.startTime=Math.min(b[0].time,this.startTime),this.endTime=Math.max(b[b.length-1].time,this.endTime));this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d),delete c.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(a){if(!1!==this.isPlaying){this.currentTime+=a*this.timeScale,a=this.data.length,!0===this.loop&&this.currentTime>a&&(this.currentTime%=a),this.currentTime=Math.min(this.currentTime,a),a=0;for(var b=this.hierarchy.length;b>a;a++){var c=this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var f=d.prevKey,g=d.nextKey;if(g.time<=this.currentTime){for(;g.time<this.currentTime&&g.index>f.index;)f=g,g=e[f.index+1];d.prevKey=f,d.nextKey=g}g.time>=this.currentTime?f.interpolate(g,this.currentTime):f.interpolate(g,g.time),this.data.hierarchy[a].node.updateMatrix(),c.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){for(b=this.data.hierarchy[b].keys,c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){for(b=this.data.hierarchy[b].keys,c=c>=0?c:c+b.length;c>=0;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]},THREE.MorphAnimation=function(a){this.mesh=a,this.frames=a.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var a=0,b=0;return function(c){if(!1!==this.isPlaying){this.currentTime+=c,!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration),c=this.duration/this.frames;var d=Math.floor(this.currentTime/c);d!=b&&(this.mesh.morphTargetInfluences[a]=0,this.mesh.morphTargetInfluences[b]=1,this.mesh.morphTargetInfluences[d]=0,a=b,b=d),this.mesh.morphTargetInfluences[d]=this.currentTime%c/c,this.mesh.morphTargetInfluences[a]=1-this.mesh.morphTargetInfluences[d]}}}()},THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0),d.lookAt(new THREE.Vector3(1,0,0)),this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0),e.lookAt(new THREE.Vector3(-1,0,0)),this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1),f.lookAt(new THREE.Vector3(0,1,0)),this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1),g.lookAt(new THREE.Vector3(0,-1,0)),this.add(g);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,1)),this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(0,0,-1)),this.add(i),this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(a,b){var c=this.renderTarget,j=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,d,c),c.activeCubeFace=1,a.render(b,e,c),c.activeCubeFace=2,a.render(b,f,c),c.activeCubeFace=3,a.render(b,g,c),c.activeCubeFace=4,a.render(b,h,c),c.generateMipmaps=j,c.activeCubeFace=5,a.render(b,i,c)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this),this.fov=c,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2,this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g),this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a,this.cameraO.right=a,this.cameraO.top=b,this.cameraO.bottom=-b,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2},THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));return this.setFov(c),c},THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.BoxGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,i){var j,k=h.widthSegments,l=h.heightSegments,m=e/2,n=f/2,o=h.vertices.length;"x"===a&&"y"===b||"y"===a&&"x"===b?j="z":"x"===a&&"z"===b||"z"===a&&"x"===b?(j="y",l=h.depthSegments):("z"===a&&"y"===b||"y"===a&&"z"===b)&&(j="x",k=h.depthSegments);var p=k+1,q=l+1,r=e/k,s=f/l,t=new THREE.Vector3;for(t[j]=g>0?1:-1,e=0;q>e;e++)for(f=0;p>f;f++){var u=new THREE.Vector3;u[a]=(f*r-m)*c,u[b]=(e*s-n)*d,u[j]=g,h.vertices.push(u)}for(e=0;l>e;e++)for(f=0;k>f;f++)n=f+p*e,a=f+p*(e+1),b=f+1+p*(e+1),c=f+1+p*e,d=new THREE.Vector2(f/k,1-e/l),g=new THREE.Vector2(f/k,1-(e+1)/l),j=new THREE.Vector2((f+1)/k,1-(e+1)/l),m=new THREE.Vector2((f+1)/k,1-e/l),n=new THREE.Face3(n+o,a+o,c+o),n.normal.copy(t),n.vertexNormals.push(t.clone(),t.clone(),t.clone()),n.materialIndex=i,h.faces.push(n),h.faceVertexUvs[0].push([d,g,m]),n=new THREE.Face3(a+o,b+o,c+o),n.normal.copy(t),n.vertexNormals.push(t.clone(),t.clone(),t.clone()),n.materialIndex=i,h.faces.push(n),h.faceVertexUvs[0].push([g.clone(),j,m.clone()])}THREE.Geometry.call(this);var h=this;this.width=a,this.height=b,this.depth=c,this.widthSegments=d||1,this.heightSegments=e||1,this.depthSegments=f||1,a=this.width/2,b=this.height/2,c=this.depth/2,g("z","y",-1,-1,this.depth,this.height,a,0),g("z","y",1,-1,this.depth,this.height,-a,1),g("x","z",1,1,this.width,this.depth,b,2),g("x","z",1,-1,this.width,this.depth,-b,3),g("x","y",1,-1,this.width,this.height,c,4),g("x","y",-1,-1,this.width,this.height,-c,5),this.computeCentroids(),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.radius=a=a||50,this.segments=b=void 0!==b?Math.max(3,b):8,this.thetaStart=c=void 0!==c?c:0,this.thetaLength=d=void 0!==d?d:2*Math.PI;var e,f=[];e=new THREE.Vector3;var g=new THREE.Vector2(.5,.5);for(this.vertices.push(e),f.push(g),e=0;b>=e;e++){var h=new THREE.Vector3,i=c+e/b*d;h.x=a*Math.cos(i),h.y=a*Math.sin(i),this.vertices.push(h),f.push(new THREE.Vector2((h.x/a+1)/2,(h.y/a+1)/2))}for(c=new THREE.Vector3(0,0,1),e=1;b>=e;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([f[e].clone(),f[e+1].clone(),g.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=THREE.BoxGeometry,THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),this.radiusTop=a=void 0!==a?a:20,this.radiusBottom=b=void 0!==b?b:20,this.height=c=void 0!==c?c:100,this.radialSegments=d=d||8,this.heightSegments=e=e||1,this.openEnded=f=void 0!==f?f:!1;var g,h,i=c/2,j=[],k=[];for(h=0;e>=h;h++){var l=[],m=[],n=h/e,o=n*(b-a)+a;for(g=0;d>=g;g++){var p=g/d,q=new THREE.Vector3;q.x=o*Math.sin(p*Math.PI*2),q.y=-n*c+i,q.z=o*Math.cos(p*Math.PI*2),this.vertices.push(q),l.push(this.vertices.length-1),m.push(new THREE.Vector2(p,1-n))}j.push(l),k.push(m)}for(c=(b-a)/c,g=0;d>g;g++)for(0!==a?(l=this.vertices[j[0][g]].clone(),m=this.vertices[j[0][g+1]].clone()):(l=this.vertices[j[1][g]].clone(),m=this.vertices[j[1][g+1]].clone()),l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*c).normalize(),m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize(),h=0;e>h;h++){var n=j[h][g],o=j[h+1][g],p=j[h+1][g+1],q=j[h][g+1],r=l.clone(),s=l.clone(),t=m.clone(),u=m.clone(),v=k[h][g].clone(),w=k[h+1][g].clone(),x=k[h+1][g+1].clone(),y=k[h][g+1].clone();this.faces.push(new THREE.Face3(n,o,q,[r,s,u])),this.faceVertexUvs[0].push([v,w,y]),this.faces.push(new THREE.Face3(o,p,q,[s.clone(),t,u.clone()])),this.faceVertexUvs[0].push([w.clone(),x,y.clone()])}if(!1===f&&a>0)for(this.vertices.push(new THREE.Vector3(0,i,0)),g=0;d>g;g++)n=j[0][g],o=j[0][g+1],p=this.vertices.length-1,r=new THREE.Vector3(0,1,0),s=new THREE.Vector3(0,1,0),t=new THREE.Vector3(0,1,0),v=k[0][g].clone(),w=k[0][g+1].clone(),x=new THREE.Vector2(w.x,0),this.faces.push(new THREE.Face3(n,o,p,[r,s,t])),this.faceVertexUvs[0].push([v,w,x]);if(!1===f&&b>0)for(this.vertices.push(new THREE.Vector3(0,-i,0)),g=0;d>g;g++)n=j[h][g+1],o=j[h][g],p=this.vertices.length-1,r=new THREE.Vector3(0,-1,0),s=new THREE.Vector3(0,-1,0),t=new THREE.Vector3(0,-1,0),v=k[h][g+1].clone(),w=k[h][g].clone(),x=new THREE.Vector2(w.x,1),this.faces.push(new THREE.Face3(n,o,p,[r,s,t])),this.faceVertexUvs[0].push([v,w,x]);this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(a,b){"undefined"!=typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;c>d;d++)this.addShape(a[d],b)},THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){return b||console.log("die"),b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=THREE.Math.sign,e=1,e=a.x-b.x,f=a.y-b.y,g=c.x-a.x,h=c.y-a.y,i=e*e+f*f;if(1e-10<Math.abs(e*h-f*g)){var j=Math.sqrt(i),d=Math.sqrt(g*g+h*h),i=b.x-f/j;if(b=b.y+e/j,g=((c.x-h/d-i)*h-(c.y+g/d-b)*g)/(e*h-f*g),c=i+e*g-a.x,a=b+f*g-a.y,e=c*c+a*a,2>=e)return new THREE.Vector2(c,a);e=Math.sqrt(e/2)}else a=!1,e>1e-10?g>1e-10&&(a=!0):-1e-10>e?-1e-10>g&&(a=!0):d(f)==d(h)&&(a=!0),a?(c=-f,a=e,e=Math.sqrt(i)):(c=e,a=f,e=Math.sqrt(i/2));return new THREE.Vector2(c/e,a/e)}function e(c,d){var e,f;for(O=c.length;0<=--O;){e=O,f=O-1,0>f&&(f=c.length-1);for(var g=0,h=s+2*p,g=0;h>g;g++){var i=M*g,j=M*(g+1),k=d+e+i,i=d+f+i,l=d+f+j,j=d+e+j,m=c,n=g,o=h,q=e,r=f,k=k+C,i=i+C,l=l+C,j=j+C;B.faces.push(new THREE.Face3(k,i,j,null,null,w)),B.faces.push(new THREE.Face3(i,l,j,null,null,w)),k=x.generateSideWallUV(B,a,m,b,k,i,l,j,n,o,q,r),B.faceVertexUvs[0].push([k[0],k[1],k[3]]),B.faceVertexUvs[0].push([k[1],k[2],k[3]])}}}function f(a,b,c){B.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=C,d+=C,e+=C,B.faces.push(new THREE.Face3(c,d,e,null,null,v)),c=f?x.generateBottomUV(B,a,b,c,d,e):x.generateTopUV(B,a,b,c,d,e),B.faceVertexUvs[0].push(c)}var h,i,j,k,l,m=void 0!==b.amount?b.amount:100,n=void 0!==b.bevelThickness?b.bevelThickness:6,o=void 0!==b.bevelSize?b.bevelSize:n-2,p=void 0!==b.bevelSegments?b.bevelSegments:3,q=void 0!==b.bevelEnabled?b.bevelEnabled:!0,r=void 0!==b.curveSegments?b.curveSegments:12,s=void 0!==b.steps?b.steps:1,t=b.extrudePath,u=!1,v=b.material,w=b.extrudeMaterial,x=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;t&&(h=t.getSpacedPoints(s),u=!0,q=!1,i=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(t,s,!1),j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3),q||(o=n=p=0);var y,z,A,B=this,C=this.vertices.length,t=a.extractPoints(r),r=t.shape,D=t.holes;if(t=!THREE.Shape.Utils.isClockWise(r)){for(r=r.reverse(),z=0,A=D.length;A>z;z++)y=D[z],THREE.Shape.Utils.isClockWise(y)&&(D[z]=y.reverse());t=!1}var E=THREE.Shape.Utils.triangulateShape(r,D),F=r;for(z=0,A=D.length;A>z;z++)y=D[z],r=r.concat(y);var G,H,I,J,K,L,M=r.length,N=E.length,t=[],O=0;for(I=F.length,G=I-1,H=O+1;I>O;O++,G++,H++)G===I&&(G=0),H===I&&(H=0),t[O]=d(F[O],F[G],F[H]);var P,Q=[],R=t.concat();for(z=0,A=D.length;A>z;z++){for(y=D[z],P=[],O=0,I=y.length,G=I-1,H=O+1;I>O;O++,G++,H++)G===I&&(G=0),H===I&&(H=0),P[O]=d(y[O],y[G],y[H]);Q.push(P),R=R.concat(P)}for(G=0;p>G;G++){for(I=G/p,J=n*(1-I),H=o*Math.sin(I*Math.PI/2),O=0,I=F.length;I>O;O++)K=c(F[O],t[O],H),f(K.x,K.y,-J);for(z=0,A=D.length;A>z;z++)for(y=D[z],P=Q[z],O=0,I=y.length;I>O;O++)K=c(y[O],P[O],H),f(K.x,K.y,-J)}for(H=o,O=0;M>O;O++)K=q?c(r[O],R[O],H):r[O],u?(k.copy(i.normals[0]).multiplyScalar(K.x),j.copy(i.binormals[0]).multiplyScalar(K.y),l.copy(h[0]).add(k).add(j),f(l.x,l.y,l.z)):f(K.x,K.y,0);for(I=1;s>=I;I++)for(O=0;M>O;O++)K=q?c(r[O],R[O],H):r[O],u?(k.copy(i.normals[I]).multiplyScalar(K.x),j.copy(i.binormals[I]).multiplyScalar(K.y),l.copy(h[I]).add(k).add(j),f(l.x,l.y,l.z)):f(K.x,K.y,m/s*I);for(G=p-1;G>=0;G--){for(I=G/p,J=n*(1-I),H=o*Math.sin(I*Math.PI/2),O=0,I=F.length;I>O;O++)K=c(F[O],t[O],H),f(K.x,K.y,m+J);for(z=0,A=D.length;A>z;z++)for(y=D[z],P=Q[z],O=0,I=y.length;I>O;O++)K=c(y[O],P[O],H),u?f(K.x,K.y+h[s-1].y,h[s-1].x+J):f(K.x,K.y,m+J)}!function(){if(q){var a;for(a=0*M,O=0;N>O;O++)L=E[O],g(L[2]+a,L[1]+a,L[0]+a,!0);for(a=s+2*p,a*=M,O=0;N>O;O++)L=E[O],g(L[0]+a,L[1]+a,L[2]+a,!1)}else{for(O=0;N>O;O++)L=E[O],g(L[2],L[1],L[0],!0);for(O=0;N>O;O++)L=E[O],g(L[0]+M*s,L[1]+M*s,L[2]+M*s,!1)}}(),function(){var a=0;for(e(F,a),a+=F.length,z=0,A=D.length;A>z;z++)y=D[z],e(y,a),a+=y.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){return b=a.vertices[e].x,e=a.vertices[e].y,c=a.vertices[f].x,f=a.vertices[f].y,[new THREE.Vector2(a.vertices[d].x,a.vertices[d].y),new THREE.Vector2(b,e),new THREE.Vector2(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h,i,j,k,l){b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[f].x,i=a.vertices[f].y,f=a.vertices[f].z,j=a.vertices[g].x,k=a.vertices[g].y,g=a.vertices[g].z,l=a.vertices[h].x;var m=a.vertices[h].y;return a=a.vertices[h].z,.01>Math.abs(c-i)?[new THREE.Vector2(b,1-e),new THREE.Vector2(d,1-f),new THREE.Vector2(j,1-g),new THREE.Vector2(l,1-a)]:[new THREE.Vector2(c,1-e),new THREE.Vector2(i,1-f),new THREE.Vector2(k,1-g),new THREE.Vector2(m,1-a)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this),!1==a instanceof Array&&(a=[a]),this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;d>c;c++)this.addShape(a[c],b);return this},THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c,d,e,f=b.material,g=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,h=this.vertices.length;c=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var i=c.shape,j=c.holes;if(!THREE.Shape.Utils.isClockWise(i))for(i=i.reverse(),c=0,d=j.length;d>c;c++)e=j[c],THREE.Shape.Utils.isClockWise(e)&&(j[c]=e.reverse());var k=THREE.Shape.Utils.triangulateShape(i,j);for(c=0,d=j.length;d>c;c++)e=j[c],i=i.concat(e);for(j=i.length,d=k.length,c=0;j>c;c++)e=i[c],this.vertices.push(new THREE.Vector3(e.x,e.y,0));for(c=0;d>c;c++)j=k[c],i=j[0]+h,e=j[1]+h,j=j[2]+h,this.faces.push(new THREE.Face3(i,e,j,null,null,f)),this.faceVertexUvs[0].push(g.generateBottomUV(this,a,b,i,e,j))},THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this),b=b||12,c=c||0,d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;h>=g;g++)for(var i=c+g*f*d,j=Math.cos(i),k=Math.sin(i),i=0,l=a.length;l>i;i++){var m=a[i],n=new THREE.Vector3;n.x=j*m.x-k*m.y,n.y=k*m.x+j*m.y,n.z=m.z,this.vertices.push(n)}for(c=a.length,g=0,h=b;h>g;g++)for(i=0,l=a.length-1;l>i;i++){b=k=i+c*g,d=k+c;var j=k+1+c,k=k+1,m=g*f,n=i*e,o=m+f,p=n+e;this.faces.push(new THREE.Face3(b,d,k)),this.faceVertexUvs[0].push([new THREE.Vector2(m,n),new THREE.Vector2(o,n),new THREE.Vector2(m,p)]),this.faces.push(new THREE.Face3(d,j,k)),this.faceVertexUvs[0].push([new THREE.Vector2(o,n),new THREE.Vector2(o,p),new THREE.Vector2(m,p)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.width=a,this.height=b,this.widthSegments=c||1,this.heightSegments=d||1;var e=a/2,f=b/2;c=this.widthSegments,d=this.heightSegments;var g=c+1,h=d+1,i=this.width/c,j=this.height/d,k=new THREE.Vector3(0,0,1);for(a=0;h>a;a++)for(b=0;g>b;b++)this.vertices.push(new THREE.Vector3(b*i-e,-(a*j-f),0));for(a=0;d>a;a++)for(b=0;c>b;b++){var l=b+g*a,e=b+g*(a+1),f=b+1+g*(a+1),h=b+1+g*a,i=new THREE.Vector2(b/c,1-a/d),j=new THREE.Vector2(b/c,1-(a+1)/d),m=new THREE.Vector2((b+1)/c,1-(a+1)/d),n=new THREE.Vector2((b+1)/c,1-a/d),l=new THREE.Face3(l,e,h);l.normal.copy(k),l.vertexNormals.push(k.clone(),k.clone(),k.clone()),this.faces.push(l),this.faceVertexUvs[0].push([i,j,n]),l=new THREE.Face3(e,f,h),l.normal.copy(k),l.vertexNormals.push(k.clone(),k.clone(),k.clone()),this.faces.push(l),this.faceVertexUvs[0].push([j.clone(),m,n.clone()])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),a=a||0,b=b||50,e=void 0!==e?e:0,f=void 0!==f?f:2*Math.PI,c=void 0!==c?Math.max(3,c):8,d=void 0!==d?Math.max(3,d):8;var g,h=[],i=a,j=(b-a)/d;for(a=0;d>=a;a++){for(g=0;c>=g;g++){var k=new THREE.Vector3,l=e+g/c*f;k.x=i*Math.cos(l),k.y=i*Math.sin(l),this.vertices.push(k),h.push(new THREE.Vector2((k.x/b+1)/2,(k.y/b+1)/2))}i+=j}for(b=new THREE.Vector3(0,0,1),a=0;d>a;a++)for(e=a*c,g=0;c>=g;g++)l=g+e,f=l+a,j=l+c+a,k=l+c+1+a,this.faces.push(new THREE.Face3(f,j,k,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[j].clone(),h[k].clone()]),f=l+a,j=l+c+1+a,k=l+1+a,this.faces.push(new THREE.Face3(f,j,k,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[j].clone(),h[k].clone()]);this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this),this.radius=a=a||50,this.widthSegments=b=Math.max(3,Math.floor(b)||8),this.heightSegments=c=Math.max(2,Math.floor(c)||6),this.phiStart=d=void 0!==d?d:0,this.phiLength=e=void 0!==e?e:2*Math.PI,this.thetaStart=f=void 0!==f?f:0,this.thetaLength=g=void 0!==g?g:Math.PI;var h,i,j=[],k=[];for(i=0;c>=i;i++){var l=[],m=[];for(h=0;b>=h;h++){var n=h/b,o=i/c,p=new THREE.Vector3;p.x=-a*Math.cos(d+n*e)*Math.sin(f+o*g),p.y=a*Math.cos(f+o*g),p.z=a*Math.sin(d+n*e)*Math.sin(f+o*g),this.vertices.push(p),l.push(this.vertices.length-1),m.push(new THREE.Vector2(n,1-o))}j.push(l),k.push(m)}for(i=0;i<this.heightSegments;i++)for(h=0;h<this.widthSegments;h++){b=j[i][h+1],c=j[i][h],d=j[i+1][h],e=j[i+1][h+1],f=this.vertices[b].clone().normalize(),g=this.vertices[c].clone().normalize();var l=this.vertices[d].clone().normalize(),m=this.vertices[e].clone().normalize(),n=k[i][h+1].clone(),o=k[i][h].clone(),p=k[i+1][h].clone(),q=k[i+1][h+1].clone();Math.abs(this.vertices[b].y)===this.radius?(n.x=(n.x+o.x)/2,this.faces.push(new THREE.Face3(b,d,e,[f,l,m])),this.faceVertexUvs[0].push([n,p,q])):Math.abs(this.vertices[d].y)===this.radius?(p.x=(p.x+q.x)/2,this.faces.push(new THREE.Face3(b,c,d,[f,g,l])),this.faceVertexUvs[0].push([n,o,p])):(this.faces.push(new THREE.Face3(b,c,e,[f,g,m])),this.faceVertexUvs[0].push([n,o,q]),this.faces.push(new THREE.Face3(c,d,e,[g.clone(),l,m.clone()])),this.faceVertexUvs[0].push([o.clone(),p,q.clone()]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50,void 0===b.bevelThickness&&(b.bevelThickness=10),void 0===b.bevelSize&&(b.bevelSize=8),void 0===b.bevelEnabled&&(b.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,c,b)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(a,b,c,d,e){for(THREE.Geometry.call(this),this.radius=a||100,this.tube=b||40,this.radialSegments=c||8,this.tubularSegments=d||6,this.arc=e||2*Math.PI,e=new THREE.Vector3,a=[],b=[],c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=c/this.radialSegments*Math.PI*2;e.x=this.radius*Math.cos(f),e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f),h.y=(this.radius+this.tube*Math.cos(g))*Math.sin(f),h.z=this.tube*Math.sin(g),this.vertices.push(h),a.push(new THREE.Vector2(d/this.tubularSegments,c/this.radialSegments)),b.push(h.clone().sub(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){e=(this.tubularSegments+1)*c+d-1;var f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,i=new THREE.Face3(e,f,h,[b[e].clone(),b[f].clone(),b[h].clone()]);
this.faces.push(i),this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[h].clone()]),i=new THREE.Face3(f,g,h,[b[f].clone(),b[g].clone(),b[h].clone()]),this.faces.push(i),this.faceVertexUvs[0].push([a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids(),this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);return a*=b/c,b=Math.cos(a),f*=d*(2+b)*.5,g=d*(2+b)*g*.5,d=e*d*Math.sin(a)*.5,new THREE.Vector3(f,g,d)}for(THREE.Geometry.call(this),this.radius=a||100,this.tube=b||40,this.radialSegments=c||64,this.tubularSegments=d||8,this.p=e||2,this.q=f||3,this.heightScale=g||1,this.grid=Array(this.radialSegments),c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,a=0;a<this.radialSegments;++a)for(this.grid[a]=Array(this.tubularSegments),b=a/this.radialSegments*2*this.p*Math.PI,f=h(b,this.q,this.p,this.radius,this.heightScale),b=h(b+.01,this.q,this.p,this.radius,this.heightScale),c.subVectors(b,f),d.addVectors(b,f),e.crossVectors(c,d),d.crossVectors(e,c),e.normalize(),d.normalize(),b=0;b<this.tubularSegments;++b){var i=b/this.tubularSegments*2*Math.PI;g=-this.tube*Math.cos(i);var i=this.tube*Math.sin(i),j=new THREE.Vector3;j.x=f.x+g*d.x+i*e.x,j.y=f.y+g*d.y+i*e.y,j.z=f.z+g*d.z+i*e.z,this.grid[a][b]=this.vertices.push(j)-1}for(a=0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){e=(a+1)%this.radialSegments,f=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][f],f=this.grid[a][f],g=new THREE.Vector2(a/this.radialSegments,b/this.tubularSegments);var i=new THREE.Vector2((a+1)/this.radialSegments,b/this.tubularSegments),j=new THREE.Vector2((a+1)/this.radialSegments,(b+1)/this.tubularSegments),k=new THREE.Vector2(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face3(c,d,f)),this.faceVertexUvs[0].push([g,i,k]),this.faces.push(new THREE.Face3(d,e,f)),this.faceVertexUvs[0].push([i.clone(),j,k.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(a,b,c,d,e){THREE.Geometry.call(this),this.path=a,this.segments=b||64,this.radius=c||1,this.radialSegments=d||8,this.closed=e||!1,this.grid=[];var f,g;d=this.segments+1;var h,i,j;e=new THREE.Vector3;var k,l;for(b=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),k=b.normals,l=b.binormals,this.tangents=b.tangents,this.normals=k,this.binormals=l,b=0;d>b;b++)for(this.grid[b]=[],c=b/(d-1),j=a.getPointAt(c),f=k[b],g=l[b],c=0;c<this.radialSegments;c++)h=c/this.radialSegments*2*Math.PI,i=-this.radius*Math.cos(h),h=this.radius*Math.sin(h),e.copy(j),e.x+=i*f.x+h*g.x,e.y+=i*f.y+h*g.y,e.z+=i*f.z+h*g.z,this.grid[b][c]=this.vertices.push(new THREE.Vector3(e.x,e.y,e.z))-1;for(b=0;b<this.segments;b++)for(c=0;c<this.radialSegments;c++)e=this.closed?(b+1)%this.segments:b+1,k=(c+1)%this.radialSegments,a=this.grid[b][c],d=this.grid[e][c],e=this.grid[e][k],k=this.grid[b][k],l=new THREE.Vector2(b/this.segments,c/this.radialSegments),f=new THREE.Vector2((b+1)/this.segments,c/this.radialSegments),g=new THREE.Vector2((b+1)/this.segments,(c+1)/this.radialSegments),i=new THREE.Vector2(b/this.segments,(c+1)/this.radialSegments),this.faces.push(new THREE.Face3(a,d,k)),this.faceVertexUvs[0].push([l,f,i]),this.faces.push(new THREE.Face3(d,e,k)),this.faceVertexUvs[0].push([f.clone(),g,i.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4;b+=1;var j,k,l;for(this.tangents=e,this.normals=f,this.binormals=g,j=0;b>j;j++)k=j/(b-1),e[j]=a.getTangentAt(k),e[j].normalize();for(f[0]=new THREE.Vector3,g[0]=new THREE.Vector3,a=Number.MAX_VALUE,j=Math.abs(e[0].x),k=Math.abs(e[0].y),l=Math.abs(e[0].z),a>=j&&(a=j,d.set(1,0,0)),a>=k&&(a=k,d.set(0,1,0)),a>=l&&d.set(0,0,1),h.crossVectors(e[0],d).normalize(),f[0].crossVectors(e[0],h),g[0].crossVectors(e[0],f[0]),j=1;b>j;j++)f[j]=f[j-1].clone(),g[j]=g[j-1].clone(),h.crossVectors(e[j-1],e[j]),1e-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[j-1].dot(e[j]),-1,1)),f[j].applyMatrix4(i.makeRotationAxis(h,d))),g[j].crossVectors(e[j],f[j]);if(c)for(d=Math.acos(THREE.Math.clamp(f[0].dot(f[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(f[0],f[b-1]))&&(d=-d),j=1;b>j;j++)f[j].applyMatrix4(i.makeRotationAxis(e[j],d*j)),g[j].crossVectors(e[j],f[j])},THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;return a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5,b.uv=new THREE.Vector2(c,1-a),b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.add(a).add(b).add(c).divideScalar(3),i.faces.push(d),d=d.centroid,d=Math.atan2(d.z,-d.x),i.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function g(a,b){var c=Math.pow(2,b);Math.pow(4,b);for(var d=e(i.vertices[a.a]),g=e(i.vertices[a.b]),h=e(i.vertices[a.c]),j=[],k=0;c>=k;k++){j[k]=[];for(var l=e(d.clone().lerp(h,k/c)),m=e(g.clone().lerp(h,k/c)),n=c-k,o=0;n>=o;o++)j[k][o]=0==o&&k==c?l:e(l.clone().lerp(m,o/n))}for(k=0;c>k;k++)for(o=0;2*(c-k)-1>o;o++)d=Math.floor(o/2),0==o%2?f(j[k][d+1],j[k+1][d],j[k][d]):f(j[k][d+1],j[k+1][d+1],j[k+1][d])}function h(a,b,c){return 0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y)),0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y)),a.clone()}THREE.Geometry.call(this),c=c||1,d=d||0;for(var i=this,j=0,k=a.length;k>j;j++)e(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));a=this.vertices;for(var l=[],j=0,k=b.length;k>j;j++){var m=a[b[j][0]],n=a[b[j][1]],o=a[b[j][2]];l[j]=new THREE.Face3(m.index,n.index,o.index,[m.clone(),n.clone(),o.clone()])}for(j=0,k=l.length;k>j;j++)g(l[j],d);for(j=0,k=this.faceVertexUvs[0].length;k>j;j++)b=this.faceVertexUvs[0][j],d=b[0].x,a=b[1].x,l=b[2].x,m=Math.max(d,Math.max(a,l)),n=Math.min(d,Math.min(a,l)),m>.9&&.1>n&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>l&&(b[2].x+=1));for(j=0,k=this.vertices.length;k>j;j++)this.vertices[j].multiplyScalar(c);this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(a,b){this.radius=a,this.detail=b;var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);var d,e,f,g,h=this.vertices,i=this.faces,j=this.faceVertexUvs[0],k=b+1;for(d=0;c>=d;d++)for(g=d/c,e=0;b>=e;e++)f=e/b,f=a(f,g),h.push(f);var l,m,n,o;for(d=0;c>d;d++)for(e=0;b>e;e++)a=d*k+e,h=d*k+e+1,g=(d+1)*k+e+1,f=(d+1)*k+e,l=new THREE.Vector2(e/b,d/c),m=new THREE.Vector2((e+1)/b,d/c),n=new THREE.Vector2((e+1)/b,(d+1)/c),o=new THREE.Vector2(e/b,(d+1)/c),i.push(new THREE.Face3(a,h,f)),j.push([l,m,o]),i.push(new THREE.Face3(h,g,f)),j.push([m.clone(),n,o.clone()]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(a){a=a||1;var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a,0,0),new THREE.Vector3,new THREE.Vector3(0,a,0),new THREE.Vector3,new THREE.Vector3(0,0,a)),b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775)),a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.Line.call(this,b,a,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(a,b,c,d,e,f){THREE.Object3D.call(this),void 0===d&&(d=16776960),void 0===c&&(c=1),void 0===e&&(e=.2*c),void 0===f&&(f=.2*e),this.position=b,b=new THREE.Geometry,b.vertices.push(new THREE.Vector3(0,0,0)),b.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(b,new THREE.LineBasicMaterial({color:d})),this.line.matrixAutoUpdate=!1,this.add(this.line),b=new THREE.CylinderGeometry(0,.5,1,5,1),b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),this.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:d})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(c,e,f)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var a,b=new THREE.Vector3;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(b.set(c.z,0,-c.x).normalize(),a=Math.acos(c.y),this.quaternion.setFromAxisAngle(b,a))}}(),THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a),void 0===c&&(c=.2*b),this.line.scale.set(1,a,1),this.line.updateMatrix(),this.cone.scale.set(c,b,c),this.cone.position.y=a,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a),this.cone.material.color.setHex(a)},THREE.BoxHelper=function(a){var b=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=b;var c=new THREE.Geometry;c.vertices.push(b[0],b[1],b[1],b[2],b[2],b[3],b[3],b[0],b[4],b[5],b[5],b[6],b[6],b[7],b[7],b[4],b[0],b[4],b[1],b[5],b[2],b[6],b[3],b[7]),THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==a&&this.update(a)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,b=b.boundingBox.max,d=this.vertices;d[0].set(b.x,b.y,b.z),d[1].set(c.x,b.y,b.z),d[2].set(c.x,c.y,b.z),d[3].set(b.x,c.y,b.z),d[4].set(b.x,b.y,c.z),d[5].set(c.x,b.y,c.z),d[6].set(c.x,c.y,c.z),d[7].set(b.x,c.y,c.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(a){function b(a,b,d){c(a,d),c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3),d.colors.push(new THREE.Color(b)),void 0===f[a]&&(f[a]=[]),f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={};b("n1","n2",16755200),b("n2","n4",16755200),b("n4","n3",16755200),b("n3","n1",16755200),b("f1","f2",16755200),b("f2","f4",16755200),b("f4","f3",16755200),b("f3","f1",16755200),b("n1","f1",16755200),b("n2","f2",16755200),b("n3","f3",16755200),b("n4","f4",16755200),b("p","n1",16711680),b("p","n2",16711680),b("p","n3",16711680),b("p","n4",16711680),b("u1","u2",43775),b("u2","u3",43775),b("u3","u1",43775),b("c","t",16777215),b("p","c",3355443),b("cn1","cn2",3355443),b("cn3","cn4",3355443),b("cf1","cf2",3355443),b("cf3","cf4",3355443),THREE.Line.call(this,d,e,THREE.LinePieces),this.camera=a,this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=f,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function d(d,f,g,h){if(a.set(f,g,h),c.unprojectVector(a,b),d=e.pointMap[d],void 0!==d)for(f=0,g=d.length;g>f;f++)e.geometry.vertices[d[f]].copy(a)}var e=this;b.projectionMatrix.copy(this.camera.projectionMatrix),d("c",0,0,-1),d("t",0,0,1),d("n1",-1,-1,-1),d("n2",1,-1,-1),d("n3",-1,1,-1),d("n4",1,1,-1),d("f1",-1,-1,1),d("f2",1,-1,1),d("f3",-1,1,1),d("f4",1,1,1),d("u1",.7,1.1,-1),d("u2",-.7,1.1,-1),d("u3",0,2,-1),d("cf1",-1,0,1),d("cf2",1,0,1),d("cf3",0,-1,1),d("cf4",0,1,1),d("cn1",-1,0,-1),d("cn2",1,0,-1),d("cn3",0,-1,-1),d("cn4",0,1,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,b=b||1;var c=new THREE.PlaneGeometry(b,b),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Mesh(c,d),this.add(this.lightPlane),c=new THREE.Geometry,c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3),d=new THREE.LineBasicMaterial({fog:!1}),d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(c,d),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld),b.setFromMatrixPosition(this.light.target.matrixWorld),c.subVectors(b,a),this.lightPlane.lookAt(c),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(c),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(a,b){var c=void 0!==b?b:16777215,d=[0,0],e={},f=function(a,b){return a-b},g=["a","b","c"],h=new THREE.BufferGeometry,i=a.geometry.clone();i.mergeVertices(),i.computeFaceNormals();for(var j=i.vertices,i=i.faces,k=0,l=0,m=i.length;m>l;l++)for(var n=i[l],o=0;3>o;o++){d[0]=n[g[o]],d[1]=n[g[(o+1)%3]],d.sort(f);var p=d.toString();void 0===e[p]?(e[p]={vert1:d[0],vert2:d[1],face1:l,face2:void 0},k++):e[p].face2=l}h.addAttribute("position",Float32Array,2*k,3),d=h.attributes.position.array,f=0;for(p in e)g=e[p],(void 0===g.face2||.9999>i[g.face1].normal.dot(i[g.face2].normal))&&(k=j[g.vert1],d[f++]=k.x,d[f++]=k.y,d[f++]=k.z,k=j[g.vert2],d[f++]=k.x,d[f++]=k.y,d[f++]=k.z);THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a,this.size=void 0!==b?b:1,a=void 0!==c?c:16776960,d=void 0!==d?d:1,b=new THREE.Geometry,c=0;for(var e=this.object.geometry.faces.length;e>c;c++)b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3);THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:a,linewidth:d}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var a=new THREE.Vector3;return function(b){this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld),b=this.geometry.vertices;for(var c=this.object.geometry.faces,d=this.object.matrixWorld,e=0,f=c.length;f>e;e++){var g=c[e];a.copy(g.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var h=2*e;b[h].copy(g.centroid).applyMatrix4(d),b[h+1].addVectors(b[h],a)}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var e=-a;a>=e;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a),this.color2.set(b),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(a,b){for(THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color],a=new THREE.SphereGeometry(b,4,2),a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),b=0;8>b;b++)a.faces[b].color=this.colors[4>b?0:1];b=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(a,b),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(a,b){this.light=a,this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,c,d),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(a){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,a=new THREE.CylinderGeometry(0,1,1,8,1,!0),a.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),a.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1e4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c),a.setFromMatrixPosition(this.light.matrixWorld),b.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(b.sub(a)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(a,b,c,d){this.object=a,this.size=void 0!==b?b:1,b=void 0!==c?c:16711680,d=void 0!==d?d:1,c=new THREE.Geometry,a=a.geometry.faces;for(var e=0,f=a.length;f>e;e++)for(var g=0,h=a[e].vertexNormals.length;h>g;g++)c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(){var a=new THREE.Vector3;return function(b){b=["a","b","c","d"],this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var c=this.geometry.vertices,d=this.object.geometry.vertices,e=this.object.geometry.faces,f=this.object.matrixWorld,g=0,h=0,i=e.length;i>h;h++)for(var j=e[h],k=0,l=j.vertexNormals.length;l>k;k++){var m=j.vertexNormals[k];c[g].copy(d[j[b[k]]]).applyMatrix4(f),a.copy(m).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),a.add(c[g]),g+=1,c[g].copy(a),g+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(a,b,c,d){this.object=a,this.size=void 0!==b?b:1,b=void 0!==c?c:255,d=void 0!==d?d:1,c=new THREE.Geometry,a=a.geometry.faces;for(var e=0,f=a.length;f>e;e++)for(var g=0,h=a[e].vertexTangents.length;h>g;g++)c.vertices.push(new THREE.Vector3),c.vertices.push(new THREE.Vector3);THREE.Line.call(this,c,new THREE.LineBasicMaterial({color:b,linewidth:d}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(){var a=new THREE.Vector3;return function(b){b=["a","b","c","d"],this.object.updateMatrixWorld(!0);for(var c=this.geometry.vertices,d=this.object.geometry.vertices,e=this.object.geometry.faces,f=this.object.matrixWorld,g=0,h=0,i=e.length;i>h;h++)for(var j=e[h],k=0,l=j.vertexTangents.length;l>k;k++){var m=j.vertexTangents[k];c[g].copy(d[j[b[k]]]).applyMatrix4(f),a.copy(m).transformDirection(f).multiplyScalar(this.size),a.add(c[g]),g+=1,c[g].copy(a),g+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215,d=[0,0],e={},f=function(a,b){return a-b},g=["a","b","c"],h=new THREE.BufferGeometry;if(a.geometry instanceof THREE.Geometry){for(var i=a.geometry.vertices,j=a.geometry.faces,k=0,l=new Uint32Array(6*j.length),m=0,n=j.length;n>m;m++)for(var o=j[m],p=0;3>p;p++){d[0]=o[g[p]],d[1]=o[g[(p+1)%3]],d.sort(f);var q=d.toString();void 0===e[q]&&(l[2*k]=d[0],l[2*k+1]=d[1],e[q]=!0,k++)}for(h.addAttribute("position",Float32Array,2*k,3),d=h.attributes.position.array,m=0,n=k;n>m;m++)for(p=0;2>p;p++)k=i[l[2*m+p]],g=6*m+3*p,d[g+0]=k.x,d[g+1]=k.y,d[g+2]=k.z}else if(a.geometry instanceof THREE.BufferGeometry&&void 0!==a.geometry.attributes.index){for(var i=a.geometry.attributes.position.array,n=a.geometry.attributes.index.array,j=a.geometry.offsets,k=0,l=new Uint32Array(2*n.length),o=0,r=j.length;r>o;++o)for(var p=j[o].start,q=j[o].count,g=j[o].index,m=p,s=p+q;s>m;m+=3)for(p=0;3>p;p++)d[0]=g+n[m+p],d[1]=g+n[m+(p+1)%3],d.sort(f),q=d.toString(),void 0===e[q]&&(l[2*k]=d[0],l[2*k+1]=d[1],e[q]=!0,k++);for(h.addAttribute("position",Float32Array,2*k,3),d=h.attributes.position.array,m=0,n=k;n>m;m++)for(p=0;2>p;p++)g=6*m+3*p,k=3*l[2*m+p],d[g+0]=i[k],d[g+1]=i[k+1],d[g+2]=i[k+2]}else if(a.geometry instanceof THREE.BufferGeometry)for(i=a.geometry.attributes.position.array,k=i.length/3,l=k/3,h.addAttribute("position",Float32Array,2*k,3),d=h.attributes.position.array,m=0,n=l;n>m;m++)for(p=0;3>p;p++)g=18*m+6*p,l=9*m+3*p,d[g+0]=i[l],d[g+1]=i[l+1],d[g+2]=i[l+2],k=9*m+(p+1)%3*3,d[g+3]=i[k],d[g+4]=i[k+1],d[g+5]=i[k+2];THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==a&&this.add(a,b,c,d,e)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1),void 0===c&&(c=0),void 0===f&&(f=1),void 0===e&&(e=new THREE.Color(16777215)),void 0===d&&(d=THREE.NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})},THREE.LensFlare.prototype.updateLensFlares=function(){var a,b,c=this.lensFlares.length,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;c>a;a++)b=this.lensFlares[a],b.x=this.positionScreen.x+d*b.distance,b.y=this.positionScreen.y+e*b.distance,b.wantedRotation=b.x*Math.PI*.25,b.rotation+=.25*(b.wantedRotation-b.rotation)},THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b),this.animationsMap={},this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[a]=b,this.animationsList.push(b)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b,c=/([a-z]+)(\d+)/,d={},e=this.geometry,f=0,g=e.morphTargets.length;g>f;f++){var h=e.morphTargets[f].name.match(c);if(h&&1<h.length){var i=h[1];d[i]||(d[i]={start:1/0,end:-1/0}),h=d[i],f<h.start&&(h.start=f),f>h.end&&(h.end=f),b||(b=i)}}for(i in d)h=d[i],this.createAnimation(i,h.start,h.end,a);this.firstAnimation=b},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){(a=this.animationsMap[a])&&(a.direction=1,a.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){(a=this.animationsMap[a])&&(a.direction=-1,a.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;return(a=this.animationsMap[a])&&(b=a.time),b},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;return(a=this.animationsMap[a])&&(b=a.duration),b},THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(a){(a=this.animationsMap[a])&&(a.active=!1)},THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;c>b;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a,d.mirroredLoop?(d.time>d.duration||0>d.time)&&(d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)):(d.time%=d.duration,0>d.time&&(d.time+=d.duration));var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f),e=d.time%e/e,d.directionBackwards&&(e=1-e),this.morphTargetInfluences[d.currentFrame]=e*g,this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}},THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";return b.shaderSource(e,g+a.fragmentShader),b.shaderSource(f,g+a.vertexShader),b.compileShader(e),b.compileShader(f),b.attachShader(d,e),b.attachShader(d,f),b.linkProgram(d),d}var b,c,d,e,f,g,h,i,j,k,l,m,n;this.init=function(o){b=o.context,c=o,d=o.getPrecision(),e=new Float32Array(16),f=new Uint16Array(6),o=0,e[o++]=-1,e[o++]=-1,e[o++]=0,e[o++]=0,e[o++]=1,e[o++]=-1,e[o++]=1,e[o++]=0,e[o++]=1,e[o++]=1,e[o++]=1,e[o++]=1,e[o++]=-1,e[o++]=1,e[o++]=0,e[o++]=1,o=0,f[o++]=0,f[o++]=1,f[o++]=2,f[o++]=0,f[o++]=2,f[o++]=3,g=b.createBuffer(),h=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,g),b.bufferData(b.ARRAY_BUFFER,e,b.STATIC_DRAW),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h),b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW),i=b.createTexture(),j=b.createTexture(),b.bindTexture(b.TEXTURE_2D,i),b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),b.bindTexture(b.TEXTURE_2D,j),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST),0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,l=a(THREE.ShaderFlares.lensFlare,d)):(k=!0,l=a(THREE.ShaderFlares.lensFlareVertexTexture,d)),m={},n={},m.vertex=b.getAttribLocation(l,"position"),m.uv=b.getAttribLocation(l,"uv"),n.renderType=b.getUniformLocation(l,"renderType"),n.map=b.getUniformLocation(l,"map"),n.occlusionMap=b.getUniformLocation(l,"occlusionMap"),n.opacity=b.getUniformLocation(l,"opacity"),n.color=b.getUniformLocation(l,"color"),n.scale=b.getUniformLocation(l,"scale"),n.rotation=b.getUniformLocation(l,"rotation"),n.screenPosition=b.getUniformLocation(l,"screenPosition")},this.render=function(a,d,e,f){a=a.__webglFlares;var o=a.length;if(o){var p=new THREE.Vector3,q=f/e,r=.5*e,s=.5*f,t=16/f,u=new THREE.Vector2(t*q,t),v=new THREE.Vector3(1,1,0),w=new THREE.Vector2(1,1),x=n,t=m;b.useProgram(l),b.enableVertexAttribArray(m.vertex),b.enableVertexAttribArray(m.uv),b.uniform1i(x.occlusionMap,0),b.uniform1i(x.map,1),b.bindBuffer(b.ARRAY_BUFFER,g),b.vertexAttribPointer(t.vertex,2,b.FLOAT,!1,16,0),b.vertexAttribPointer(t.uv,2,b.FLOAT,!1,16,8),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h),b.disable(b.CULL_FACE),b.depthMask(!1);var y,z,A,B,C;for(y=0;o>y;y++)if(t=16/f,u.set(t*q,t),B=a[y],p.set(B.matrixWorld.elements[12],B.matrixWorld.elements[13],B.matrixWorld.elements[14]),p.applyMatrix4(d.matrixWorldInverse),p.applyProjection(d.projectionMatrix),v.copy(p),w.x=v.x*r+r,w.y=v.y*s+s,k||0<w.x&&w.x<e&&0<w.y&&w.y<f)for(b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,i),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,w.x-8,w.y-8,16,16,0),b.uniform1i(x.renderType,0),b.uniform2f(x.scale,u.x,u.y),b.uniform3f(x.screenPosition,v.x,v.y,v.z),b.disable(b.BLEND),b.enable(b.DEPTH_TEST),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,j),b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,w.x-8,w.y-8,16,16,0),b.uniform1i(x.renderType,1),b.disable(b.DEPTH_TEST),b.activeTexture(b.TEXTURE1),b.bindTexture(b.TEXTURE_2D,i),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0),B.positionScreen.copy(v),B.customUpdateCallback?B.customUpdateCallback(B):B.updateLensFlares(),b.uniform1i(x.renderType,2),b.enable(b.BLEND),z=0,A=B.lensFlares.length;A>z;z++)C=B.lensFlares[z],.001<C.opacity&&.001<C.scale&&(v.x=C.x,v.y=C.y,v.z=C.z,t=C.size*C.scale/f,u.x=t*q,u.y=t,b.uniform3f(x.screenPosition,v.x,v.y,v.z),b.uniform2f(x.scale,u.x,u.y),b.uniform1f(x.rotation,C.rotation),b.uniform1f(x.opacity,C.opacity),b.uniform3f(x.color,C.color.r,C.color.g,C.color.b),c.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),c.setTexture(C.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));
b.enable(b.CULL_FACE),b.enable(b.DEPTH_TEST),b.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context,b=g,g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h}),d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0}),e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,skinning:!0}),f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),c._shadowPass=!0,d._shadowPass=!0,e._shadowPass=!0,f._shadowPass=!0},this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)},this.update=function(l,m){var n,o,p,q,r,s,t,u,v,w=[];for(q=0,a.clearColor(1,1,1,1),a.disable(a.BLEND),a.enable(a.CULL_FACE),a.frontFace(a.CCW),a.cullFace(b.shadowMapCullFace===THREE.CullFaceFront?a.FRONT:a.BACK),b.setDepthTest(!0),n=0,o=l.__lights.length;o>n;n++)if(p=l.__lights[n],p.castShadow)if(p instanceof THREE.DirectionalLight&&p.shadowCascade)for(r=0;r<p.shadowCascadeCount;r++){var x;if(p.shadowCascadeArray[r])x=p.shadowCascadeArray[r];else{v=p,t=r,x=new THREE.DirectionalLight,x.isVirtual=!0,x.onlyShadow=!0,x.castShadow=!0,x.shadowCameraNear=v.shadowCameraNear,x.shadowCameraFar=v.shadowCameraFar,x.shadowCameraLeft=v.shadowCameraLeft,x.shadowCameraRight=v.shadowCameraRight,x.shadowCameraBottom=v.shadowCameraBottom,x.shadowCameraTop=v.shadowCameraTop,x.shadowCameraVisible=v.shadowCameraVisible,x.shadowDarkness=v.shadowDarkness,x.shadowBias=v.shadowCascadeBias[t],x.shadowMapWidth=v.shadowCascadeWidth[t],x.shadowMapHeight=v.shadowCascadeHeight[t],x.pointsWorld=[],x.pointsFrustum=[],u=x.pointsWorld,s=x.pointsFrustum;for(var y=0;8>y;y++)u[y]=new THREE.Vector3,s[y]=new THREE.Vector3;u=v.shadowCascadeNearZ[t],v=v.shadowCascadeFarZ[t],s[0].set(-1,-1,u),s[1].set(1,-1,u),s[2].set(-1,1,u),s[3].set(1,1,u),s[4].set(-1,-1,v),s[5].set(1,-1,v),s[6].set(-1,1,v),s[7].set(1,1,v),x.originalCamera=m,s=new THREE.Gyroscope,s.position=p.shadowCascadeOffset,s.add(x),s.add(x.target),m.add(s),p.shadowCascadeArray[r]=x,console.log("Created virtualLight",x)}t=p,u=r,v=t.shadowCascadeArray[u],v.position.copy(t.position),v.target.position.copy(t.target.position),v.lookAt(v.target),v.shadowCameraVisible=t.shadowCameraVisible,v.shadowDarkness=t.shadowDarkness,v.shadowBias=t.shadowCascadeBias[u],s=t.shadowCascadeNearZ[u],t=t.shadowCascadeFarZ[u],v=v.pointsFrustum,v[0].z=s,v[1].z=s,v[2].z=s,v[3].z=s,v[4].z=t,v[5].z=t,v[6].z=t,v[7].z=t,w[q]=x,q++}else w[q]=p,q++;for(n=0,o=w.length;o>n;n++){if(p=w[n],p.shadowMap||(r=THREE.LinearFilter,b.shadowMapType===THREE.PCFSoftShadowMap&&(r=THREE.NearestFilter),p.shadowMap=new THREE.WebGLRenderTarget(p.shadowMapWidth,p.shadowMapHeight,{minFilter:r,magFilter:r,format:THREE.RGBAFormat}),p.shadowMapSize=new THREE.Vector2(p.shadowMapWidth,p.shadowMapHeight),p.shadowMatrix=new THREE.Matrix4),!p.shadowCamera){if(p instanceof THREE.SpotLight)p.shadowCamera=new THREE.PerspectiveCamera(p.shadowCameraFov,p.shadowMapWidth/p.shadowMapHeight,p.shadowCameraNear,p.shadowCameraFar);else{if(!(p instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}p.shadowCamera=new THREE.OrthographicCamera(p.shadowCameraLeft,p.shadowCameraRight,p.shadowCameraTop,p.shadowCameraBottom,p.shadowCameraNear,p.shadowCameraFar)}l.add(p.shadowCamera),!0===l.autoUpdate&&l.updateMatrixWorld()}if(p.shadowCameraVisible&&!p.cameraHelper&&(p.cameraHelper=new THREE.CameraHelper(p.shadowCamera),p.shadowCamera.add(p.cameraHelper)),p.isVirtual&&x.originalCamera==m){for(r=m,q=p.shadowCamera,s=p.pointsFrustum,v=p.pointsWorld,i.set(1/0,1/0,1/0),j.set(-1/0,-1/0,-1/0),t=0;8>t;t++)u=v[t],u.copy(s[t]),THREE.ShadowMapPlugin.__projector.unprojectVector(u,r),u.applyMatrix4(q.matrixWorldInverse),u.x<i.x&&(i.x=u.x),u.x>j.x&&(j.x=u.x),u.y<i.y&&(i.y=u.y),u.y>j.y&&(j.y=u.y),u.z<i.z&&(i.z=u.z),u.z>j.z&&(j.z=u.z);q.left=i.x,q.right=j.x,q.top=j.y,q.bottom=i.y,q.updateProjectionMatrix()}for(q=p.shadowMap,s=p.shadowMatrix,r=p.shadowCamera,r.position.setFromMatrixPosition(p.matrixWorld),k.setFromMatrixPosition(p.target.matrixWorld),r.lookAt(k),r.updateMatrixWorld(),r.matrixWorldInverse.getInverse(r.matrixWorld),p.cameraHelper&&(p.cameraHelper.visible=p.shadowCameraVisible),p.shadowCameraVisible&&p.cameraHelper.update(),s.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),s.multiply(r.projectionMatrix),s.multiply(r.matrixWorldInverse),h.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),g.setFromMatrix(h),b.setRenderTarget(q),b.clear(),v=l.__webglObjects,p=0,q=v.length;q>p;p++)t=v[p],s=t.object,t.render=!1,!s.visible||!s.castShadow||(s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!g.intersectsObject(s)||(s._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,s.matrixWorld),t.render=!0);for(p=0,q=v.length;q>p;p++)t=v[p],t.render&&(s=t.object,t=t.buffer,y=s.material instanceof THREE.MeshFaceMaterial?s.material.materials[0]:s.material,u=void 0!==s.geometry.morphTargets&&0<s.geometry.morphTargets.length&&y.morphTargets,y=s instanceof THREE.SkinnedMesh&&y.skinning,u=s.customDepthMaterial?s.customDepthMaterial:y?u?f:e:u?d:c,t instanceof THREE.BufferGeometry?b.renderBufferDirect(r,l.__lights,null,u,t,s):b.renderBuffer(r,l.__lights,null,u,t,s));for(v=l.__webglObjectsImmediate,p=0,q=v.length;q>p;p++)t=v[p],s=t.object,s.visible&&s.castShadow&&(s._modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,s.matrixWorld),b.renderImmediateObject(r,l.__lights,null,c,s))}n=b.getClearColor(),o=b.getClearAlpha(),a.clearColor(n.r,n.g,n.b,o),a.enable(a.BLEND),b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function a(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z;this.init=function(a){s=a.context,t=a,v=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),w=new Uint16Array([0,1,2,0,2,3]),x=s.createBuffer(),y=s.createBuffer(),s.bindBuffer(s.ARRAY_BUFFER,x),s.bufferData(s.ARRAY_BUFFER,v,s.STATIC_DRAW),s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,y),s.bufferData(s.ELEMENT_ARRAY_BUFFER,w,s.STATIC_DRAW),a=s.createProgram();var A=s.createShader(s.VERTEX_SHADER),B=s.createShader(s.FRAGMENT_SHADER);s.shaderSource(A,["precision "+t.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),s.shaderSource(B,["precision "+t.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),s.compileShader(A),s.compileShader(B),s.attachShader(a,A),s.attachShader(a,B),s.linkProgram(a),z=a,q=s.getAttribLocation(z,"position"),r=s.getAttribLocation(z,"uv"),b=s.getUniformLocation(z,"uvOffset"),c=s.getUniformLocation(z,"uvScale"),d=s.getUniformLocation(z,"rotation"),e=s.getUniformLocation(z,"scale"),f=s.getUniformLocation(z,"color"),g=s.getUniformLocation(z,"map"),h=s.getUniformLocation(z,"opacity"),i=s.getUniformLocation(z,"modelViewMatrix"),j=s.getUniformLocation(z,"projectionMatrix"),k=s.getUniformLocation(z,"fogType"),l=s.getUniformLocation(z,"fogDensity"),m=s.getUniformLocation(z,"fogNear"),n=s.getUniformLocation(z,"fogFar"),o=s.getUniformLocation(z,"fogColor"),p=s.getUniformLocation(z,"alphaTest"),a=document.createElement("canvas"),a.width=8,a.height=8,A=a.getContext("2d"),A.fillStyle="#ffffff",A.fillRect(0,0,a.width,a.height),u=new THREE.Texture(a),u.needsUpdate=!0},this.render=function(v,w,A,B){if(A=v.__webglSprites,B=A.length){s.useProgram(z),s.enableVertexAttribArray(q),s.enableVertexAttribArray(r),s.disable(s.CULL_FACE),s.enable(s.BLEND),s.bindBuffer(s.ARRAY_BUFFER,x),s.vertexAttribPointer(q,2,s.FLOAT,!1,16,0),s.vertexAttribPointer(r,2,s.FLOAT,!1,16,8),s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,y),s.uniformMatrix4fv(j,!1,w.projectionMatrix.elements),s.activeTexture(s.TEXTURE0),s.uniform1i(g,0);var C=0,D=0,E=v.fog;E?(s.uniform3f(o,E.color.r,E.color.g,E.color.b),E instanceof THREE.Fog?(s.uniform1f(m,E.near),s.uniform1f(n,E.far),s.uniform1i(k,1),D=C=1):E instanceof THREE.FogExp2&&(s.uniform1f(l,E.density),s.uniform1i(k,2),D=C=2)):(s.uniform1i(k,0),D=C=0);for(var F,G=[],E=0;B>E;E++)F=A[E],!1!==F.visible&&(F._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,F.matrixWorld),F.z=-F._modelViewMatrix.elements[14]);for(A.sort(a),E=0;B>E;E++)F=A[E],!1!==F.visible&&(w=F.material,s.uniform1f(p,w.alphaTest),s.uniformMatrix4fv(i,!1,F._modelViewMatrix.elements),G[0]=F.scale.x,G[1]=F.scale.y,F=v.fog&&w.fog?D:0,C!==F&&(s.uniform1i(k,F),C=F),null!==w.map?(s.uniform2f(b,w.map.offset.x,w.map.offset.y),s.uniform2f(c,w.map.repeat.x,w.map.repeat.y)):(s.uniform2f(b,0,0),s.uniform2f(c,1,1)),s.uniform1f(h,w.opacity),s.uniform3f(f,w.color.r,w.color.g,w.color.b),s.uniform1f(d,w.rotation),s.uniform2fv(e,G),t.setBlending(w.blending,w.blendEquation,w.blendSrc,w.blendDst),t.setDepthTest(w.depthTest),t.setDepthWrite(w.depthWrite),w.map&&w.map.image&&w.map.image.width?t.setTexture(w.map,0):t.setTexture(u,0),s.drawElements(s.TRIANGLES,6,s.UNSIGNED_SHORT,0));s.enable(s.CULL_FACE)}}},THREE.DepthPassPlugin=function(){this.enabled=!1,this.renderTarget=null;var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context,b=g,g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h}),d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0}),e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,skinning:!0}),f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),c._shadowPass=!0,d._shadowPass=!0,e._shadowPass=!0,f._shadowPass=!0},this.render=function(a,b){this.enabled&&this.update(a,b)},this.update=function(i,j){var k,l,m,n,o,p;for(a.clearColor(1,1,1,1),a.disable(a.BLEND),b.setDepthTest(!0),!0===i.autoUpdate&&i.updateMatrixWorld(),j.matrixWorldInverse.getInverse(j.matrixWorld),h.multiplyMatrices(j.projectionMatrix,j.matrixWorldInverse),g.setFromMatrix(h),b.setRenderTarget(this.renderTarget),b.clear(),p=i.__webglObjects,k=0,l=p.length;l>k;k++)m=p[k],o=m.object,m.render=!1,!o.visible||(o instanceof THREE.Mesh||o instanceof THREE.ParticleSystem)&&o.frustumCulled&&!g.intersectsObject(o)||(o._modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,o.matrixWorld),m.render=!0);var q;for(k=0,l=p.length;l>k;k++)m=p[k],m.render&&(o=m.object,m=m.buffer,o instanceof THREE.ParticleSystem&&!o.customDepthMaterial||((q=o.material instanceof THREE.MeshFaceMaterial?o.material.materials[0]:o.material)&&b.setMaterialFaces(o.material),n=0<o.geometry.morphTargets.length&&q.morphTargets,q=o instanceof THREE.SkinnedMesh&&q.skinning,n=o.customDepthMaterial?o.customDepthMaterial:q?n?f:e:n?d:c,m instanceof THREE.BufferGeometry?b.renderBufferDirect(j,i.__lights,null,n,m,o):b.renderBuffer(j,i.__lights,null,n,m,o)));for(p=i.__webglObjectsImmediate,k=0,l=p.length;l>k;k++)m=p[k],o=m.object,o.visible&&(o._modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,o.matrixWorld),b.renderImmediateObject(j,i.__lights,null,c,o));k=b.getClearColor(),l=b.getClearAlpha(),a.clearColor(k.r,k.g,k.b,l),a.enable(a.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},function(){for(var a,b=function(){},c=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeStamp","trace","warn"],d=c.length,e=window.console=window.console||{};d--;)a=c[d],e[a]||(e[a]=b)}();var Stats=function(){var a=Date.now(),b=a,c=0,d=1/0,e=0,f=0,g=1/0,h=0,i=0,j=0,k=document.createElement("div");k.id="stats",k.addEventListener("mousedown",function(a){a.preventDefault(),s(++j%2)},!1),k.style.cssText="width:80px;opacity:0.9;cursor:pointer";var l=document.createElement("div");l.id="fps",l.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002",k.appendChild(l);var m=document.createElement("div");m.id="fpsText",m.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",m.innerHTML="FPS",l.appendChild(m);var n=document.createElement("div");for(n.id="fpsGraph",n.style.cssText="position:relative;width:74px;height:30px;background-color:#0ff",l.appendChild(n);74>n.children.length;){var o=document.createElement("span");o.style.cssText="width:1px;height:30px;float:left;background-color:#113",n.appendChild(o)}var p=document.createElement("div");p.id="ms",p.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#020;display:none",k.appendChild(p);var q=document.createElement("div");q.id="msText",q.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",q.innerHTML="MS",p.appendChild(q);var r=document.createElement("div");for(r.id="msGraph",r.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0",p.appendChild(r);74>r.children.length;)o=document.createElement("span"),o.style.cssText="width:1px;height:30px;float:left;background-color:#131",r.appendChild(o);var s=function(a){switch(j=a){case 0:l.style.display="block",p.style.display="none";break;case 1:l.style.display="none",p.style.display="block"}};return{REVISION:11,domElement:k,setMode:s,begin:function(){a=Date.now()},end:function(){var j=Date.now();c=j-a,d=Math.min(d,c),e=Math.max(e,c),q.textContent=c+" MS ("+d+"-"+e+")";var k=Math.min(30,30-30*(c/200));return r.appendChild(r.firstChild).style.height=k+"px",i++,j>b+1e3&&(f=Math.round(1e3*i/(j-b)),g=Math.min(g,f),h=Math.max(h,f),m.textContent=f+" FPS ("+g+"-"+h+")",k=Math.min(30,30-30*(f/100)),n.appendChild(n.firstChild).style.height=k+"px",b=j,i=0),j},update:function(){a=this.end()}}};
//# sourceMappingURL=one-weekly.min.map